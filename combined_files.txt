File: ./docker-compose.e2e.yml
version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.e2e
    depends_on:
      - postgres
      - redis
    ports:
      - '61234:61234'
    environment:
      - TEST_SERVER_PORT=61234
  postgres:
    image: postgres:16.3-alpine
    environment:
      POSTGRES_DB: weather
      POSTGRES_PASSWORD: weather
      POSTGRES_USER: weather
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 3s
      timeout: 1s
      retries: 5
  redis:
    image: redis:7.2-alpine
    ports:
      - '6379:6379'
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 3s
      timeout: 1s
      retries: 5


File: ./tsconfig.node.json
{
  "compilerOptions": {
    "composite": true,
    "skipLibCheck": true,
    "module": "ESNext",
    "moduleResolution": "bundler",
    "allowSyntheticDefaultImports": true,
    "strict": true
  },
  "include": [
    "./vite.config.ts"
  ]
}


File: ./.codecov.yml
codecov:
  require_ci_to_pass: true
  notify:
    slack:
      default: off
      branches: master
  coverage:
    precision: 2
  comment:
    layout: "header, diff"
    behavior: default
    require_changes: false
    require_base: yes
  ignore:
    - "test/**"  # Ignore test files in coverage calculation


File: ./combined_files.txt


File: ./code.py
import os
import fnmatch

def read_gitignore(directory):
    gitignore_path = os.path.join(directory, '.gitignore')
    if os.path.isfile(gitignore_path):
        with open(gitignore_path, 'r') as file:
            ignore_patterns = file.read().splitlines()
        return ignore_patterns
    return []

def is_ignored(file_path, ignore_patterns):
    # Normalize the file path to avoid issues with different path formats
    file_path = os.path.normpath(file_path)
    for pattern in ignore_patterns:
        # Ignore comments and empty lines in .gitignore
        if pattern.strip() == '' or pattern.startswith('#'):
            continue
        # Handle directory patterns in .gitignore
        if pattern.endswith('/'):
            if fnmatch.fnmatch(file_path + '/', '*' + pattern):
                return True
        else:
            if fnmatch.fnmatch(file_path, '*' + pattern):
                return True
    return False

def combine_files(directory, output_file, ignore_patterns):
    with open(output_file, 'w', encoding='utf-8') as outfile:
        for root, dirs, files in os.walk(directory):
            # Exclude ignored directories
            dirs[:] = [d for d in dirs if not is_ignored(os.path.join(root, d), ignore_patterns)]

            for file in files:
                file_path = os.path.join(root, file)
                if not is_ignored(file_path, ignore_patterns):
                    try:
                        with open(file_path, 'r', encoding='utf-8') as infile:
                            outfile.write(f"File: {file_path}\n")
                            outfile.write(infile.read())
                            outfile.write("\n\n")
                    except UnicodeDecodeError:
                        print(f"Skipping file: {file_path} (Unicode decode error)")
                    except Exception as e:
                        print(f"Error processing file: {file_path}")
                        print(f"Error message: {str(e)}")

# Directory to scan
directory = '.'

# Output file name
output_file = 'combined_files.txt'

# Read ignore patterns from .gitignore file
ignore_patterns = read_gitignore(directory)

# Call the function to combine files
combine_files(directory, output_file, ignore_patterns)


File: ./Dockerfile.backend
FROM gradle:jdk21 AS build

WORKDIR /app

COPY build.gradle.kts settings.gradle.kts /app/
COPY gradle /app/gradle
COPY src /app/src

RUN gradle clean build -x test --no-daemon

FROM bellsoft/liberica-runtime-container:jdk-21-slim-musl

WORKDIR /app

COPY --from=build /app/build/libs/*.jar /app/app.jar

ENV JAVA_OPTS="-Xms512m -Duser.timezone=Europe/Tallinn"
ENV JAVA_TOOL_OPTIONS="-XX:MaxRAMPercentage=80"

ENV SERVER_PORT=8080

CMD ["sh", "-c", "java $JAVA_OPTS -Dserver.port=$SERVER_PORT -jar /app/app.jar"]


File: ./README.md
# Form Handler Application

[![Build & Test](https://github.com/ktenman/sectors/actions/workflows/ci.yml/badge.svg)](https://github.com/ktenman/sectors/actions/workflows/ci.yml)
[![CodeQL](https://img.shields.io/badge/CodeQL-analyzed-blue.svg)](https://github.com/ktenman/sectors/actions/workflows/github-code-scanning/codeql) [![codecov](https://codecov.io/gh/ktenman/sectors/main/graph/badge.svg)](https://codecov.io/gh/ktenman/sectors) [![Coverage](https://sonarcloud.io/api/project_badges/measure?project=sectors&metric=coverage)](https://sonarcloud.io/summary/new_code?id=sectors)
[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=sectors&metric=alert_status)](https://sonarcloud.io/summary/new_code?id=sectors)
[![Reliability Rating](https://sonarcloud.io/api/project_badges/measure?project=sectors&metric=reliability_rating)](https://sonarcloud.io/summary/new_code?id=sectors)
[![Security Rating](https://sonarcloud.io/api/project_badges/measure?project=sectors&metric=security_rating)](https://sonarcloud.io/summary/new_code?id=sectors)
[![Maintainability Rating](https://sonarcloud.io/api/project_badges/measure?project=sectors&metric=sqale_rating)](https://sonarcloud.io/summary/new_code?id=sectors)
[![Code Smells](https://sonarcloud.io/api/project_badges/measure?project=sectors&metric=code_smells)](https://sonarcloud.io/summary/new_code?id=sectors)
[![Technical Debt](https://sonarcloud.io/api/project_badges/measure?project=sectors&metric=sqale_index)](https://sonarcloud.io/summary/new_code?id=sectors)
[![Vulnerabilities](https://sonarcloud.io/api/project_badges/measure?project=sectors&metric=vulnerabilities)](https://sonarcloud.io/summary/new_code?id=sectors)
[![Duplicated Lines (%)](https://sonarcloud.io/api/project_badges/measure?project=sectors&metric=duplicated_lines_density)](https://sonarcloud.io/summary/new_code?id=sectors)

## Introduction

This Form Handler application is designed to streamline the process of submitting information through a dynamic form,
focusing on sectors selection, session management, and data persistence using modern web technologies.

![Profile Form page](screenshots/profile-form.jpeg)

## Prerequisites

Before you begin, ensure your system meets the following requirements:

- Java: v21.0.2
- Gradle: v8.5
- Node.js: v20.11.1
- npm: v10.2.4
- Docker: v25.0.2
- Docker Compose: v2.24.3

## Technical Stack

- **Backend**: Spring Boot v3.2
- **Frontend**:
    - **Build Tool**: Vite is used as the build tool for the frontend, leveraging its fast build times and efficient
      module replacement to enhance the development experience.
    - Vue.js v3.2
    - Bootstrap v5.3
- **Database**: PostgreSQL for data persistence and Flyway for database migration management.
- **Caching and Session Storage**: Redis, utilized for its performance benefits.
- **Testing**: A combination of MockMvc, Testcontainers, Mockito, AssertJ, and JUnit for robust testing coverage.

## Database Design

Our application utilizes three main tables to manage sectors, profiles, and the relationship between them. Below is an
overview of each table and their relationships:

### Tables Overview

- **`sector`**: Stores information about sectors. Each sector can have a parent sector, enabling a hierarchical
  structure.
    - **Columns**:
        - `id`: The primary key.
        - `name`: The name of the sector.
        - `parent_id`: Reference to another sector (self-referencing), allowing for sector hierarchy.
        - `created_at` & `updated_at`: Timestamps for record creation and updates.

- **`profile`**: Contains user profiles who have selected sectors and agreed to terms.
    - **Columns**:
        - `id`: The primary key.
        - `name`: Name of the user.
        - `agree_to_terms`: Boolean indicating agreement to terms.
        - `session_id`: Unique session ID for the user.
        - `created_at` & `updated_at`: Timestamps for record creation and updates.

- **`profile_sector`**: A junction table that links profiles to their selected sectors.
    - **Columns**:
        - `profile_id`: References the `profile` table.
        - `sector_id`: References the `sector` table.
        - Composite primary key (`profile_id`, `sector_id`) ensures unique associations.

### Relationships

- A **profile** can select multiple **sectors**, and a **sector** can be associated with multiple **profiles**,
  establishing a many-to-many relationship through the **profile_sector** table.
- **sectors** can have a hierarchical structure, where each **sector** may reference another **sector** as its parent.

## API Documentation

The application provides comprehensive API documentation using OpenAPI 3.0. You can access this documentation at:

- When running the application with Docker
  Compose: [http://localhost:8080/swagger-ui/index.html](http://localhost:8080/swagger-ui/index.html)
- When running the application directly through
  IntelliJ: [http://localhost:8081/swagger-ui/index.html](http://localhost:8081/swagger-ui/index.html)

## Setup and Running Instructions

### Docker Containers Setup

Initialize necessary Docker containers with Docker Compose tools to ensure the database and Redis services are up before
proceeding:

```bash
docker-compose -f compose.yml up -d
```

This step is crucial, especially before moving to production build, to ensure all dependent services are available.

### Backend Setup

Navigate to the backend directory and compile the Java application using Gradle:

```bash
./gradlew clean build
./gradlew bootRun
```

### Frontend Setup

Install frontend dependencies and start the development server:

```bash
npm install
npm run dev
```

## Running in Production

To run the application in production, you can use Docker Compose. This simplifies the deployment process by
orchestrating the startup of your application and its dependencies with a single command.

### Steps:

1. **Prepare the Environment:** Ensure all configuration files are correctly set up for production. This may
   include `.env` files or specific changes within `docker-compose.yml`.

2. **Build and Run with Docker Compose:** Navigate to the root directory of your project where the `docker-compose.yml`
   file is located. Run the following command:

```bash
docker-compose -f docker-compose.yml up -d
```

This command will start all services defined in your `docker-compose.yml` file in detached mode, running in the
background.

3. **Verify the Deployment:** Ensure all services are up and running. You can check the status of your Docker containers
   by executing:

```bash
docker ps
```

For logs and troubleshooting, use:

```bash
docker-compose -f docker-compose.yml logs -f
```

Replace `<service_name>` with the name of the service you want to inspect.

### Updating the Application

To update the application or its services after making changes:

1. Rebuild the services:

```bash
docker-compose -f docker-compose.yml build
```

2. Restart the services for the changes to take effect:

```bash
docker-compose -f docker-compose.yml up -d
```

# End-to-End Tests on Unix System

To run end-to-end (E2E) tests on a Unix-based system, follow these steps:

1. **Prepare the Environment**: Ensure all necessary configuration files are correctly set up for running E2E tests.

2. **Start Docker Containers**: Initialize the required Docker containers with Docker Compose to ensure the database and Redis services are up and running. Use the following command:

    ```bash
    docker-compose -f docker-compose.e2e.yml up -d
    ```

3. **Run E2E Tests**: Execute the Gradle command to run the E2E tests. Ensure to provide the `headless=true` flag to run the tests in headless mode, suitable for automated testing. Use the following command:

    ```bash
    export E2E=true
    ./gradlew test --info -Pheadless=true
    ```

4. **Verify Test Results**: After the tests have completed, review the test results for any failures or errors. You can access detailed logs to identify and troubleshoot any issues encountered during the E2E testing process.

By following these steps, you can effectively run end-to-end tests for the Form Handler application on your Unix-based system.

## Continuous Integration and Deployment

- A CI pipeline via GitHub Actions in the `.github` folder automates unit and integration tests.
- Dependabot keeps Maven and GitHub Actions versions up-to-date, automating dependency management.

## Note on Development Tools

- **Spring Boot DevTools** and **Actuator** provide enhanced development and monitoring capabilities.
- **Project Lombok** minimizes boilerplate code, improving code clarity and maintainability.
- This project is utilizing **Docker Compose support** introduced in Spring Boot 3.1.
- **Bootstrap** is used for frontend design, offering a wide range of responsive, mobile-first components.

## Key Features

- **Form Validation**: Ensures all required fields are filled before submission.
- **Dynamic Sector Selection**: Populates sectors from the database, offering real-time updates.
- **Data Persistence**: Securely stores submission data, allowing session-based edits.

---

This README aims to guide developers through setting up, running, and understanding the core functionalities and
technical aspects of the Form Handler application.


File: ./gradlew
#!/bin/sh

#
# Copyright © 2015-2021 the original authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

##############################################################################
#
#   Gradle start up script for POSIX generated by Gradle.
#
#   Important for running:
#
#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is
#       noncompliant, but you have some other compliant shell such as ksh or
#       bash, then to run this script, type that shell name before the whole
#       command line, like:
#
#           ksh Gradle
#
#       Busybox and similar reduced shells will NOT work, because this script
#       requires all of these POSIX shell features:
#         * functions;
#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,
#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;
#         * compound commands having a testable exit status, especially «case»;
#         * various built-in commands including «command», «set», and «ulimit».
#
#   Important for patching:
#
#   (2) This script targets any POSIX shell, so it avoids extensions provided
#       by Bash, Ksh, etc; in particular arrays are avoided.
#
#       The "traditional" practice of packing multiple parameters into a
#       space-separated string is a well documented source of bugs and security
#       problems, so this is (mostly) avoided, by progressively accumulating
#       options in "$@", and eventually passing that to Java.
#
#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,
#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;
#       see the in-line comments for details.
#
#       There are tweaks for specific operating systems such as AIX, CygWin,
#       Darwin, MinGW, and NonStop.
#
#   (3) This script is generated from the Groovy template
#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt
#       within the Gradle project.
#
#       You can find Gradle at https://github.com/gradle/gradle/.
#
##############################################################################

# Attempt to set APP_HOME

# Resolve links: $0 may be a link
app_path=$0

# Need this for daisy-chained symlinks.
while
    APP_HOME=${app_path%"${app_path##*/}"}  # leaves a trailing /; empty if no leading path
    [ -h "$app_path" ]
do
    ls=$( ls -ld "$app_path" )
    link=${ls#*' -> '}
    case $link in             #(
      /*)   app_path=$link ;; #(
      *)    app_path=$APP_HOME$link ;;
    esac
done

# This is normally unused
# shellcheck disable=SC2034
APP_BASE_NAME=${0##*/}
# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)
APP_HOME=$( cd "${APP_HOME:-./}" > /dev/null && pwd -P ) || exit

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD=maximum

warn () {
    echo "$*"
} >&2

die () {
    echo
    echo "$*"
    echo
    exit 1
} >&2

# OS specific support (must be 'true' or 'false').
cygwin=false
msys=false
darwin=false
nonstop=false
case "$( uname )" in                #(
  CYGWIN* )         cygwin=true  ;; #(
  Darwin* )         darwin=true  ;; #(
  MSYS* | MINGW* )  msys=true    ;; #(
  NONSTOP* )        nonstop=true ;;
esac

CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar


# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVACMD=$JAVA_HOME/jre/sh/java
    else
        JAVACMD=$JAVA_HOME/bin/java
    fi
    if [ ! -x "$JAVACMD" ] ; then
        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
else
    JAVACMD=java
    if ! command -v java >/dev/null 2>&1
    then
        die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
fi

# Increase the maximum file descriptors if we can.
if ! "$cygwin" && ! "$darwin" && ! "$nonstop" ; then
    case $MAX_FD in #(
      max*)
        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.
        # shellcheck disable=SC2039,SC3045
        MAX_FD=$( ulimit -H -n ) ||
            warn "Could not query maximum file descriptor limit"
    esac
    case $MAX_FD in  #(
      '' | soft) :;; #(
      *)
        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.
        # shellcheck disable=SC2039,SC3045
        ulimit -n "$MAX_FD" ||
            warn "Could not set maximum file descriptor limit to $MAX_FD"
    esac
fi

# Collect all arguments for the java command, stacking in reverse order:
#   * args from the command line
#   * the main class name
#   * -classpath
#   * -D...appname settings
#   * --module-path (only if needed)
#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.

# For Cygwin or MSYS, switch paths to Windows format before running java
if "$cygwin" || "$msys" ; then
    APP_HOME=$( cygpath --path --mixed "$APP_HOME" )
    CLASSPATH=$( cygpath --path --mixed "$CLASSPATH" )

    JAVACMD=$( cygpath --unix "$JAVACMD" )

    # Now convert the arguments - kludge to limit ourselves to /bin/sh
    for arg do
        if
            case $arg in                                #(
              -*)   false ;;                            # don't mess with options #(
              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath
                    [ -e "$t" ] ;;                      #(
              *)    false ;;
            esac
        then
            arg=$( cygpath --path --ignore --mixed "$arg" )
        fi
        # Roll the args list around exactly as many times as the number of
        # args, so each arg winds up back in the position where it started, but
        # possibly modified.
        #
        # NB: a `for` loop captures its iteration list before it begins, so
        # changing the positional parameters here affects neither the number of
        # iterations, nor the values presented in `arg`.
        shift                   # remove old arg
        set -- "$@" "$arg"      # push replacement arg
    done
fi


# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'

# Collect all arguments for the java command:
#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,
#     and any embedded shellness will be escaped.
#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be
#     treated as '${Hostname}' itself on the command line.

set -- \
        "-Dorg.gradle.appname=$APP_BASE_NAME" \
        -classpath "$CLASSPATH" \
        org.gradle.wrapper.GradleWrapperMain \
        "$@"

# Stop when "xargs" is not available.
if ! command -v xargs >/dev/null 2>&1
then
    die "xargs is not available"
fi

# Use "xargs" to parse quoted args.
#
# With -n1 it outputs one arg per line, with the quotes and backslashes removed.
#
# In Bash we could simply go:
#
#   readarray ARGS < <( xargs -n1 <<<"$var" ) &&
#   set -- "${ARGS[@]}" "$@"
#
# but POSIX shell has neither arrays nor command substitution, so instead we
# post-process each arg (as a line of input to sed) to backslash-escape any
# character that might be a shell metacharacter, then use eval to reverse
# that process (while maintaining the separation between arguments), and wrap
# the whole thing up as a single "set" statement.
#
# This will of course break if any of these variables contains a newline or
# an unmatched quote.
#

eval "set -- $(
        printf '%s\n' "$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS" |
        xargs -n1 |
        sed ' s~[^-[:alnum:]+,./:=@_]~\\&~g; ' |
        tr '\n' ' '
    )" '"$@"'

exec "$JAVACMD" "$@"


File: ./.gitignore
HELP.md
.gradle
build/
!gradle/wrapper/gradle-wrapper.jar
!**/src/main/**/build/
!**/src/test/**/build/

### STS ###
.apt_generated
.classpath
.factorypath
.project
.settings
.springBeans
.sts4-cache
bin/
!**/src/main/**/bin/
!**/src/test/**/bin/

### IntelliJ IDEA ###
.idea
*.iws
*.iml
*.ipr
out/
!**/src/main/**/out/
!**/src/test/**/out/

### NetBeans ###
/nbproject/private/
/nbbuild/
/dist/
/nbdist/
/.nb-gradle/

### VS Code ###
.vscode/


File: ./package-lock.json
{
  "name": "ui",
  "version": "0.0.1",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "ui",
      "version": "0.0.1",
      "dependencies": {
        "axios": "^1.7.2",
        "bootstrap": "^5.3.3",
        "vue": "^3.4.27",
        "vue-class-component": "^8.0.0-rc.1"
      },
      "devDependencies": {
        "@typescript-eslint/eslint-plugin": "^7.13.0",
        "@vitejs/plugin-vue": "^5.0.5",
        "eslint": "^8.57.0",
        "eslint-plugin-vue": "^9.26.0",
        "typescript": "^5.4.5",
        "vite": "^5.2.13",
        "vue-tsc": "^2.0.21"
      }
    },
    "node_modules/@aashutoshrathi/word-wrap": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/@aashutoshrathi/word-wrap/-/word-wrap-1.2.6.tgz",
      "integrity": "sha512-1Yjs2SvM8TflER/OD3cOjhWWOZb58A2t7wpE2S9XfBYTiIl+XFhQG2bjy4Pu1I+EAlCNUzRDYDdFwFYUKvXcIA==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/@babel/parser": {
      "version": "7.24.5",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.24.5.tgz",
      "integrity": "sha512-EOv5IK8arwh3LI47dz1b0tKUb/1uhHAnHJOrjgtQMIpu1uXd9mlFrJg9IUgGUgZ41Ch0K8REPTYpO7B76b4vJg==",
      "bin": {
        "parser": "bin/babel-parser.js"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@esbuild/aix-ppc64": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.20.2.tgz",
      "integrity": "sha512-D+EBOJHXdNZcLJRBkhENNG8Wji2kgc9AZ9KiPr1JuZjsNtyHzrsfLRrY0tk2H2aoFu6RANO1y1iPPUCDYWkb5g==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "aix"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/android-arm": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.20.2.tgz",
      "integrity": "sha512-t98Ra6pw2VaDhqNWO2Oph2LXbz/EJcnLmKLGBJwEwXX/JAN83Fym1rU8l0JUWK6HkIbWONCSSatf4sf2NBRx/w==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/android-arm64": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.20.2.tgz",
      "integrity": "sha512-mRzjLacRtl/tWU0SvD8lUEwb61yP9cqQo6noDZP/O8VkwafSYwZ4yWy24kan8jE/IMERpYncRt2dw438LP3Xmg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/android-x64": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.20.2.tgz",
      "integrity": "sha512-btzExgV+/lMGDDa194CcUQm53ncxzeBrWJcncOBxuC6ndBkKxnHdFJn86mCIgTELsooUmwUm9FkhSp5HYu00Rg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/darwin-arm64": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.20.2.tgz",
      "integrity": "sha512-4J6IRT+10J3aJH3l1yzEg9y3wkTDgDk7TSDFX+wKFiWjqWp/iCfLIYzGyasx9l0SAFPT1HwSCR+0w/h1ES/MjA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/darwin-x64": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.20.2.tgz",
      "integrity": "sha512-tBcXp9KNphnNH0dfhv8KYkZhjc+H3XBkF5DKtswJblV7KlT9EI2+jeA8DgBjp908WEuYll6pF+UStUCfEpdysA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/freebsd-arm64": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.20.2.tgz",
      "integrity": "sha512-d3qI41G4SuLiCGCFGUrKsSeTXyWG6yem1KcGZVS+3FYlYhtNoNgYrWcvkOoaqMhwXSMrZRl69ArHsGJ9mYdbbw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/freebsd-x64": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.20.2.tgz",
      "integrity": "sha512-d+DipyvHRuqEeM5zDivKV1KuXn9WeRX6vqSqIDgwIfPQtwMP4jaDsQsDncjTDDsExT4lR/91OLjRo8bmC1e+Cw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-arm": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.20.2.tgz",
      "integrity": "sha512-VhLPeR8HTMPccbuWWcEUD1Az68TqaTYyj6nfE4QByZIQEQVWBB8vup8PpR7y1QHL3CpcF6xd5WVBU/+SBEvGTg==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-arm64": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.20.2.tgz",
      "integrity": "sha512-9pb6rBjGvTFNira2FLIWqDk/uaf42sSyLE8j1rnUpuzsODBq7FvpwHYZxQ/It/8b+QOS1RYfqgGFNLRI+qlq2A==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-ia32": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.20.2.tgz",
      "integrity": "sha512-o10utieEkNPFDZFQm9CoP7Tvb33UutoJqg3qKf1PWVeeJhJw0Q347PxMvBgVVFgouYLGIhFYG0UGdBumROyiig==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-loong64": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.20.2.tgz",
      "integrity": "sha512-PR7sp6R/UC4CFVomVINKJ80pMFlfDfMQMYynX7t1tNTeivQ6XdX5r2XovMmha/VjR1YN/HgHWsVcTRIMkymrgQ==",
      "cpu": [
        "loong64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-mips64el": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.20.2.tgz",
      "integrity": "sha512-4BlTqeutE/KnOiTG5Y6Sb/Hw6hsBOZapOVF6njAESHInhlQAghVVZL1ZpIctBOoTFbQyGW+LsVYZ8lSSB3wkjA==",
      "cpu": [
        "mips64el"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-ppc64": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.20.2.tgz",
      "integrity": "sha512-rD3KsaDprDcfajSKdn25ooz5J5/fWBylaaXkuotBDGnMnDP1Uv5DLAN/45qfnf3JDYyJv/ytGHQaziHUdyzaAg==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-riscv64": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.20.2.tgz",
      "integrity": "sha512-snwmBKacKmwTMmhLlz/3aH1Q9T8v45bKYGE3j26TsaOVtjIag4wLfWSiZykXzXuE1kbCE+zJRmwp+ZbIHinnVg==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-s390x": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.20.2.tgz",
      "integrity": "sha512-wcWISOobRWNm3cezm5HOZcYz1sKoHLd8VL1dl309DiixxVFoFe/o8HnwuIwn6sXre88Nwj+VwZUvJf4AFxkyrQ==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-x64": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.20.2.tgz",
      "integrity": "sha512-1MdwI6OOTsfQfek8sLwgyjOXAu+wKhLEoaOLTjbijk6E2WONYpH9ZU2mNtR+lZ2B4uwr+usqGuVfFT9tMtGvGw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/netbsd-x64": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.20.2.tgz",
      "integrity": "sha512-K8/DhBxcVQkzYc43yJXDSyjlFeHQJBiowJ0uVL6Tor3jGQfSGHNNJcWxNbOI8v5k82prYqzPuwkzHt3J1T1iZQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/openbsd-x64": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.20.2.tgz",
      "integrity": "sha512-eMpKlV0SThJmmJgiVyN9jTPJ2VBPquf6Kt/nAoo6DgHAoN57K15ZghiHaMvqjCye/uU4X5u3YSMgVBI1h3vKrQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/sunos-x64": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.20.2.tgz",
      "integrity": "sha512-2UyFtRC6cXLyejf/YEld4Hajo7UHILetzE1vsRcGL3earZEW77JxrFjH4Ez2qaTiEfMgAXxfAZCm1fvM/G/o8w==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "sunos"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/win32-arm64": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.20.2.tgz",
      "integrity": "sha512-GRibxoawM9ZCnDxnP3usoUDO9vUkpAxIIZ6GQI+IlVmr5kP3zUq+l17xELTHMWTWzjxa2guPNyrpq1GWmPvcGQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/win32-ia32": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.20.2.tgz",
      "integrity": "sha512-HfLOfn9YWmkSKRQqovpnITazdtquEW8/SoHW7pWpuEeguaZI4QnCRW6b+oZTztdBnZOS2hqJ6im/D5cPzBTTlQ==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/win32-x64": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.20.2.tgz",
      "integrity": "sha512-N49X4lJX27+l9jbLKSqZ6bKNjzQvHaT8IIFUy+YIqmXQdjYCToGWwOItDrfby14c78aDd5NHQl29xingXfCdLQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@eslint-community/eslint-utils": {
      "version": "4.4.0",
      "resolved": "https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.4.0.tgz",
      "integrity": "sha512-1/sA4dwrzBAyeUoQ6oxahHKmrZvsnLCg4RfxW3ZFGGmQkSNQPFNLV9CUEFQP1x9EYXHTo5p6xdhZM1Ne9p/AfA==",
      "dev": true,
      "dependencies": {
        "eslint-visitor-keys": "^3.3.0"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "peerDependencies": {
        "eslint": "^6.0.0 || ^7.0.0 || >=8.0.0"
      }
    },
    "node_modules/@eslint-community/regexpp": {
      "version": "4.10.0",
      "resolved": "https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.10.0.tgz",
      "integrity": "sha512-Cu96Sd2By9mCNTx2iyKOmq10v22jUVQv0lQnlGNy16oE9589yE+QADPbrMGCkA51cKZSg3Pu/aTJVTGfL/qjUA==",
      "dev": true,
      "engines": {
        "node": "^12.0.0 || ^14.0.0 || >=16.0.0"
      }
    },
    "node_modules/@eslint/eslintrc": {
      "version": "2.1.4",
      "resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-2.1.4.tgz",
      "integrity": "sha512-269Z39MS6wVJtsoUl10L60WdkhJVdPG24Q4eZTH3nnF6lpvSShEK3wQjDX9JRWAUPvPh7COouPpU9IrqaZFvtQ==",
      "dev": true,
      "dependencies": {
        "ajv": "^6.12.4",
        "debug": "^4.3.2",
        "espree": "^9.6.0",
        "globals": "^13.19.0",
        "ignore": "^5.2.0",
        "import-fresh": "^3.2.1",
        "js-yaml": "^4.1.0",
        "minimatch": "^3.1.2",
        "strip-json-comments": "^3.1.1"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/@eslint/eslintrc/node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dev": true,
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/@eslint/eslintrc/node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/@eslint/js": {
      "version": "8.57.0",
      "resolved": "https://registry.npmjs.org/@eslint/js/-/js-8.57.0.tgz",
      "integrity": "sha512-Ys+3g2TaW7gADOJzPt83SJtCDhMjndcDMFVQ/Tj9iA1BfJzFKD9mAUXT3OenpuPHbI6P/myECxRJrofUsDx/5g==",
      "dev": true,
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      }
    },
    "node_modules/@humanwhocodes/config-array": {
      "version": "0.11.14",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.11.14.tgz",
      "integrity": "sha512-3T8LkOmg45BV5FICb15QQMsyUSWrQ8AygVfC7ZG32zOalnqrilm018ZVCw0eapXux8FtA33q8PSRSstjee3jSg==",
      "dev": true,
      "dependencies": {
        "@humanwhocodes/object-schema": "^2.0.2",
        "debug": "^4.3.1",
        "minimatch": "^3.0.5"
      },
      "engines": {
        "node": ">=10.10.0"
      }
    },
    "node_modules/@humanwhocodes/config-array/node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dev": true,
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/@humanwhocodes/config-array/node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/@humanwhocodes/module-importer": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz",
      "integrity": "sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==",
      "dev": true,
      "engines": {
        "node": ">=12.22"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@humanwhocodes/object-schema": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/object-schema/-/object-schema-2.0.2.tgz",
      "integrity": "sha512-6EwiSjwWYP7pTckG6I5eyFANjPhmPjUX9JRLUSfNPC7FX7zK9gyZAfUEaECL6ALTpGX5AjnBq3C9XmVWPitNpw==",
      "dev": true
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.4.15",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.15.tgz",
      "integrity": "sha512-eF2rxCRulEKXHTRiDrDy6erMYWqNw4LPdQ8UQA4huuxaQsVeRPFl2oM8oDGxMFhJUWZf9McpLtJasDDZb/Bpeg=="
    },
    "node_modules/@nodelib/fs.scandir": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
      "dev": true,
      "dependencies": {
        "@nodelib/fs.stat": "2.0.5",
        "run-parallel": "^1.1.9"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.stat": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
      "dev": true,
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.walk": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
      "dev": true,
      "dependencies": {
        "@nodelib/fs.scandir": "2.1.5",
        "fastq": "^1.6.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@popperjs/core": {
      "version": "2.11.8",
      "resolved": "https://registry.npmjs.org/@popperjs/core/-/core-2.11.8.tgz",
      "integrity": "sha512-P1st0aksCrn9sGZhp8GMYwBnQsbvAWsZAX44oXNNvLHGqAOcoVxmjZiohstwQ7SqKnbR47akdNi+uleWD8+g6A==",
      "peer": true,
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/popperjs"
      }
    },
    "node_modules/@rollup/rollup-android-arm-eabi": {
      "version": "4.13.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.13.0.tgz",
      "integrity": "sha512-5ZYPOuaAqEH/W3gYsRkxQATBW3Ii1MfaT4EQstTnLKViLi2gLSQmlmtTpGucNP3sXEpOiI5tdGhjdE111ekyEg==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@rollup/rollup-android-arm64": {
      "version": "4.13.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.13.0.tgz",
      "integrity": "sha512-BSbaCmn8ZadK3UAQdlauSvtaJjhlDEjS5hEVVIN3A4bbl3X+otyf/kOJV08bYiRxfejP3DXFzO2jz3G20107+Q==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@rollup/rollup-darwin-arm64": {
      "version": "4.13.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.13.0.tgz",
      "integrity": "sha512-Ovf2evVaP6sW5Ut0GHyUSOqA6tVKfrTHddtmxGQc1CTQa1Cw3/KMCDEEICZBbyppcwnhMwcDce9ZRxdWRpVd6g==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@rollup/rollup-darwin-x64": {
      "version": "4.13.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.13.0.tgz",
      "integrity": "sha512-U+Jcxm89UTK592vZ2J9st9ajRv/hrwHdnvyuJpa5A2ngGSVHypigidkQJP+YiGL6JODiUeMzkqQzbCG3At81Gg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm-gnueabihf": {
      "version": "4.13.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.13.0.tgz",
      "integrity": "sha512-8wZidaUJUTIR5T4vRS22VkSMOVooG0F4N+JSwQXWSRiC6yfEsFMLTYRFHvby5mFFuExHa/yAp9juSphQQJAijQ==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm64-gnu": {
      "version": "4.13.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.13.0.tgz",
      "integrity": "sha512-Iu0Kno1vrD7zHQDxOmvweqLkAzjxEVqNhUIXBsZ8hu8Oak7/5VTPrxOEZXYC1nmrBVJp0ZcL2E7lSuuOVaE3+w==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm64-musl": {
      "version": "4.13.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.13.0.tgz",
      "integrity": "sha512-C31QrW47llgVyrRjIwiOwsHFcaIwmkKi3PCroQY5aVq4H0A5v/vVVAtFsI1nfBngtoRpeREvZOkIhmRwUKkAdw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-riscv64-gnu": {
      "version": "4.13.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.13.0.tgz",
      "integrity": "sha512-Oq90dtMHvthFOPMl7pt7KmxzX7E71AfyIhh+cPhLY9oko97Zf2C9tt/XJD4RgxhaGeAraAXDtqxvKE1y/j35lA==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-x64-gnu": {
      "version": "4.13.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.13.0.tgz",
      "integrity": "sha512-yUD/8wMffnTKuiIsl6xU+4IA8UNhQ/f1sAnQebmE/lyQ8abjsVyDkyRkWop0kdMhKMprpNIhPmYlCxgHrPoXoA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-x64-musl": {
      "version": "4.13.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.13.0.tgz",
      "integrity": "sha512-9RyNqoFNdF0vu/qqX63fKotBh43fJQeYC98hCaf89DYQpv+xu0D8QFSOS0biA7cGuqJFOc1bJ+m2rhhsKcw1hw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-win32-arm64-msvc": {
      "version": "4.13.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.13.0.tgz",
      "integrity": "sha512-46ue8ymtm/5PUU6pCvjlic0z82qWkxv54GTJZgHrQUuZnVH+tvvSP0LsozIDsCBFO4VjJ13N68wqrKSeScUKdA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@rollup/rollup-win32-ia32-msvc": {
      "version": "4.13.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.13.0.tgz",
      "integrity": "sha512-P5/MqLdLSlqxbeuJ3YDeX37srC8mCflSyTrUsgbU1c/U9j6l2g2GiIdYaGD9QjdMQPMSgYm7hgg0551wHyIluw==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@rollup/rollup-win32-x64-msvc": {
      "version": "4.13.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.13.0.tgz",
      "integrity": "sha512-UKXUQNbO3DOhzLRwHSpa0HnhhCgNODvfoPWv2FCXme8N/ANFfhIPMGuOT+QuKd16+B5yxZ0HdpNlqPvTMS1qfw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@types/estree": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.5.tgz",
      "integrity": "sha512-/kYRxGDLWzHOB7q+wtSUQlFrtcdUccpfy+X+9iMBpHK8QLLhx2wIPYuS5DYtR9Wa/YlZAbIovy7qVdB1Aq6Lyw==",
      "dev": true
    },
    "node_modules/@typescript-eslint/eslint-plugin": {
      "version": "7.13.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-7.13.0.tgz",
      "integrity": "sha512-FX1X6AF0w8MdVFLSdqwqN/me2hyhuQg4ykN6ZpVhh1ij/80pTvDKclX1sZB9iqex8SjQfVhwMKs3JtnnMLzG9w==",
      "dev": true,
      "dependencies": {
        "@eslint-community/regexpp": "^4.10.0",
        "@typescript-eslint/scope-manager": "7.13.0",
        "@typescript-eslint/type-utils": "7.13.0",
        "@typescript-eslint/utils": "7.13.0",
        "@typescript-eslint/visitor-keys": "7.13.0",
        "graphemer": "^1.4.0",
        "ignore": "^5.3.1",
        "natural-compare": "^1.4.0",
        "ts-api-utils": "^1.3.0"
      },
      "engines": {
        "node": "^18.18.0 || >=20.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "@typescript-eslint/parser": "^7.0.0",
        "eslint": "^8.56.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/@typescript-eslint/eslint-plugin/node_modules/@typescript-eslint/scope-manager": {
      "version": "7.13.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-7.13.0.tgz",
      "integrity": "sha512-ZrMCe1R6a01T94ilV13egvcnvVJ1pxShkE0+NDjDzH4nvG1wXpwsVI5bZCvE7AEDH1mXEx5tJSVR68bLgG7Dng==",
      "dev": true,
      "dependencies": {
        "@typescript-eslint/types": "7.13.0",
        "@typescript-eslint/visitor-keys": "7.13.0"
      },
      "engines": {
        "node": "^18.18.0 || >=20.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/eslint-plugin/node_modules/@typescript-eslint/types": {
      "version": "7.13.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/types/-/types-7.13.0.tgz",
      "integrity": "sha512-QWuwm9wcGMAuTsxP+qz6LBBd3Uq8I5Nv8xb0mk54jmNoCyDspnMvVsOxI6IsMmway5d1S9Su2+sCKv1st2l6eA==",
      "dev": true,
      "engines": {
        "node": "^18.18.0 || >=20.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/eslint-plugin/node_modules/@typescript-eslint/visitor-keys": {
      "version": "7.13.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-7.13.0.tgz",
      "integrity": "sha512-nxn+dozQx+MK61nn/JP+M4eCkHDSxSLDpgE3WcQo0+fkjEolnaB5jswvIKC4K56By8MMgIho7f1PVxERHEo8rw==",
      "dev": true,
      "dependencies": {
        "@typescript-eslint/types": "7.13.0",
        "eslint-visitor-keys": "^3.4.3"
      },
      "engines": {
        "node": "^18.18.0 || >=20.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/parser": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/parser/-/parser-7.1.0.tgz",
      "integrity": "sha512-V1EknKUubZ1gWFjiOZhDSNToOjs63/9O0puCgGS8aDOgpZY326fzFu15QAUjwaXzRZjf/qdsdBrckYdv9YxB8w==",
      "dev": true,
      "peer": true,
      "dependencies": {
        "@typescript-eslint/scope-manager": "7.1.0",
        "@typescript-eslint/types": "7.1.0",
        "@typescript-eslint/typescript-estree": "7.1.0",
        "@typescript-eslint/visitor-keys": "7.1.0",
        "debug": "^4.3.4"
      },
      "engines": {
        "node": "^16.0.0 || >=18.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "eslint": "^8.56.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/@typescript-eslint/scope-manager": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-7.1.0.tgz",
      "integrity": "sha512-6TmN4OJiohHfoOdGZ3huuLhpiUgOGTpgXNUPJgeZOZR3DnIpdSgtt83RS35OYNNXxM4TScVlpVKC9jyQSETR1A==",
      "dev": true,
      "peer": true,
      "dependencies": {
        "@typescript-eslint/types": "7.1.0",
        "@typescript-eslint/visitor-keys": "7.1.0"
      },
      "engines": {
        "node": "^16.0.0 || >=18.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/type-utils": {
      "version": "7.13.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-7.13.0.tgz",
      "integrity": "sha512-xMEtMzxq9eRkZy48XuxlBFzpVMDurUAfDu5Rz16GouAtXm0TaAoTFzqWUFPPuQYXI/CDaH/Bgx/fk/84t/Bc9A==",
      "dev": true,
      "dependencies": {
        "@typescript-eslint/typescript-estree": "7.13.0",
        "@typescript-eslint/utils": "7.13.0",
        "debug": "^4.3.4",
        "ts-api-utils": "^1.3.0"
      },
      "engines": {
        "node": "^18.18.0 || >=20.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "eslint": "^8.56.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/@typescript-eslint/type-utils/node_modules/@typescript-eslint/types": {
      "version": "7.13.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/types/-/types-7.13.0.tgz",
      "integrity": "sha512-QWuwm9wcGMAuTsxP+qz6LBBd3Uq8I5Nv8xb0mk54jmNoCyDspnMvVsOxI6IsMmway5d1S9Su2+sCKv1st2l6eA==",
      "dev": true,
      "engines": {
        "node": "^18.18.0 || >=20.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/type-utils/node_modules/@typescript-eslint/typescript-estree": {
      "version": "7.13.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-7.13.0.tgz",
      "integrity": "sha512-cAvBvUoobaoIcoqox1YatXOnSl3gx92rCZoMRPzMNisDiM12siGilSM4+dJAekuuHTibI2hVC2fYK79iSFvWjw==",
      "dev": true,
      "dependencies": {
        "@typescript-eslint/types": "7.13.0",
        "@typescript-eslint/visitor-keys": "7.13.0",
        "debug": "^4.3.4",
        "globby": "^11.1.0",
        "is-glob": "^4.0.3",
        "minimatch": "^9.0.4",
        "semver": "^7.6.0",
        "ts-api-utils": "^1.3.0"
      },
      "engines": {
        "node": "^18.18.0 || >=20.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/@typescript-eslint/type-utils/node_modules/@typescript-eslint/visitor-keys": {
      "version": "7.13.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-7.13.0.tgz",
      "integrity": "sha512-nxn+dozQx+MK61nn/JP+M4eCkHDSxSLDpgE3WcQo0+fkjEolnaB5jswvIKC4K56By8MMgIho7f1PVxERHEo8rw==",
      "dev": true,
      "dependencies": {
        "@typescript-eslint/types": "7.13.0",
        "eslint-visitor-keys": "^3.4.3"
      },
      "engines": {
        "node": "^18.18.0 || >=20.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/type-utils/node_modules/minimatch": {
      "version": "9.0.4",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.4.tgz",
      "integrity": "sha512-KqWh+VchfxcMNRAJjj2tnsSJdNbHsVgnkBhTNrW7AjVo6OvLtxw8zfT9oLw1JSohlFzJ8jCoTgaoXvJ+kHt6fw==",
      "dev": true,
      "dependencies": {
        "brace-expansion": "^2.0.1"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/@typescript-eslint/types": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/types/-/types-7.1.0.tgz",
      "integrity": "sha512-qTWjWieJ1tRJkxgZYXx6WUYtWlBc48YRxgY2JN1aGeVpkhmnopq+SUC8UEVGNXIvWH7XyuTjwALfG6bFEgCkQA==",
      "dev": true,
      "peer": true,
      "engines": {
        "node": "^16.0.0 || >=18.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/typescript-estree": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-7.1.0.tgz",
      "integrity": "sha512-k7MyrbD6E463CBbSpcOnwa8oXRdHzH1WiVzOipK3L5KSML92ZKgUBrTlehdi7PEIMT8k0bQixHUGXggPAlKnOQ==",
      "dev": true,
      "peer": true,
      "dependencies": {
        "@typescript-eslint/types": "7.1.0",
        "@typescript-eslint/visitor-keys": "7.1.0",
        "debug": "^4.3.4",
        "globby": "^11.1.0",
        "is-glob": "^4.0.3",
        "minimatch": "9.0.3",
        "semver": "^7.5.4",
        "ts-api-utils": "^1.0.1"
      },
      "engines": {
        "node": "^16.0.0 || >=18.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/@typescript-eslint/utils": {
      "version": "7.13.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/utils/-/utils-7.13.0.tgz",
      "integrity": "sha512-jceD8RgdKORVnB4Y6BqasfIkFhl4pajB1wVxrF4akxD2QPM8GNYjgGwEzYS+437ewlqqrg7Dw+6dhdpjMpeBFQ==",
      "dev": true,
      "dependencies": {
        "@eslint-community/eslint-utils": "^4.4.0",
        "@typescript-eslint/scope-manager": "7.13.0",
        "@typescript-eslint/types": "7.13.0",
        "@typescript-eslint/typescript-estree": "7.13.0"
      },
      "engines": {
        "node": "^18.18.0 || >=20.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "eslint": "^8.56.0"
      }
    },
    "node_modules/@typescript-eslint/utils/node_modules/@typescript-eslint/scope-manager": {
      "version": "7.13.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-7.13.0.tgz",
      "integrity": "sha512-ZrMCe1R6a01T94ilV13egvcnvVJ1pxShkE0+NDjDzH4nvG1wXpwsVI5bZCvE7AEDH1mXEx5tJSVR68bLgG7Dng==",
      "dev": true,
      "dependencies": {
        "@typescript-eslint/types": "7.13.0",
        "@typescript-eslint/visitor-keys": "7.13.0"
      },
      "engines": {
        "node": "^18.18.0 || >=20.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/utils/node_modules/@typescript-eslint/types": {
      "version": "7.13.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/types/-/types-7.13.0.tgz",
      "integrity": "sha512-QWuwm9wcGMAuTsxP+qz6LBBd3Uq8I5Nv8xb0mk54jmNoCyDspnMvVsOxI6IsMmway5d1S9Su2+sCKv1st2l6eA==",
      "dev": true,
      "engines": {
        "node": "^18.18.0 || >=20.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/utils/node_modules/@typescript-eslint/typescript-estree": {
      "version": "7.13.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-7.13.0.tgz",
      "integrity": "sha512-cAvBvUoobaoIcoqox1YatXOnSl3gx92rCZoMRPzMNisDiM12siGilSM4+dJAekuuHTibI2hVC2fYK79iSFvWjw==",
      "dev": true,
      "dependencies": {
        "@typescript-eslint/types": "7.13.0",
        "@typescript-eslint/visitor-keys": "7.13.0",
        "debug": "^4.3.4",
        "globby": "^11.1.0",
        "is-glob": "^4.0.3",
        "minimatch": "^9.0.4",
        "semver": "^7.6.0",
        "ts-api-utils": "^1.3.0"
      },
      "engines": {
        "node": "^18.18.0 || >=20.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/@typescript-eslint/utils/node_modules/@typescript-eslint/visitor-keys": {
      "version": "7.13.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-7.13.0.tgz",
      "integrity": "sha512-nxn+dozQx+MK61nn/JP+M4eCkHDSxSLDpgE3WcQo0+fkjEolnaB5jswvIKC4K56By8MMgIho7f1PVxERHEo8rw==",
      "dev": true,
      "dependencies": {
        "@typescript-eslint/types": "7.13.0",
        "eslint-visitor-keys": "^3.4.3"
      },
      "engines": {
        "node": "^18.18.0 || >=20.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/utils/node_modules/minimatch": {
      "version": "9.0.4",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.4.tgz",
      "integrity": "sha512-KqWh+VchfxcMNRAJjj2tnsSJdNbHsVgnkBhTNrW7AjVo6OvLtxw8zfT9oLw1JSohlFzJ8jCoTgaoXvJ+kHt6fw==",
      "dev": true,
      "dependencies": {
        "brace-expansion": "^2.0.1"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/@typescript-eslint/visitor-keys": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-7.1.0.tgz",
      "integrity": "sha512-FhUqNWluiGNzlvnDZiXad4mZRhtghdoKW6e98GoEOYSu5cND+E39rG5KwJMUzeENwm1ztYBRqof8wMLP+wNPIA==",
      "dev": true,
      "peer": true,
      "dependencies": {
        "@typescript-eslint/types": "7.1.0",
        "eslint-visitor-keys": "^3.4.1"
      },
      "engines": {
        "node": "^16.0.0 || >=18.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@ungap/structured-clone": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@ungap/structured-clone/-/structured-clone-1.2.0.tgz",
      "integrity": "sha512-zuVdFrMJiuCDQUMCzQaD6KL28MjnqqN8XnAqiEq9PNm/hCPTSGfrXCOfwj1ow4LFb/tNymJPwsNbVePc1xFqrQ==",
      "dev": true
    },
    "node_modules/@vitejs/plugin-vue": {
      "version": "5.0.5",
      "resolved": "https://registry.npmjs.org/@vitejs/plugin-vue/-/plugin-vue-5.0.5.tgz",
      "integrity": "sha512-LOjm7XeIimLBZyzinBQ6OSm3UBCNVCpLkxGC0oWmm2YPzVZoxMsdvNVimLTBzpAnR9hl/yn1SHGuRfe6/Td9rQ==",
      "dev": true,
      "engines": {
        "node": "^18.0.0 || >=20.0.0"
      },
      "peerDependencies": {
        "vite": "^5.0.0",
        "vue": "^3.2.25"
      }
    },
    "node_modules/@volar/language-core": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/@volar/language-core/-/language-core-2.3.0.tgz",
      "integrity": "sha512-pvhL24WUh3VDnv7Yw5N1sjhPtdx7q9g+Wl3tggmnkMcyK8GcCNElF2zHiKznryn0DiUGk+eez/p2qQhz+puuHw==",
      "dev": true,
      "dependencies": {
        "@volar/source-map": "2.3.0"
      }
    },
    "node_modules/@volar/source-map": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/@volar/source-map/-/source-map-2.3.0.tgz",
      "integrity": "sha512-G/228aZjAOGhDjhlyZ++nDbKrS9uk+5DMaEstjvzglaAw7nqtDyhnQAsYzUg6BMP9BtwZ59RIw5HGePrutn00Q==",
      "dev": true,
      "dependencies": {
        "muggle-string": "^0.4.0"
      }
    },
    "node_modules/@volar/typescript": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/@volar/typescript/-/typescript-2.3.0.tgz",
      "integrity": "sha512-PtUwMM87WsKVeLJN33GSTUjBexlKfKgouWlOUIv7pjrOnTwhXHZNSmpc312xgXdTjQPpToK6KXSIcKu9sBQ5LQ==",
      "dev": true,
      "dependencies": {
        "@volar/language-core": "2.3.0",
        "path-browserify": "^1.0.1",
        "vscode-uri": "^3.0.8"
      }
    },
    "node_modules/@vue/compiler-core": {
      "version": "3.4.27",
      "resolved": "https://registry.npmjs.org/@vue/compiler-core/-/compiler-core-3.4.27.tgz",
      "integrity": "sha512-E+RyqY24KnyDXsCuQrI+mlcdW3ALND6U7Gqa/+bVwbcpcR3BRRIckFoz7Qyd4TTlnugtwuI7YgjbvsLmxb+yvg==",
      "dependencies": {
        "@babel/parser": "^7.24.4",
        "@vue/shared": "3.4.27",
        "entities": "^4.5.0",
        "estree-walker": "^2.0.2",
        "source-map-js": "^1.2.0"
      }
    },
    "node_modules/@vue/compiler-dom": {
      "version": "3.4.27",
      "resolved": "https://registry.npmjs.org/@vue/compiler-dom/-/compiler-dom-3.4.27.tgz",
      "integrity": "sha512-kUTvochG/oVgE1w5ViSr3KUBh9X7CWirebA3bezTbB5ZKBQZwR2Mwj9uoSKRMFcz4gSMzzLXBPD6KpCLb9nvWw==",
      "dependencies": {
        "@vue/compiler-core": "3.4.27",
        "@vue/shared": "3.4.27"
      }
    },
    "node_modules/@vue/compiler-sfc": {
      "version": "3.4.27",
      "resolved": "https://registry.npmjs.org/@vue/compiler-sfc/-/compiler-sfc-3.4.27.tgz",
      "integrity": "sha512-nDwntUEADssW8e0rrmE0+OrONwmRlegDA1pD6QhVeXxjIytV03yDqTey9SBDiALsvAd5U4ZrEKbMyVXhX6mCGA==",
      "dependencies": {
        "@babel/parser": "^7.24.4",
        "@vue/compiler-core": "3.4.27",
        "@vue/compiler-dom": "3.4.27",
        "@vue/compiler-ssr": "3.4.27",
        "@vue/shared": "3.4.27",
        "estree-walker": "^2.0.2",
        "magic-string": "^0.30.10",
        "postcss": "^8.4.38",
        "source-map-js": "^1.2.0"
      }
    },
    "node_modules/@vue/compiler-ssr": {
      "version": "3.4.27",
      "resolved": "https://registry.npmjs.org/@vue/compiler-ssr/-/compiler-ssr-3.4.27.tgz",
      "integrity": "sha512-CVRzSJIltzMG5FcidsW0jKNQnNRYC8bT21VegyMMtHmhW3UOI7knmUehzswXLrExDLE6lQCZdrhD4ogI7c+vuw==",
      "dependencies": {
        "@vue/compiler-dom": "3.4.27",
        "@vue/shared": "3.4.27"
      }
    },
    "node_modules/@vue/language-core": {
      "version": "2.0.21",
      "resolved": "https://registry.npmjs.org/@vue/language-core/-/language-core-2.0.21.tgz",
      "integrity": "sha512-vjs6KwnCK++kIXT+eI63BGpJHfHNVJcUCr3RnvJsccT3vbJnZV5IhHR2puEkoOkIbDdp0Gqi1wEnv3hEd3WsxQ==",
      "dev": true,
      "dependencies": {
        "@volar/language-core": "~2.3.0-alpha.15",
        "@vue/compiler-dom": "^3.4.0",
        "@vue/shared": "^3.4.0",
        "computeds": "^0.0.1",
        "minimatch": "^9.0.3",
        "path-browserify": "^1.0.1",
        "vue-template-compiler": "^2.7.14"
      },
      "peerDependencies": {
        "typescript": "*"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/@vue/reactivity": {
      "version": "3.4.27",
      "resolved": "https://registry.npmjs.org/@vue/reactivity/-/reactivity-3.4.27.tgz",
      "integrity": "sha512-kK0g4NknW6JX2yySLpsm2jlunZJl2/RJGZ0H9ddHdfBVHcNzxmQ0sS0b09ipmBoQpY8JM2KmUw+a6sO8Zo+zIA==",
      "dependencies": {
        "@vue/shared": "3.4.27"
      }
    },
    "node_modules/@vue/runtime-core": {
      "version": "3.4.27",
      "resolved": "https://registry.npmjs.org/@vue/runtime-core/-/runtime-core-3.4.27.tgz",
      "integrity": "sha512-7aYA9GEbOOdviqVvcuweTLe5Za4qBZkUY7SvET6vE8kyypxVgaT1ixHLg4urtOlrApdgcdgHoTZCUuTGap/5WA==",
      "dependencies": {
        "@vue/reactivity": "3.4.27",
        "@vue/shared": "3.4.27"
      }
    },
    "node_modules/@vue/runtime-dom": {
      "version": "3.4.27",
      "resolved": "https://registry.npmjs.org/@vue/runtime-dom/-/runtime-dom-3.4.27.tgz",
      "integrity": "sha512-ScOmP70/3NPM+TW9hvVAz6VWWtZJqkbdf7w6ySsws+EsqtHvkhxaWLecrTorFxsawelM5Ys9FnDEMt6BPBDS0Q==",
      "dependencies": {
        "@vue/runtime-core": "3.4.27",
        "@vue/shared": "3.4.27",
        "csstype": "^3.1.3"
      }
    },
    "node_modules/@vue/server-renderer": {
      "version": "3.4.27",
      "resolved": "https://registry.npmjs.org/@vue/server-renderer/-/server-renderer-3.4.27.tgz",
      "integrity": "sha512-dlAMEuvmeA3rJsOMJ2J1kXU7o7pOxgsNHVr9K8hB3ImIkSuBrIdy0vF66h8gf8Tuinf1TK3mPAz2+2sqyf3KzA==",
      "dependencies": {
        "@vue/compiler-ssr": "3.4.27",
        "@vue/shared": "3.4.27"
      },
      "peerDependencies": {
        "vue": "3.4.27"
      }
    },
    "node_modules/@vue/shared": {
      "version": "3.4.27",
      "resolved": "https://registry.npmjs.org/@vue/shared/-/shared-3.4.27.tgz",
      "integrity": "sha512-DL3NmY2OFlqmYYrzp39yi3LDkKxa5vZVwxWdQ3rG0ekuWscHraeIbnI8t+aZK7qhYqEqWKTUdijadunb9pnrgA=="
    },
    "node_modules/acorn": {
      "version": "8.11.3",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.11.3.tgz",
      "integrity": "sha512-Y9rRfJG5jcKOE0CLisYbojUjIrIEE7AGMzA/Sm4BslANhbS+cDMpgBdcPT91oJ7OuJ9hYJBx59RjbhxVnrF8Xg==",
      "dev": true,
      "bin": {
        "acorn": "bin/acorn"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/acorn-jsx": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
      "integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
      "dev": true,
      "peerDependencies": {
        "acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
      }
    },
    "node_modules/ajv": {
      "version": "6.12.6",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
      "dev": true,
      "dependencies": {
        "fast-deep-equal": "^3.1.1",
        "fast-json-stable-stringify": "^2.0.0",
        "json-schema-traverse": "^0.4.1",
        "uri-js": "^4.2.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/epoberezkin"
      }
    },
    "node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "dev": true,
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/argparse": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
      "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
      "dev": true
    },
    "node_modules/array-union": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz",
      "integrity": "sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/asynckit": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
      "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q=="
    },
    "node_modules/axios": {
      "version": "1.7.2",
      "resolved": "https://registry.npmjs.org/axios/-/axios-1.7.2.tgz",
      "integrity": "sha512-2A8QhOMrbomlDuiLeK9XibIBzuHeRcqqNOHp0Cyp5EoJ1IFDh+XZH3A6BkXtv0K4gFGCI0Y4BM7B1wOEi0Rmgw==",
      "dependencies": {
        "follow-redirects": "^1.15.6",
        "form-data": "^4.0.0",
        "proxy-from-env": "^1.1.0"
      }
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
      "dev": true
    },
    "node_modules/boolbase": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/boolbase/-/boolbase-1.0.0.tgz",
      "integrity": "sha512-JZOSA7Mo9sNGB8+UjSgzdLtokWAky1zbztM3WRLCbZ70/3cTANmQmOdR7y2g+J0e2WXywy1yS468tY+IruqEww==",
      "dev": true
    },
    "node_modules/bootstrap": {
      "version": "5.3.3",
      "resolved": "https://registry.npmjs.org/bootstrap/-/bootstrap-5.3.3.tgz",
      "integrity": "sha512-8HLCdWgyoMguSO9o+aH+iuZ+aht+mzW0u3HIMzVu7Srrpv7EBBxTnrFlSCskwdY1+EOFQSm7uMJhNQHkdPcmjg==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/twbs"
        },
        {
          "type": "opencollective",
          "url": "https://opencollective.com/bootstrap"
        }
      ],
      "peerDependencies": {
        "@popperjs/core": "^2.11.8"
      }
    },
    "node_modules/brace-expansion": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz",
      "integrity": "sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==",
      "dev": true,
      "dependencies": {
        "balanced-match": "^1.0.0"
      }
    },
    "node_modules/braces": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
      "dev": true,
      "dependencies": {
        "fill-range": "^7.1.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/callsites": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "dev": true,
      "dependencies": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "dev": true,
      "dependencies": {
        "color-name": "~1.1.4"
      },
      "engines": {
        "node": ">=7.0.0"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
      "dev": true
    },
    "node_modules/combined-stream": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
      "dependencies": {
        "delayed-stream": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/computeds": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/computeds/-/computeds-0.0.1.tgz",
      "integrity": "sha512-7CEBgcMjVmitjYo5q8JTJVra6X5mQ20uTThdK+0kR7UEaDrAWEQcRiBtWJzga4eRpP6afNwwLsX2SET2JhVB1Q==",
      "dev": true
    },
    "node_modules/concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
      "dev": true
    },
    "node_modules/cross-spawn": {
      "version": "7.0.3",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz",
      "integrity": "sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==",
      "dev": true,
      "dependencies": {
        "path-key": "^3.1.0",
        "shebang-command": "^2.0.0",
        "which": "^2.0.1"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/cssesc": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz",
      "integrity": "sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==",
      "dev": true,
      "bin": {
        "cssesc": "bin/cssesc"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/csstype": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
      "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw=="
    },
    "node_modules/de-indent": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/de-indent/-/de-indent-1.0.2.tgz",
      "integrity": "sha512-e/1zu3xH5MQryN2zdVaF0OrdNLUbvWxzMbi+iNA6Bky7l1RoP8a2fIbRocyHclXt/arDrrR6lL3TqFD9pMQTsg==",
      "dev": true
    },
    "node_modules/debug": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
      "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
      "dev": true,
      "dependencies": {
        "ms": "2.1.2"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/deep-is": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
      "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
      "dev": true
    },
    "node_modules/delayed-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
      "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==",
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/dir-glob": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz",
      "integrity": "sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==",
      "dev": true,
      "dependencies": {
        "path-type": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/doctrine": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz",
      "integrity": "sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==",
      "dev": true,
      "dependencies": {
        "esutils": "^2.0.2"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/entities": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/entities/-/entities-4.5.0.tgz",
      "integrity": "sha512-V0hjH4dGPh9Ao5p0MoRY6BVqtwCjhz6vI5LT8AJ55H+4g9/4vbHx1I54fS0XuclLhDHArPQCiMjDxjaL8fPxhw==",
      "engines": {
        "node": ">=0.12"
      },
      "funding": {
        "url": "https://github.com/fb55/entities?sponsor=1"
      }
    },
    "node_modules/esbuild": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.20.2.tgz",
      "integrity": "sha512-WdOOppmUNU+IbZ0PaDiTst80zjnrOkyJNHoKupIcVyU8Lvla3Ugx94VzkQ32Ijqd7UhHJy75gNWDMUekcrSJ6g==",
      "dev": true,
      "hasInstallScript": true,
      "bin": {
        "esbuild": "bin/esbuild"
      },
      "engines": {
        "node": ">=12"
      },
      "optionalDependencies": {
        "@esbuild/aix-ppc64": "0.20.2",
        "@esbuild/android-arm": "0.20.2",
        "@esbuild/android-arm64": "0.20.2",
        "@esbuild/android-x64": "0.20.2",
        "@esbuild/darwin-arm64": "0.20.2",
        "@esbuild/darwin-x64": "0.20.2",
        "@esbuild/freebsd-arm64": "0.20.2",
        "@esbuild/freebsd-x64": "0.20.2",
        "@esbuild/linux-arm": "0.20.2",
        "@esbuild/linux-arm64": "0.20.2",
        "@esbuild/linux-ia32": "0.20.2",
        "@esbuild/linux-loong64": "0.20.2",
        "@esbuild/linux-mips64el": "0.20.2",
        "@esbuild/linux-ppc64": "0.20.2",
        "@esbuild/linux-riscv64": "0.20.2",
        "@esbuild/linux-s390x": "0.20.2",
        "@esbuild/linux-x64": "0.20.2",
        "@esbuild/netbsd-x64": "0.20.2",
        "@esbuild/openbsd-x64": "0.20.2",
        "@esbuild/sunos-x64": "0.20.2",
        "@esbuild/win32-arm64": "0.20.2",
        "@esbuild/win32-ia32": "0.20.2",
        "@esbuild/win32-x64": "0.20.2"
      }
    },
    "node_modules/escape-string-regexp": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
      "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
      "dev": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/eslint": {
      "version": "8.57.0",
      "resolved": "https://registry.npmjs.org/eslint/-/eslint-8.57.0.tgz",
      "integrity": "sha512-dZ6+mexnaTIbSBZWgou51U6OmzIhYM2VcNdtiTtI7qPNZm35Akpr0f6vtw3w1Kmn5PYo+tZVfh13WrhpS6oLqQ==",
      "dev": true,
      "dependencies": {
        "@eslint-community/eslint-utils": "^4.2.0",
        "@eslint-community/regexpp": "^4.6.1",
        "@eslint/eslintrc": "^2.1.4",
        "@eslint/js": "8.57.0",
        "@humanwhocodes/config-array": "^0.11.14",
        "@humanwhocodes/module-importer": "^1.0.1",
        "@nodelib/fs.walk": "^1.2.8",
        "@ungap/structured-clone": "^1.2.0",
        "ajv": "^6.12.4",
        "chalk": "^4.0.0",
        "cross-spawn": "^7.0.2",
        "debug": "^4.3.2",
        "doctrine": "^3.0.0",
        "escape-string-regexp": "^4.0.0",
        "eslint-scope": "^7.2.2",
        "eslint-visitor-keys": "^3.4.3",
        "espree": "^9.6.1",
        "esquery": "^1.4.2",
        "esutils": "^2.0.2",
        "fast-deep-equal": "^3.1.3",
        "file-entry-cache": "^6.0.1",
        "find-up": "^5.0.0",
        "glob-parent": "^6.0.2",
        "globals": "^13.19.0",
        "graphemer": "^1.4.0",
        "ignore": "^5.2.0",
        "imurmurhash": "^0.1.4",
        "is-glob": "^4.0.0",
        "is-path-inside": "^3.0.3",
        "js-yaml": "^4.1.0",
        "json-stable-stringify-without-jsonify": "^1.0.1",
        "levn": "^0.4.1",
        "lodash.merge": "^4.6.2",
        "minimatch": "^3.1.2",
        "natural-compare": "^1.4.0",
        "optionator": "^0.9.3",
        "strip-ansi": "^6.0.1",
        "text-table": "^0.2.0"
      },
      "bin": {
        "eslint": "bin/eslint.js"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/eslint-plugin-vue": {
      "version": "9.26.0",
      "resolved": "https://registry.npmjs.org/eslint-plugin-vue/-/eslint-plugin-vue-9.26.0.tgz",
      "integrity": "sha512-eTvlxXgd4ijE1cdur850G6KalZqk65k1JKoOI2d1kT3hr8sPD07j1q98FRFdNnpxBELGPWxZmInxeHGF/GxtqQ==",
      "dev": true,
      "dependencies": {
        "@eslint-community/eslint-utils": "^4.4.0",
        "globals": "^13.24.0",
        "natural-compare": "^1.4.0",
        "nth-check": "^2.1.1",
        "postcss-selector-parser": "^6.0.15",
        "semver": "^7.6.0",
        "vue-eslint-parser": "^9.4.2",
        "xml-name-validator": "^4.0.0"
      },
      "engines": {
        "node": "^14.17.0 || >=16.0.0"
      },
      "peerDependencies": {
        "eslint": "^6.2.0 || ^7.0.0 || ^8.0.0 || ^9.0.0"
      }
    },
    "node_modules/eslint-scope": {
      "version": "7.2.2",
      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-7.2.2.tgz",
      "integrity": "sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==",
      "dev": true,
      "dependencies": {
        "esrecurse": "^4.3.0",
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/eslint-visitor-keys": {
      "version": "3.4.3",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz",
      "integrity": "sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==",
      "dev": true,
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/eslint/node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dev": true,
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/eslint/node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/espree": {
      "version": "9.6.1",
      "resolved": "https://registry.npmjs.org/espree/-/espree-9.6.1.tgz",
      "integrity": "sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==",
      "dev": true,
      "dependencies": {
        "acorn": "^8.9.0",
        "acorn-jsx": "^5.3.2",
        "eslint-visitor-keys": "^3.4.1"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/esquery": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.5.0.tgz",
      "integrity": "sha512-YQLXUplAwJgCydQ78IMJywZCceoqk1oH01OERdSAJc/7U2AylwjhSCLDEtqwg811idIS/9fIU5GjG73IgjKMVg==",
      "dev": true,
      "dependencies": {
        "estraverse": "^5.1.0"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/esrecurse": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
      "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
      "dev": true,
      "dependencies": {
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/estraverse": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
      "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
      "dev": true,
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/estree-walker": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/estree-walker/-/estree-walker-2.0.2.tgz",
      "integrity": "sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w=="
    },
    "node_modules/esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/fast-deep-equal": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
      "dev": true
    },
    "node_modules/fast-glob": {
      "version": "3.3.2",
      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.2.tgz",
      "integrity": "sha512-oX2ruAFQwf/Orj8m737Y5adxDQO0LAB7/S5MnxCdTNDd4p6BsyIVsv9JQsATbTSq8KHRpLwIHbVlUNatxd+1Ow==",
      "dev": true,
      "dependencies": {
        "@nodelib/fs.stat": "^2.0.2",
        "@nodelib/fs.walk": "^1.2.3",
        "glob-parent": "^5.1.2",
        "merge2": "^1.3.0",
        "micromatch": "^4.0.4"
      },
      "engines": {
        "node": ">=8.6.0"
      }
    },
    "node_modules/fast-glob/node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/fast-json-stable-stringify": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
      "dev": true
    },
    "node_modules/fast-levenshtein": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
      "integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==",
      "dev": true
    },
    "node_modules/fastq": {
      "version": "1.17.1",
      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.17.1.tgz",
      "integrity": "sha512-sRVD3lWVIXWg6By68ZN7vho9a1pQcN/WBFaAAsDDFzlJjvoGx0P8z7V1t72grFJfJhu3YPZBuu25f7Kaw2jN1w==",
      "dev": true,
      "dependencies": {
        "reusify": "^1.0.4"
      }
    },
    "node_modules/file-entry-cache": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-6.0.1.tgz",
      "integrity": "sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==",
      "dev": true,
      "dependencies": {
        "flat-cache": "^3.0.4"
      },
      "engines": {
        "node": "^10.12.0 || >=12.0.0"
      }
    },
    "node_modules/fill-range": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
      "dev": true,
      "dependencies": {
        "to-regex-range": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/find-up": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
      "integrity": "sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==",
      "dev": true,
      "dependencies": {
        "locate-path": "^6.0.0",
        "path-exists": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/flat-cache": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-3.2.0.tgz",
      "integrity": "sha512-CYcENa+FtcUKLmhhqyctpclsq7QF38pKjZHsGNiSQF5r4FtoKDWabFDl3hzaEQMvT1LHEysw5twgLvpYYb4vbw==",
      "dev": true,
      "dependencies": {
        "flatted": "^3.2.9",
        "keyv": "^4.5.3",
        "rimraf": "^3.0.2"
      },
      "engines": {
        "node": "^10.12.0 || >=12.0.0"
      }
    },
    "node_modules/flatted": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/flatted/-/flatted-3.3.1.tgz",
      "integrity": "sha512-X8cqMLLie7KsNUDSdzeN8FYK9rEt4Dt67OsG/DNGnYTSDBG4uFAJFBnUeiV+zCVAvwFy56IjM9sH51jVaEhNxw==",
      "dev": true
    },
    "node_modules/follow-redirects": {
      "version": "1.15.6",
      "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.6.tgz",
      "integrity": "sha512-wWN62YITEaOpSK584EZXJafH1AGpO8RVgElfkuXbTOrPX4fIfOyEpW/CsiNd8JdYrAoOvafRTOEnvsO++qCqFA==",
      "funding": [
        {
          "type": "individual",
          "url": "https://github.com/sponsors/RubenVerborgh"
        }
      ],
      "engines": {
        "node": ">=4.0"
      },
      "peerDependenciesMeta": {
        "debug": {
          "optional": true
        }
      }
    },
    "node_modules/form-data": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-4.0.0.tgz",
      "integrity": "sha512-ETEklSGi5t0QMZuiXoA/Q6vcnxcLQP5vdugSpuAyi6SVGi2clPPp+xgEhuMaHC+zGgn31Kd235W35f7Hykkaww==",
      "dependencies": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.8",
        "mime-types": "^2.1.12"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==",
      "dev": true
    },
    "node_modules/fsevents": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
      "dev": true,
      "hasInstallScript": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/glob": {
      "version": "7.2.3",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
      "dev": true,
      "dependencies": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.1.1",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      },
      "engines": {
        "node": "*"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/glob-parent": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
      "dev": true,
      "dependencies": {
        "is-glob": "^4.0.3"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/glob/node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dev": true,
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/glob/node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/globals": {
      "version": "13.24.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-13.24.0.tgz",
      "integrity": "sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==",
      "dev": true,
      "dependencies": {
        "type-fest": "^0.20.2"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/globby": {
      "version": "11.1.0",
      "resolved": "https://registry.npmjs.org/globby/-/globby-11.1.0.tgz",
      "integrity": "sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==",
      "dev": true,
      "dependencies": {
        "array-union": "^2.1.0",
        "dir-glob": "^3.0.1",
        "fast-glob": "^3.2.9",
        "ignore": "^5.2.0",
        "merge2": "^1.4.1",
        "slash": "^3.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/graphemer": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz",
      "integrity": "sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==",
      "dev": true
    },
    "node_modules/has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/he": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/he/-/he-1.2.0.tgz",
      "integrity": "sha512-F/1DnUGPopORZi0ni+CvrCgHQ5FyEAHRLSApuYWMmrbSwoN2Mn/7k+Gl38gJnR7yyDZk6WLXwiGod1JOWNDKGw==",
      "dev": true,
      "bin": {
        "he": "bin/he"
      }
    },
    "node_modules/ignore": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.1.tgz",
      "integrity": "sha512-5Fytz/IraMjqpwfd34ke28PTVMjZjJG2MPn5t7OE4eUCUNf8BAa7b5WUS9/Qvr6mwOQS7Mk6vdsMno5he+T8Xw==",
      "dev": true,
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/import-fresh": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz",
      "integrity": "sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==",
      "dev": true,
      "dependencies": {
        "parent-module": "^1.0.0",
        "resolve-from": "^4.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
      "dev": true,
      "engines": {
        "node": ">=0.8.19"
      }
    },
    "node_modules/inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
      "dev": true,
      "dependencies": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "node_modules/inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
      "dev": true
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "dev": true,
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "dev": true,
      "engines": {
        "node": ">=0.12.0"
      }
    },
    "node_modules/is-path-inside": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz",
      "integrity": "sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
      "dev": true
    },
    "node_modules/js-yaml": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
      "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
      "dev": true,
      "dependencies": {
        "argparse": "^2.0.1"
      },
      "bin": {
        "js-yaml": "bin/js-yaml.js"
      }
    },
    "node_modules/json-buffer": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
      "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
      "dev": true
    },
    "node_modules/json-schema-traverse": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
      "dev": true
    },
    "node_modules/json-stable-stringify-without-jsonify": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
      "integrity": "sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==",
      "dev": true
    },
    "node_modules/keyv": {
      "version": "4.5.4",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
      "integrity": "sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==",
      "dev": true,
      "dependencies": {
        "json-buffer": "3.0.1"
      }
    },
    "node_modules/levn": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz",
      "integrity": "sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==",
      "dev": true,
      "dependencies": {
        "prelude-ls": "^1.2.1",
        "type-check": "~0.4.0"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/locate-path": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
      "integrity": "sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==",
      "dev": true,
      "dependencies": {
        "p-locate": "^5.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/lodash": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==",
      "dev": true
    },
    "node_modules/lodash.merge": {
      "version": "4.6.2",
      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
      "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
      "dev": true
    },
    "node_modules/lru-cache": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
      "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
      "dev": true,
      "dependencies": {
        "yallist": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/magic-string": {
      "version": "0.30.10",
      "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.30.10.tgz",
      "integrity": "sha512-iIRwTIf0QKV3UAnYK4PU8uiEc4SRh5jX0mwpIwETPpHdhVM4f53RSwS/vXvN1JhGX+Cs7B8qIq3d6AH49O5fAQ==",
      "dependencies": {
        "@jridgewell/sourcemap-codec": "^1.4.15"
      }
    },
    "node_modules/merge2": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
      "dev": true,
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/micromatch": {
      "version": "4.0.5",
      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.5.tgz",
      "integrity": "sha512-DMy+ERcEW2q8Z2Po+WNXuw3c5YaUSFjAO5GsJqfEl7UjvtIuFKO6ZrKvcItdy98dwFI2N1tg3zNIdKaQT+aNdA==",
      "dev": true,
      "dependencies": {
        "braces": "^3.0.2",
        "picomatch": "^2.3.1"
      },
      "engines": {
        "node": ">=8.6"
      }
    },
    "node_modules/mime-db": {
      "version": "1.52.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mime-types": {
      "version": "2.1.35",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
      "dependencies": {
        "mime-db": "1.52.0"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/minimatch": {
      "version": "9.0.3",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz",
      "integrity": "sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==",
      "dev": true,
      "dependencies": {
        "brace-expansion": "^2.0.1"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/ms": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
      "dev": true
    },
    "node_modules/muggle-string": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/muggle-string/-/muggle-string-0.4.1.tgz",
      "integrity": "sha512-VNTrAak/KhO2i8dqqnqnAHOa3cYBwXEZe9h+D5h/1ZqFSTEFHdM65lR7RoIqq3tBBYavsOXV84NoHXZ0AkPyqQ==",
      "dev": true
    },
    "node_modules/nanoid": {
      "version": "3.3.7",
      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.7.tgz",
      "integrity": "sha512-eSRppjcPIatRIMC1U6UngP8XFcz8MQWGQdt1MTBQ7NaAmvXDfvNxbvWV3x2y6CdEUciCSsDHDQZbhYaB8QEo2g==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "bin": {
        "nanoid": "bin/nanoid.cjs"
      },
      "engines": {
        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
      }
    },
    "node_modules/natural-compare": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
      "integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==",
      "dev": true
    },
    "node_modules/nth-check": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/nth-check/-/nth-check-2.1.1.tgz",
      "integrity": "sha512-lqjrjmaOoAnWfMmBPL+XNnynZh2+swxiX3WUE0s4yEHI6m+AwrK2UZOimIRl3X/4QctVqS8AiZjFqyOGrMXb/w==",
      "dev": true,
      "dependencies": {
        "boolbase": "^1.0.0"
      },
      "funding": {
        "url": "https://github.com/fb55/nth-check?sponsor=1"
      }
    },
    "node_modules/once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
      "dev": true,
      "dependencies": {
        "wrappy": "1"
      }
    },
    "node_modules/optionator": {
      "version": "0.9.3",
      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.3.tgz",
      "integrity": "sha512-JjCoypp+jKn1ttEFExxhetCKeJt9zhAgAve5FXHixTvFDW/5aEktX9bufBKLRRMdU7bNtpLfcGu94B3cdEJgjg==",
      "dev": true,
      "dependencies": {
        "@aashutoshrathi/word-wrap": "^1.2.3",
        "deep-is": "^0.1.3",
        "fast-levenshtein": "^2.0.6",
        "levn": "^0.4.1",
        "prelude-ls": "^1.2.1",
        "type-check": "^0.4.0"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/p-limit": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
      "integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
      "dev": true,
      "dependencies": {
        "yocto-queue": "^0.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-locate": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz",
      "integrity": "sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==",
      "dev": true,
      "dependencies": {
        "p-limit": "^3.0.2"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/parent-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
      "dev": true,
      "dependencies": {
        "callsites": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/path-browserify": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-browserify/-/path-browserify-1.0.1.tgz",
      "integrity": "sha512-b7uo2UCUOYZcnF/3ID0lulOJi/bafxa1xPe7ZPsammBSpjSWQkjNxlt635YGS2MiR9GjvuXCtz2emr3jbsz98g==",
      "dev": true
    },
    "node_modules/path-exists": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/path-key": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-type": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz",
      "integrity": "sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/picocolors": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.0.0.tgz",
      "integrity": "sha512-1fygroTLlHu66zi26VoTDv8yRgm0Fccecssto+MhsZ0D/DGW2sm8E8AjW7NU5VVTRt5GxbeZ5qBuJr+HyLYkjQ=="
    },
    "node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "dev": true,
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/postcss": {
      "version": "8.4.38",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.38.tgz",
      "integrity": "sha512-Wglpdk03BSfXkHoQa3b/oulrotAkwrlLDRSOb9D0bN86FdRyE9lppSp33aHNPgBa0JKCoB+drFLZkQoRRYae5A==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/postcss"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "dependencies": {
        "nanoid": "^3.3.7",
        "picocolors": "^1.0.0",
        "source-map-js": "^1.2.0"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      }
    },
    "node_modules/postcss-selector-parser": {
      "version": "6.0.15",
      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.0.15.tgz",
      "integrity": "sha512-rEYkQOMUCEMhsKbK66tbEU9QVIxbhN18YiniAwA7XQYTVBqrBy+P2p5JcdqsHgKM2zWylp8d7J6eszocfds5Sw==",
      "dev": true,
      "dependencies": {
        "cssesc": "^3.0.0",
        "util-deprecate": "^1.0.2"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/prelude-ls": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz",
      "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==",
      "dev": true,
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/proxy-from-env": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz",
      "integrity": "sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg=="
    },
    "node_modules/punycode": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
      "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/queue-microtask": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ]
    },
    "node_modules/resolve-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/reusify": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.0.4.tgz",
      "integrity": "sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==",
      "dev": true,
      "engines": {
        "iojs": ">=1.0.0",
        "node": ">=0.10.0"
      }
    },
    "node_modules/rimraf": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
      "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
      "dev": true,
      "dependencies": {
        "glob": "^7.1.3"
      },
      "bin": {
        "rimraf": "bin.js"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/rollup": {
      "version": "4.13.0",
      "resolved": "https://registry.npmjs.org/rollup/-/rollup-4.13.0.tgz",
      "integrity": "sha512-3YegKemjoQnYKmsBlOHfMLVPPA5xLkQ8MHLLSw/fBrFaVkEayL51DilPpNNLq1exr98F2B1TzrV0FUlN3gWRPg==",
      "dev": true,
      "dependencies": {
        "@types/estree": "1.0.5"
      },
      "bin": {
        "rollup": "dist/bin/rollup"
      },
      "engines": {
        "node": ">=18.0.0",
        "npm": ">=8.0.0"
      },
      "optionalDependencies": {
        "@rollup/rollup-android-arm-eabi": "4.13.0",
        "@rollup/rollup-android-arm64": "4.13.0",
        "@rollup/rollup-darwin-arm64": "4.13.0",
        "@rollup/rollup-darwin-x64": "4.13.0",
        "@rollup/rollup-linux-arm-gnueabihf": "4.13.0",
        "@rollup/rollup-linux-arm64-gnu": "4.13.0",
        "@rollup/rollup-linux-arm64-musl": "4.13.0",
        "@rollup/rollup-linux-riscv64-gnu": "4.13.0",
        "@rollup/rollup-linux-x64-gnu": "4.13.0",
        "@rollup/rollup-linux-x64-musl": "4.13.0",
        "@rollup/rollup-win32-arm64-msvc": "4.13.0",
        "@rollup/rollup-win32-ia32-msvc": "4.13.0",
        "@rollup/rollup-win32-x64-msvc": "4.13.0",
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/run-parallel": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "dependencies": {
        "queue-microtask": "^1.2.2"
      }
    },
    "node_modules/semver": {
      "version": "7.6.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.6.0.tgz",
      "integrity": "sha512-EnwXhrlwXMk9gKu5/flx5sv/an57AkRplG3hTK68W7FRDN+k+OWBj65M7719OkA82XLBxrcX0KSHj+X5COhOVg==",
      "dev": true,
      "dependencies": {
        "lru-cache": "^6.0.0"
      },
      "bin": {
        "semver": "bin/semver.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/shebang-command": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
      "dev": true,
      "dependencies": {
        "shebang-regex": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/shebang-regex": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/slash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
      "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
      "dev": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/source-map-js": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.0.tgz",
      "integrity": "sha512-itJW8lvSA0TXEphiRoawsCksnlf8SyvmFzIhltqAHluXd88pkCd+cXJVHTDwdCr0IzwptSm035IHQktUu1QUMg==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-json-comments": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
      "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
      "dev": true,
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "dev": true,
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/text-table": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz",
      "integrity": "sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==",
      "dev": true
    },
    "node_modules/to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "dev": true,
      "dependencies": {
        "is-number": "^7.0.0"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/ts-api-utils": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-1.3.0.tgz",
      "integrity": "sha512-UQMIo7pb8WRomKR1/+MFVLTroIvDVtMX3K6OUir8ynLyzB8Jeriont2bTAtmNPa1ekAgN7YPDyf6V+ygrdU+eQ==",
      "dev": true,
      "engines": {
        "node": ">=16"
      },
      "peerDependencies": {
        "typescript": ">=4.2.0"
      }
    },
    "node_modules/type-check": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
      "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==",
      "dev": true,
      "dependencies": {
        "prelude-ls": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/type-fest": {
      "version": "0.20.2",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz",
      "integrity": "sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==",
      "dev": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/typescript": {
      "version": "5.4.5",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.4.5.tgz",
      "integrity": "sha512-vcI4UpRgg81oIRUFwR0WSIHKt11nJ7SAVlYNIu+QpqeyXP+gpQJy/Z4+F0aGxSE4MqwjyXvW/TzgkLAx2AGHwQ==",
      "devOptional": true,
      "bin": {
        "tsc": "bin/tsc",
        "tsserver": "bin/tsserver"
      },
      "engines": {
        "node": ">=14.17"
      }
    },
    "node_modules/uri-js": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
      "dev": true,
      "dependencies": {
        "punycode": "^2.1.0"
      }
    },
    "node_modules/util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
      "dev": true
    },
    "node_modules/vite": {
      "version": "5.2.13",
      "resolved": "https://registry.npmjs.org/vite/-/vite-5.2.13.tgz",
      "integrity": "sha512-SSq1noJfY9pR3I1TUENL3rQYDQCFqgD+lM6fTRAM8Nv6Lsg5hDLaXkjETVeBt+7vZBCMoibD+6IWnT2mJ+Zb/A==",
      "dev": true,
      "dependencies": {
        "esbuild": "^0.20.1",
        "postcss": "^8.4.38",
        "rollup": "^4.13.0"
      },
      "bin": {
        "vite": "bin/vite.js"
      },
      "engines": {
        "node": "^18.0.0 || >=20.0.0"
      },
      "funding": {
        "url": "https://github.com/vitejs/vite?sponsor=1"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.3"
      },
      "peerDependencies": {
        "@types/node": "^18.0.0 || >=20.0.0",
        "less": "*",
        "lightningcss": "^1.21.0",
        "sass": "*",
        "stylus": "*",
        "sugarss": "*",
        "terser": "^5.4.0"
      },
      "peerDependenciesMeta": {
        "@types/node": {
          "optional": true
        },
        "less": {
          "optional": true
        },
        "lightningcss": {
          "optional": true
        },
        "sass": {
          "optional": true
        },
        "stylus": {
          "optional": true
        },
        "sugarss": {
          "optional": true
        },
        "terser": {
          "optional": true
        }
      }
    },
    "node_modules/vscode-uri": {
      "version": "3.0.8",
      "resolved": "https://registry.npmjs.org/vscode-uri/-/vscode-uri-3.0.8.tgz",
      "integrity": "sha512-AyFQ0EVmsOZOlAnxoFOGOq1SQDWAB7C6aqMGS23svWAllfOaxbuFvcT8D1i8z3Gyn8fraVeZNNmN6e9bxxXkKw==",
      "dev": true
    },
    "node_modules/vue": {
      "version": "3.4.27",
      "resolved": "https://registry.npmjs.org/vue/-/vue-3.4.27.tgz",
      "integrity": "sha512-8s/56uK6r01r1icG/aEOHqyMVxd1bkYcSe9j8HcKtr/xTOFWvnzIVTehNW+5Yt89f+DLBe4A569pnZLS5HzAMA==",
      "dependencies": {
        "@vue/compiler-dom": "3.4.27",
        "@vue/compiler-sfc": "3.4.27",
        "@vue/runtime-dom": "3.4.27",
        "@vue/server-renderer": "3.4.27",
        "@vue/shared": "3.4.27"
      },
      "peerDependencies": {
        "typescript": "*"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/vue-class-component": {
      "version": "8.0.0-rc.1",
      "resolved": "https://registry.npmjs.org/vue-class-component/-/vue-class-component-8.0.0-rc.1.tgz",
      "integrity": "sha512-w1nMzsT/UdbDAXKqhwTmSoyuJzUXKrxLE77PCFVuC6syr8acdFDAq116xgvZh9UCuV0h+rlCtxXolr3Hi3HyPQ==",
      "peerDependencies": {
        "vue": "^3.0.0"
      }
    },
    "node_modules/vue-eslint-parser": {
      "version": "9.4.2",
      "resolved": "https://registry.npmjs.org/vue-eslint-parser/-/vue-eslint-parser-9.4.2.tgz",
      "integrity": "sha512-Ry9oiGmCAK91HrKMtCrKFWmSFWvYkpGglCeFAIqDdr9zdXmMMpJOmUJS7WWsW7fX81h6mwHmUZCQQ1E0PkSwYQ==",
      "dev": true,
      "dependencies": {
        "debug": "^4.3.4",
        "eslint-scope": "^7.1.1",
        "eslint-visitor-keys": "^3.3.0",
        "espree": "^9.3.1",
        "esquery": "^1.4.0",
        "lodash": "^4.17.21",
        "semver": "^7.3.6"
      },
      "engines": {
        "node": "^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/mysticatea"
      },
      "peerDependencies": {
        "eslint": ">=6.0.0"
      }
    },
    "node_modules/vue-template-compiler": {
      "version": "2.7.16",
      "resolved": "https://registry.npmjs.org/vue-template-compiler/-/vue-template-compiler-2.7.16.tgz",
      "integrity": "sha512-AYbUWAJHLGGQM7+cNTELw+KsOG9nl2CnSv467WobS5Cv9uk3wFcnr1Etsz2sEIHEZvw1U+o9mRlEO6QbZvUPGQ==",
      "dev": true,
      "dependencies": {
        "de-indent": "^1.0.2",
        "he": "^1.2.0"
      }
    },
    "node_modules/vue-tsc": {
      "version": "2.0.21",
      "resolved": "https://registry.npmjs.org/vue-tsc/-/vue-tsc-2.0.21.tgz",
      "integrity": "sha512-E6x1p1HaHES6Doy8pqtm7kQern79zRtIewkf9fiv7Y43Zo4AFDS5hKi+iHi2RwEhqRmuiwliB1LCEFEGwvxQnw==",
      "dev": true,
      "dependencies": {
        "@volar/typescript": "~2.3.0-alpha.15",
        "@vue/language-core": "2.0.21",
        "semver": "^7.5.4"
      },
      "bin": {
        "vue-tsc": "bin/vue-tsc.js"
      },
      "peerDependencies": {
        "typescript": "*"
      }
    },
    "node_modules/which": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
      "dev": true,
      "dependencies": {
        "isexe": "^2.0.0"
      },
      "bin": {
        "node-which": "bin/node-which"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
      "dev": true
    },
    "node_modules/xml-name-validator": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/xml-name-validator/-/xml-name-validator-4.0.0.tgz",
      "integrity": "sha512-ICP2e+jsHvAj2E2lIHxa5tjXRlKDJo4IdvPvCXbXQGdzSfmSpNVyIKMvoZHjDY9DP0zV17iI85o90vRFXNccRw==",
      "dev": true,
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/yallist": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",
      "dev": true
    },
    "node_modules/yocto-queue": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
      "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
      "dev": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    }
  }
}


File: ./package.json
{
  "name": "ui",
  "private": true,
  "version": "0.0.1",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vue-tsc && vite build",
    "preview": "vite preview",
    "lint": "eslint ui --fix"
  },
  "dependencies": {
    "axios": "^1.7.2",
    "bootstrap": "^5.3.3",
    "vue": "^3.4.27",
    "vue-class-component": "^8.0.0-rc.1"
  },
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^7.13.0",
    "@vitejs/plugin-vue": "^5.0.5",
    "eslint": "^8.57.0",
    "eslint-plugin-vue": "^9.26.0",
    "typescript": "^5.4.5",
    "vite": "^5.2.13",
    "vue-tsc": "^2.0.21"
  }
}


File: ./vite-env.d.ts
/// <reference types="vite/client" />


File: ./build.gradle.kts
plugins {
    java
    id("org.springframework.boot") version "3.3.0"
    id("io.spring.dependency-management") version "1.1.5"
    id("jacoco")
    id("org.sonarqube") version "5.0.0.4638"
}

group = "ee.tenman"
version = "0.0.1-SNAPSHOT"
val springdocOpenApiVersion = "2.5.0"
val selenideVersion = "7.3.2"

java {
    sourceCompatibility = JavaVersion.VERSION_21
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom(configurations.annotationProcessor.get())
    }
}

configurations {
    compileOnly {
        extendsFrom(configurations.annotationProcessor.get())
    }
}

repositories {
    mavenCentral()
}

extra["springCloudVersion"] = "2023.0.2"

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.boot:spring-boot-starter-data-redis-reactive")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.flywaydb:flyway-database-postgresql")
    implementation("org.springframework.session:spring-session-data-redis")
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:$springdocOpenApiVersion")
    implementation("org.springframework.cloud:spring-cloud-starter-openfeign")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-xml")
    compileOnly("org.projectlombok:lombok")
    developmentOnly("org.springframework.boot:spring-boot-docker-compose")
    runtimeOnly("org.postgresql:postgresql")
    annotationProcessor("org.projectlombok:lombok")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.springframework.boot:spring-boot-testcontainers")
    testImplementation("io.projectreactor:reactor-test")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:postgresql")
    testImplementation("com.codeborne:selenide:$selenideVersion")
    testImplementation("org.springframework.cloud:spring-cloud-starter-contract-stub-runner")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.cloud:spring-cloud-dependencies:${property("springCloudVersion")}")
    }
}

val isE2ETestEnvironmentEnabled = System.getenv("E2E")?.toBoolean() == true

val test by tasks.getting(Test::class) {
    useJUnitPlatform()
    if (isE2ETestEnvironmentEnabled) {
        configureE2ETestEnvironment()
    } else {
        exclude("**/e2e/**")
    }
    finalizedBy(":jacocoTestReport")
}

fun Test.configureE2ETestEnvironment() {
    include("**/e2e/**")
    val properties = mutableMapOf(
        "webdriver.chrome.logfile" to "build/reports/chromedriver.log",
        "webdriver.chrome.verboseLogging" to "true"
    )
    if (project.hasProperty("headless")) {
        properties["chromeoptions.args"] = "--headless,--no-sandbox,--disable-gpu"
    }
    systemProperties.putAll(properties)
}

val skipJacoco: Boolean = false
val jacocoEnabled: Boolean = true
tasks.withType<JacocoReport> {
    isEnabled = jacocoEnabled
    if (skipJacoco) {
        enabled = false
    }
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
}


File: ./settings.gradle.kts
rootProject.name = "weather-forecast"

include("weather-domain")
include("weather-db-migration")
include("weather-api")
include("weather-sync")


File: ./tsconfig.json
{
  "compilerOptions": {
    "target": "ES2020",
    "useDefineForClassFields": true,
    "experimentalDecorators": true,
    "module": "ESNext",
    "lib": [
      "ES2020",
      "DOM",
      "DOM.Iterable"
    ],
    "skipLibCheck": true,
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "forceConsistentCasingInFileNames": true,
    "sourceMap": true,
    "noEmit": true,
    "jsx": "preserve",
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true
  },
  "include": [
    "**/*.ts",
    "**/*.tsx",
    "**/*.vue"
  ],
  "references": [
    {
      "path": "./tsconfig.node.json"
    }
  ]
}


File: ./docker-compose.yml
version: '3.8'

services:
  postgres:
    image: postgres:16.3-alpine
    environment:
      POSTGRES_DB: weather
      POSTGRES_PASSWORD: weather
      POSTGRES_USER: weather
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 3s
      timeout: 1s
      retries: 5

  redis:
    image: redis:7.2-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 3s
      timeout: 1s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - '8080:8080'
    depends_on:
      - postgres
      - redis

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend

  app:
    image: nginx:alpine
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data:
  redis_data:


File: ./nginx.conf
server {
    listen 80;

    location /api {
        proxy_pass http://backend:8080;
    }

    location / {
        proxy_pass http://frontend:80;
    }
}


File: ./vite.config.ts
import {defineConfig} from 'vite';
import vue from '@vitejs/plugin-vue';

export default defineConfig({
    root: 'ui',
    plugins: [vue()],
    server: {
        port: 61234,
        proxy: {
            '/api': {
                target: 'http://localhost:8081',
                changeOrigin: true,
            },
        },
    },

    build: {
        outDir: '../dist', // This will output the build artifacts to /app/dist when the root is /app/ui
        sourcemap: true,
    },
});


File: ./gradlew.bat
@rem
@rem Copyright 2015 the original author or authors.
@rem
@rem Licensed under the Apache License, Version 2.0 (the "License");
@rem you may not use this file except in compliance with the License.
@rem You may obtain a copy of the License at
@rem
@rem      https://www.apache.org/licenses/LICENSE-2.0
@rem
@rem Unless required by applicable law or agreed to in writing, software
@rem distributed under the License is distributed on an "AS IS" BASIS,
@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@rem See the License for the specific language governing permissions and
@rem limitations under the License.
@rem

@if "%DEBUG%"=="" @echo off
@rem ##########################################################################
@rem
@rem  Gradle startup script for Windows
@rem
@rem ##########################################################################

@rem Set local scope for the variables with windows NT shell
if "%OS%"=="Windows_NT" setlocal

set DIRNAME=%~dp0
if "%DIRNAME%"=="" set DIRNAME=.
@rem This is normally unused
set APP_BASE_NAME=%~n0
set APP_HOME=%DIRNAME%

@rem Resolve any "." and ".." in APP_HOME to make it shorter.
for %%i in ("%APP_HOME%") do set APP_HOME=%%~fi

@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"

@rem Find java.exe
if defined JAVA_HOME goto findJavaFromJavaHome

set JAVA_EXE=java.exe
%JAVA_EXE% -version >NUL 2>&1
if %ERRORLEVEL% equ 0 goto execute

echo.
echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
echo.
echo Please set the JAVA_HOME variable in your environment to match the
echo location of your Java installation.

goto fail

:findJavaFromJavaHome
set JAVA_HOME=%JAVA_HOME:"=%
set JAVA_EXE=%JAVA_HOME%/bin/java.exe

if exist "%JAVA_EXE%" goto execute

echo.
echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
echo.
echo Please set the JAVA_HOME variable in your environment to match the
echo location of your Java installation.

goto fail

:execute
@rem Setup the command line

set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar


@rem Execute Gradle
"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %*

:end
@rem End local scope for the variables with windows NT shell
if %ERRORLEVEL% equ 0 goto mainEnd

:fail
rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
rem the _cmd.exe /c_ return code!
set EXIT_CODE=%ERRORLEVEL%
if %EXIT_CODE% equ 0 set EXIT_CODE=1
if not ""=="%GRADLE_EXIT_CONSOLE%" exit %EXIT_CODE%
exit /b %EXIT_CODE%

:mainEnd
if "%OS%"=="Windows_NT" endlocal

:omega


File: ./Dockerfile.e2e
FROM node:21-slim as frontend-build

WORKDIR /app
COPY ui/ ui/
COPY tsconfig.json tsconfig.node.json vite.config.ts vite-env.d.ts package.json package-lock.json ./

RUN npm ci
RUN npm run build

FROM gradle:jdk21 as backend-build

WORKDIR /app
COPY . .

RUN ./gradlew clean build -x test

FROM backend-build as final

WORKDIR /app

COPY --from=frontend-build /app/dist/ public/
COPY --from=backend-build /app/build/libs/*.jar /app/app.jar

CMD ["sh", "-c", "java $JAVA_OPTS -Dserver.port=$TEST_SERVER_PORT -jar /app/app.jar"]


File: ./compose.yml
version: '3.8'

services:
  postgres-dev:
    image: postgres:16.3-alpine
    environment:
      POSTGRES_DB: weather
      POSTGRES_PASSWORD: weather
      POSTGRES_USER: weather
    ports:
      - '5432:5432'
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 3s
      timeout: 1s
      retries: 5

  redis-dev:
    image: redis:7.2-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data_dev:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 3s
      timeout: 1s
      retries: 5

volumes:
  postgres_data_dev:
  redis_data_dev:


File: ./Dockerfile.frontend
FROM node:21-slim as build

WORKDIR /app
# Copying files separately can help in utilizing Docker's cache mechanism efficiently.
COPY package.json package-lock.json ./
RUN npm install

# Copying the rest of the files after npm install ensures that a change in the source
# does not invalidate the Docker cache from the npm install layer.
COPY ui/ ./ui
COPY tsconfig.json ./
COPY tsconfig.node.json ./
COPY vite.config.ts ./
COPY vite-env.d.ts ./

RUN npm run build && ls -la /app

# Verify that the dist directory exists and contains the expected files.
# This is just for debugging purposes. You can remove this line once everything works fine.
RUN ls -la /app/dist/

FROM nginx:alpine
COPY --from=build /app/dist /usr/share/nginx/html

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]


File: ./ui/app.vue
<script setup lang="ts">
import WeatherComponent from './components/weather-component.vue'
</script>

<template>
  <WeatherComponent/>
</template>


File: ./ui/index.html
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Weather Forecast</title>
  </head>
  <body>
    <div id="app"></div>
    <script type="module" src="./main.ts"></script>
  </body>
</html>


File: ./ui/main.ts
import {createApp} from 'vue'
import './style.css'
import 'bootstrap/dist/css/bootstrap.min.css'
import app from './app.vue'

createApp(app).mount('#app')


File: ./ui/.eslintrc.cjs
module.exports = {
    root: true,
    env: {
        browser: true,
        node: true,
    },
    parserOptions: {
        parser: '@typescript-eslint/parser',
        ecmaVersion: 2021,
        sourceType: 'module',
    },
    extends: [
        'eslint:recommended',
        'plugin:@typescript-eslint/recommended',
        'plugin:vue/vue3-recommended',
    ],
    rules: {
        semi: ['error', 'never'], // Enforce no semicolons
        quotes: ['error', 'single'], // Enforce single quotes
        'no-unused-vars': 'warn', // Warn about unused variables
        'no-console': 'warn', // Warn about console.log statements
        '@typescript-eslint/no-explicit-any': 'off', // Allow usage of the any type
        '@typescript-eslint/explicit-module-boundary-types': 'off', // Do not require explicit return types
    },
};


File: ./ui/README.md
# Vue 3 + TypeScript + Vite

This template should help get you started developing with Vue 3 and TypeScript in Vite. The template uses Vue 3 `<script setup>` SFCs, check out the [script setup docs](https://v3.vuejs.org/api/sfc-script-setup.html#sfc-script-setup) to learn more.

## Recommended IDE Setup

- [VS Code](https://code.visualstudio.com/) + [Volar](https://marketplace.visualstudio.com/items?itemName=Vue.volar) (and disable Vetur) + [TypeScript Vue Plugin (Volar)](https://marketplace.visualstudio.com/items?itemName=Vue.vscode-typescript-vue-plugin).

## Type Support For `.vue` Imports in TS

TypeScript cannot handle type information for `.vue` imports by default, so we replace the `tsc` CLI with `vue-tsc` for type checking. In editors, we need [TypeScript Vue Plugin (Volar)](https://marketplace.visualstudio.com/items?itemName=Vue.vscode-typescript-vue-plugin) to make the TypeScript language service aware of `.vue` types.

If the standalone TypeScript plugin doesn't feel fast enough to you, Volar has also implemented a [Take Over Mode](https://github.com/johnsoncodehk/volar/discussions/471#discussioncomment-1361669) that is more performant. You can enable it by the following steps:

1. Disable the built-in TypeScript Extension
   1. Run `Extensions: Show Built-in Extensions` from VSCode's command palette
   2. Find `TypeScript and JavaScript Language Features`, right click and select `Disable (Workspace)`
2. Reload the VSCode window by running `Developer: Reload Window` from the command palette.


File: ./ui/.gitignore
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?


File: ./ui/style.css
#app {
    font-family: Avenir, Helvetica, Arial, sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-align: left;
    color: #2c3e50;
    margin-top: 60px;
}


File: ./ui/models/api-error.ts
interface ValidationErrors {
    [key: string]: string;
}

/* eslint-disable no-unused-vars */
export class ApiError {
    constructor(
        public status: number | string,
        public message: string,
        public debugMessage: string,
        public validationErrors: ValidationErrors = {}
    ) {
    }
}

/* eslint-enable no-unused-vars */


File: ./ui/models/alert-type.ts
/* eslint-disable no-unused-vars */
export enum AlertType {
    ERROR = 'error',
    SUCCESS = 'success',
}

export function getAlertBootstrapClass(type: AlertType | null): string {
    const mapping: Record<AlertType, string> = {
        [AlertType.ERROR]: 'alert-danger',
        [AlertType.SUCCESS]: 'alert-success',
    }
    return mapping[type ?? AlertType.ERROR] || 'alert-info'
}

/* eslint-enable no-unused-vars */



File: ./ui/models/weather-forecast.ts
import {WeatherForecast} from "./weather-forecast-response";

export interface WeatherForecastResponse {
    [location: string]: WeatherForecast[];
}


File: ./ui/models/weather-forecast-response.ts
export interface WeatherForecast {
    date: string;
    location: string;
    temperatureMin: number;
    temperatureMax: number;
}


File: ./ui/components/weather-component.vue
<template>
  <div class="container mt-3">
    <div class="row mt-4">
      <div class="col-md-5">
        <h3>Weather Forecast</h3>
        <form @submit.prevent="fetchWeatherForecast">
          <div class="input-group mb-3">
            <input
                id="location"
                v-model="location"
                class="form-control"
                type="text"
                placeholder="Search for location..."
            />
            <button class="btn btn-primary" type="submit">Search</button>
          </div>
        </form>
        <div v-if="weatherForecast">
          <div v-for="(forecastList, location) in weatherForecast" :key="location" id="results">
            <h5 class="location">{{ location }}</h5>
            <ul>
              <li v-for="forecast in forecastList" :key="forecast.date">
                {{ forecast.date }}: {{ forecast.temperatureMin }}-{{ forecast.temperatureMax }}&deg;C
              </li>
            </ul>
          </div>
        </div>
        <div v-if="displayAlert()" class="mt-3">
          <div :class="['alert', alertClass()]" role="alert">
            {{ alertMessage }}
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script lang="ts" src="./weather-component.ts"></script>


File: ./ui/components/weather-component.ts
import {Vue} from 'vue-class-component'
import {AlertType, getAlertBootstrapClass} from '../models/alert-type'
import {WeatherService} from '../services/weather-service'
import {ApiError} from '../models/api-error'
import {WeatherForecastResponse} from "../models/weather-forecast";

export default class WeatherComponent extends Vue {
    alertMessage: string = ''
    alertType: AlertType | null = null
    apiService: WeatherService = new WeatherService()
    location: string = ''
    weatherForecast: WeatherForecastResponse | null = null;

    async fetchWeatherForecast() {
        try {
            this.weatherForecast = await this.apiService.getWeatherForecast(this.location)
        } catch (error) {
            this.handleApiError('Failed to load weather forecast. Please try again.', error)
        }
    }

    alertClass(): string {
        return getAlertBootstrapClass(this.alertType)
    }

    displayAlert(): boolean {
        return this.alertType !== null && this.alertMessage !== ''
    }

    private handleApiError(defaultMessage: string, error: any) {
        this.alertType = AlertType.ERROR
        if (error instanceof ApiError) {
            this.alertMessage = `${error.message}. ${error.debugMessage}: ${Object.entries(error.validationErrors)
                .map(([, message]) => message).join(', ')}`
        } else {
            this.alertMessage = defaultMessage
        }
    }

}


File: ./ui/public/vite.svg
<svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" role="img" class="iconify iconify--logos" width="31.88"
     height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 257">
    <defs>
        <linearGradient id="IconifyId1813088fe1fbc01fb466" x1="-.828%" x2="57.636%" y1="7.652%" y2="78.411%">
            <stop offset="0%" stop-color="#41D1FF"></stop>
            <stop offset="100%" stop-color="#BD34FE"></stop>
        </linearGradient>
        <linearGradient id="IconifyId1813088fe1fbc01fb467" x1="43.376%" x2="50.316%" y1="2.242%" y2="89.03%">
            <stop offset="0%" stop-color="#FFEA83"></stop>
            <stop offset="8.333%" stop-color="#FFDD35"></stop>
            <stop offset="100%" stop-color="#FFA800"></stop>
        </linearGradient>
    </defs>
    <path fill="url(#IconifyId1813088fe1fbc01fb466)"
          d="M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z"></path>
    <path fill="url(#IconifyId1813088fe1fbc01fb467)"
          d="M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z"></path>
</svg>


File: ./ui/services/weather-service.ts
import axios, {AxiosError} from 'axios'
import {ApiError} from '../models/api-error'
import {WeatherForecastResponse} from "../models/weather-forecast";

export class WeatherService {

    async getWeatherForecast(location: string): Promise<WeatherForecastResponse> {
        try {
            const {data} = await axios.get<WeatherForecastResponse>('/api/weather/forecast', { params: { location } })
            return data
        } catch (error) {
            this.handleError(error as AxiosError<ApiError>)
        }
    }

    private handleError(error: AxiosError<ApiError>): never {
        if (axios.isAxiosError(error) && error.response) {
            throw new ApiError(
                error.response.status,
                error.response.data.message ?? 'Unknown error',
                error.response.data.debugMessage ?? 'An unknown error occurred. Is backend running?',
                error.response.data.validationErrors ?? {}
            )
        }
        throw error
    }
}


File: ./screenshots/profile-form.jpeg
File: ./weather-api/build.gradle.kts
plugins {
    java
    id("org.springframework.boot") version "3.3.0"
    id("io.spring.dependency-management") version "1.1.5"
    id("jacoco")
    id("org.sonarqube") version "5.0.0.4638"
}

group = "ee.tenman"
version = "0.0.1-SNAPSHOT"
val springdocOpenApiVersion = "2.5.0"
val selenideVersion = "7.3.2"

java {
    sourceCompatibility = JavaVersion.VERSION_21
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom(configurations.annotationProcessor.get())
    }
}

configurations {
    compileOnly {
        extendsFrom(configurations.annotationProcessor.get())
    }
}

repositories {
    mavenCentral()
}

extra["springCloudVersion"] = "2023.0.2"

dependencies {
    implementation(project(":weather-domain"))
    implementation(project(":weather-db-migration"))
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.boot:spring-boot-starter-data-redis-reactive")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.flywaydb:flyway-database-postgresql")
    implementation("org.springframework.session:spring-session-data-redis")
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:$springdocOpenApiVersion")
    implementation("org.springframework.cloud:spring-cloud-starter-openfeign")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-xml")
    compileOnly("org.projectlombok:lombok")
    developmentOnly("org.springframework.boot:spring-boot-docker-compose")
    runtimeOnly("org.postgresql:postgresql")
    annotationProcessor("org.projectlombok:lombok")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.springframework.boot:spring-boot-testcontainers")
    testImplementation("io.projectreactor:reactor-test")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:postgresql")
    testImplementation("com.codeborne:selenide:$selenideVersion")
    testImplementation("org.springframework.cloud:spring-cloud-starter-contract-stub-runner")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.cloud:spring-cloud-dependencies:${property("springCloudVersion")}")
    }
}

val isE2ETestEnvironmentEnabled = System.getenv("E2E")?.toBoolean() == true

val test by tasks.getting(Test::class) {
    useJUnitPlatform()
    if (isE2ETestEnvironmentEnabled) {
        configureE2ETestEnvironment()
    } else {
        exclude("**/e2e/**")
    }
    finalizedBy(":jacocoTestReport")
}

fun Test.configureE2ETestEnvironment() {
    include("**/e2e/**")
    val properties = mutableMapOf(
        "webdriver.chrome.logfile" to "build/reports/chromedriver.log",
        "webdriver.chrome.verboseLogging" to "true"
    )
    if (project.hasProperty("headless")) {
        properties["chromeoptions.args"] = "--headless,--no-sandbox,--disable-gpu"
    }
    systemProperties.putAll(properties)
}

val skipJacoco: Boolean = false
val jacocoEnabled: Boolean = true
tasks.withType<JacocoReport> {
    isEnabled = jacocoEnabled
    if (skipJacoco) {
        enabled = false
    }
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
}


File: ./weather-api/src/test/resources/clear_database.sql
CREATE OR REPLACE FUNCTION truncate_all_except(exclusions text[])
    RETURNS VOID
AS
'
    DECLARE
        table_record RECORD;
    BEGIN
        FOR table_record IN SELECT table_name
                            FROM information_schema.tables
                            WHERE table_schema = ''public''
                              AND table_type = ''BASE TABLE''
            LOOP
                IF NOT table_record.table_name = ANY (exclusions)
                THEN
                    EXECUTE format(''TRUNCATE TABLE %I RESTART IDENTITY CASCADE'', table_record.table_name);
                END IF;
            END LOOP;
    END;
'
    LANGUAGE plpgsql;

SELECT truncate_all_except(ARRAY ['flyway_schema_history']);


File: ./weather-api/src/test/resources/sectors.json
[
  {
    "id": 1,
    "name": "Manufacturing",
    "level": 0,
    "children": [
      {
        "id": 5,
        "name": "Printing",
        "level": 1,
        "children": [
          {
            "id": 145,
            "name": "Labelling and packaging printing",
            "level": 2,
            "children": []
          },
          {
            "id": 150,
            "name": "Book/Periodicals printing",
            "level": 2,
            "children": []
          },
          {
            "id": 148,
            "name": "Advertising",
            "level": 2,
            "children": []
          }
        ]
      },
      {
        "id": 6,
        "name": "Food and Beverage",
        "level": 1,
        "children": [
          {
            "id": 437,
            "name": "Other",
            "level": 2,
            "children": []
          },
          {
            "id": 342,
            "name": "Bakery & confectionery products",
            "level": 2,
            "children": []
          },
          {
            "id": 39,
            "name": "Milk & dairy products",
            "level": 2,
            "children": []
          },
          {
            "id": 40,
            "name": "Meat & meat products",
            "level": 2,
            "children": []
          },
          {
            "id": 378,
            "name": "Sweets & snack food",
            "level": 2,
            "children": []
          },
          {
            "id": 42,
            "name": "Fish & fish products",
            "level": 2,
            "children": []
          },
          {
            "id": 43,
            "name": "Beverages",
            "level": 2,
            "children": []
          }
        ]
      },
      {
        "id": 7,
        "name": "Textile and Clothing",
        "level": 1,
        "children": [
          {
            "id": 45,
            "name": "Textile",
            "level": 2,
            "children": []
          },
          {
            "id": 44,
            "name": "Clothing",
            "level": 2,
            "children": []
          }
        ]
      },
      {
        "id": 8,
        "name": "Wood",
        "level": 1,
        "children": [
          {
            "id": 337,
            "name": "Other (Wood)",
            "level": 2,
            "children": []
          },
          {
            "id": 47,
            "name": "Wooden houses",
            "level": 2,
            "children": []
          },
          {
            "id": 51,
            "name": "Wooden building materials",
            "level": 2,
            "children": []
          }
        ]
      },
      {
        "id": 9,
        "name": "Plastic and Rubber",
        "level": 1,
        "children": [
          {
            "id": 53,
            "name": "Plastics welding and processing",
            "level": 2,
            "children": []
          },
          {
            "id": 54,
            "name": "Packaging",
            "level": 2,
            "children": []
          },
          {
            "id": 55,
            "name": "Blowing",
            "level": 2,
            "children": []
          },
          {
            "id": 57,
            "name": "Moulding",
            "level": 2,
            "children": []
          },
          {
            "id": 556,
            "name": "Plastic goods",
            "level": 2,
            "children": []
          },
          {
            "id": 559,
            "name": "Plastic processing technology",
            "level": 2,
            "children": []
          },
          {
            "id": 560,
            "name": "Plastic profiles",
            "level": 2,
            "children": []
          }
        ]
      },
      {
        "id": 11,
        "name": "Metalworking",
        "level": 1,
        "children": [
          {
            "id": 69,
            "name": "Gas, Plasma, Laser cutting",
            "level": 2,
            "children": []
          },
          {
            "id": 263,
            "name": "Houses and buildings",
            "level": 2,
            "children": []
          },
          {
            "id": 75,
            "name": "CNC-machining",
            "level": 2,
            "children": []
          },
          {
            "id": 267,
            "name": "Metal products",
            "level": 2,
            "children": []
          },
          {
            "id": 62,
            "name": "Forgings, Fasteners",
            "level": 2,
            "children": []
          },
          {
            "id": 542,
            "name": "Metal works",
            "level": 2,
            "children": []
          },
          {
            "id": 66,
            "name": "MIG, TIG, Aluminum welding",
            "level": 2,
            "children": []
          },
          {
            "id": 67,
            "name": "Construction of metal structures",
            "level": 2,
            "children": []
          }
        ]
      },
      {
        "id": 12,
        "name": "Machinery",
        "level": 1,
        "children": [
          {
            "id": 91,
            "name": "Machinery equipment/tools",
            "level": 2,
            "children": []
          },
          {
            "id": 508,
            "name": "Other",
            "level": 2,
            "children": []
          },
          {
            "id": 93,
            "name": "Metal structures",
            "level": 2,
            "children": []
          },
          {
            "id": 94,
            "name": "Machinery components",
            "level": 2,
            "children": []
          },
          {
            "id": 224,
            "name": "Manufacture of machinery",
            "level": 2,
            "children": []
          },
          {
            "id": 97,
            "name": "Maritime",
            "level": 2,
            "children": [
              {
                "id": 269,
                "name": "Boat/Yacht building",
                "level": 3,
                "children": []
              },
              {
                "id": 230,
                "name": "Ship repair and conversion",
                "level": 3,
                "children": []
              },
              {
                "id": 271,
                "name": "Aluminium and steel workboats",
                "level": 3,
                "children": []
              }
            ]
          },
          {
            "id": 227,
            "name": "Repair and maintenance service",
            "level": 2,
            "children": []
          }
        ]
      },
      {
        "id": 13,
        "name": "Furniture",
        "level": 1,
        "children": [
          {
            "id": 101,
            "name": "Living room",
            "level": 2,
            "children": []
          },
          {
            "id": 341,
            "name": "Outdoor",
            "level": 2,
            "children": []
          },
          {
            "id": 389,
            "name": "Bathroom/sauna",
            "level": 2,
            "children": []
          },
          {
            "id": 390,
            "name": "Children’s room",
            "level": 2,
            "children": []
          },
          {
            "id": 392,
            "name": "Office",
            "level": 2,
            "children": []
          },
          {
            "id": 394,
            "name": "Other (Furniture)",
            "level": 2,
            "children": []
          },
          {
            "id": 385,
            "name": "Bedroom",
            "level": 2,
            "children": []
          },
          {
            "id": 98,
            "name": "Kitchen",
            "level": 2,
            "children": []
          },
          {
            "id": 99,
            "name": "Project furniture",
            "level": 2,
            "children": []
          }
        ]
      },
      {
        "id": 18,
        "name": "Electronics and Optics",
        "level": 1,
        "children": []
      },
      {
        "id": 19,
        "name": "Construction materials",
        "level": 1,
        "children": []
      }
    ]
  },
  {
    "id": 2,
    "name": "Service",
    "level": 0,
    "children": [
      {
        "id": 21,
        "name": "Transport and Logistics",
        "level": 1,
        "children": [
          {
            "id": 111,
            "name": "Air",
            "level": 2,
            "children": []
          },
          {
            "id": 112,
            "name": "Road",
            "level": 2,
            "children": []
          },
          {
            "id": 113,
            "name": "Water",
            "level": 2,
            "children": []
          },
          {
            "id": 114,
            "name": "Rail",
            "level": 2,
            "children": []
          }
        ]
      },
      {
        "id": 141,
        "name": "Translation services",
        "level": 1,
        "children": []
      },
      {
        "id": 22,
        "name": "Tourism",
        "level": 1,
        "children": []
      },
      {
        "id": 25,
        "name": "Business services",
        "level": 1,
        "children": []
      },
      {
        "id": 35,
        "name": "Engineering",
        "level": 1,
        "children": []
      },
      {
        "id": 28,
        "name": "Information Technology and Telecommunications",
        "level": 1,
        "children": [
          {
            "id": 581,
            "name": "Data processing, Web portals, E-marketing",
            "level": 2,
            "children": []
          },
          {
            "id": 576,
            "name": "Programming, Consultancy",
            "level": 2,
            "children": []
          },
          {
            "id": 121,
            "name": "Software, Hardware",
            "level": 2,
            "children": []
          },
          {
            "id": 122,
            "name": "Telecommunications",
            "level": 2,
            "children": []
          }
        ]
      }
    ]
  },
  {
    "id": 3,
    "name": "Other",
    "level": 0,
    "children": [
      {
        "id": 37,
        "name": "Creative industries",
        "level": 1,
        "children": []
      },
      {
        "id": 29,
        "name": "Energy technology",
        "level": 1,
        "children": []
      },
      {
        "id": 33,
        "name": "Environment",
        "level": 1,
        "children": []
      }
    ]
  }
]


File: ./weather-api/src/test/resources/application.yml
spring:
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true

server:
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
    session:
      timeout: 30m

ilmateenistus:
  url: http://localhost:${wiremock.server.port}


File: ./weather-api/src/test/resources/__files/forecast.xml
<?xml version="1.0" encoding="UTF-8" ?>
<forecasts>
    <forecast date="2024-06-16">
        <night>
            <phenomenon>Variable clouds</phenomenon>
            <tempmin>7</tempmin>
            <tempmax>13</tempmax>
            <text>Slightly or partly cloudy. On islands showers locally. Fog patches possible. Southeast, east wind 1-6,
                on islands to 9, in gusts up to 12 m/s. Air temperature 7..13°C.
            </text>
            <place>
                <name>Harku</name>
                <phenomenon>Variable clouds</phenomenon>
                <tempmin>9</tempmin>
            </place>
            <place>
                <name>Jõhvi</name>
                <phenomenon>Few clouds</phenomenon>
                <tempmin>8</tempmin>
            </place>
            <place>
                <name>Tartu</name>
                <phenomenon>Few clouds</phenomenon>
                <tempmin>9</tempmin>
            </place>
            <place>
                <name>Pärnu</name>
                <phenomenon>Variable clouds</phenomenon>
                <tempmin>12</tempmin>
            </place>
            <place>
                <name>Kuressaare</name>
                <phenomenon>Light shower</phenomenon>
                <tempmin>13</tempmin>
            </place>
            <place>
                <name>Türi</name>
                <phenomenon>Few clouds</phenomenon>
                <tempmin>9</tempmin>
            </place>
            <wind>
                <name>Kuusiku</name>
                <direction>Southeast wind</direction>
                <speedmin>2</speedmin>
                <speedmax>5</speedmax>
                <gust></gust>
            </wind>
            <wind>
                <name>Väike-Maarja</name>
                <direction>East wind</direction>
                <speedmin>1</speedmin>
                <speedmax>4</speedmax>
                <gust></gust>
            </wind>
            <wind>
                <name>Võrtsjärv</name>
                <direction>Southeast wind</direction>
                <speedmin>2</speedmin>
                <speedmax>4</speedmax>
                <gust></gust>
            </wind>
            <sea>Forecast for Baltic Sea valid 24 hours from 19:00 Jun 15 to 19:00 UTC Jun 16, 2024.

                Warnings: Northern Baltic: southeast in gusts up to 15 m/s. Wave height 1-2 m.

                Weather summary: High moving slowly over the Baltic States to northeast. Weak Trough of Low moving over
                Baltic Sea northwards.


                Northern Baltic: southeast 6-11, in gusts up to 15 m/s, in morning decreasing, by day mainly southerly
                3-8 m/s. At night wave height 1-2 m. Rain showers in many places. Visibility good to moderate.

                Gulf of Finland, Moonsund, Northern Gulf of Riga: east, southeast 3-9, at night in gusts to 12 m/s. Dry.
                Visibility mostly good
            </sea>
            <peipsi>Southeast, east wind 2-7 m/s. Wave height 0.3-0.7 m. Dry. Visibility mostly good. Air temperature
                12..14°C.
            </peipsi>
        </night>
        <day>
            <phenomenon>Variable clouds</phenomenon>
            <tempmin>18</tempmin>
            <tempmax>24</tempmax>
            <text>Partly cloudy. On the islands showers possible. Southeast, east wind 2-8 m/s. Air temperature
                18..24°C.
            </text>
            <place>
                <name>Harku</name>
                <phenomenon>Variable clouds</phenomenon>
                <tempmax>23</tempmax>
            </place>
            <place>
                <name>Jõhvi</name>
                <phenomenon>Variable clouds</phenomenon>
                <tempmax>22</tempmax>
            </place>
            <place>
                <name>Tartu</name>
                <phenomenon>Variable clouds</phenomenon>
                <tempmax>23</tempmax>
            </place>
            <place>
                <name>Pärnu</name>
                <phenomenon>Variable clouds</phenomenon>
                <tempmax>23</tempmax>
            </place>
            <place>
                <name>Kuressaare</name>
                <phenomenon>Variable clouds</phenomenon>
                <tempmax>18</tempmax>
            </place>
            <place>
                <name>Türi</name>
                <phenomenon>Variable clouds</phenomenon>
                <tempmax>22</tempmax>
            </place>
            <wind>
                <name>Kuusiku</name>
                <direction>Southeast wind</direction>
                <speedmin>3</speedmin>
                <speedmax>5</speedmax>
                <gust></gust>
            </wind>
            <wind>
                <name>Väike-Maarja</name>
                <direction>East wind</direction>
                <speedmin>2</speedmin>
                <speedmax>5</speedmax>
                <gust></gust>
            </wind>
            <wind>
                <name>Võrtsjärv</name>
                <direction>Southeast wind</direction>
                <speedmin>3</speedmin>
                <speedmax>6</speedmax>
                <gust></gust>
            </wind>
            <sea></sea>
            <peipsi>Southeast, east wind 2-8 m/s. Wave height 0.3-0.7 m. Dry. Visibility mostly good. Air temperature
                19..21°C.
            </peipsi>
        </day>
    </forecast>
    <forecast date="2024-06-17">
        <night>
            <phenomenon>Moderate shower</phenomenon>
            <tempmin>12</tempmin>
            <tempmax>17</tempmax>
            <text>Few and variable clouds. Rain showers locally, by morning more widely, risk of thunder. Easterly wind
                2-8 m/s. Air temperature 12..17°C.
            </text>
        </night>
        <day>
            <phenomenon>Thunderstorm</phenomenon>
            <tempmin>17</tempmin>
            <tempmax>26</tempmax>
            <text>Cloudy with bright spells. Showers with thunder, locally heavy precipitation and hail possible. By
                evening it is clearing up and rain reducing. Wind becoming from islands westerly 2-8 m/s, gusty during
                thunder. Air temperature 20..26, on coast and under rainclouds locally 17°C.
            </text>
        </day>
    </forecast>
    <forecast date="2024-06-18">
        <night>
            <phenomenon>Moderate shower</phenomenon>
            <tempmin>9</tempmin>
            <tempmax>15</tempmax>
            <text>Slightly or partly cloudy. In eastern part showers in many places, risk of thunder. Locally fog.
                Westerly wind 2-8 m/s. Air temperature 9..15°C.
            </text>
        </night>
        <day>
            <phenomenon>Light shower</phenomenon>
            <tempmin>17</tempmin>
            <tempmax>25</tempmax>
            <text>Slightly or partly cloudy and locally showers. Westerly wind 2-8 m/s. Air temperature 19..25, on coast
                locally to 17°C.
            </text>
        </day>
    </forecast>
    <forecast date="2024-06-19">
        <night>
            <phenomenon>Moderate shower</phenomenon>
            <tempmin>10</tempmin>
            <tempmax>15</tempmax>
            <text>Slightly or partly cloudy. Locally showers. Westerly wind 2-8 m/s. Air temperature 10..15°C.</text>
        </night>
        <day>
            <phenomenon>Moderate shower</phenomenon>
            <tempmin>16</tempmin>
            <tempmax>21</tempmax>
            <text>Variable clouds. Showers in many places, risk of thunder. In the evening it is clearing up from west.
                Westerly wind 3-9, on coast in gusts 12 m/s, during thunder stronger gusts possible. Air temperature
                16..21°C.
            </text>
        </day>
    </forecast>
</forecasts>


File: ./weather-api/src/test/resources/__files/forecast2.xml
<?xml version="1.0" encoding="UTF-8" ?>
<forecasts>
    <forecast date="2024-06-17">
        <night>
            <phenomenon>Moderate shower</phenomenon>
            <tempmin>10</tempmin>
            <tempmax>18</tempmax>
            <text>Few and variable clouds. Rain showers locally, risk of thunder. Mainly easterly wind 2-7 m/s. Air temperature 12..18, in northeastern part locally to 10°C.  </text>
            <place>
                <name>Harku</name>
                <phenomenon>Variable clouds</phenomenon>
                <tempmin>14</tempmin>
            </place>
            <place>
                <name>Jõhvi</name>
                <phenomenon>Variable clouds</phenomenon>
                <tempmin>14</tempmin>
            </place>
            <place>
                <name>Tartu</name>
                <phenomenon>Moderate shower</phenomenon>
                <tempmin>17</tempmin>
            </place>
            <place>
                <name>Pärnu</name>
                <phenomenon>Moderate shower</phenomenon>
                <tempmin>17</tempmin>
            </place>
            <place>
                <name>Kuressaare</name>
                <phenomenon>Variable clouds</phenomenon>
                <tempmin>14</tempmin>
            </place>
            <place>
                <name>Türi</name>
                <phenomenon>Light shower</phenomenon>
                <tempmin>14</tempmin>
            </place>
            <wind>
                <name>Kuusiku</name>
                <direction>East wind</direction>
                <speedmin>2</speedmin>
                <speedmax>5</speedmax>
                <gust></gust>
            </wind>
            <wind>
                <name>Väike-Maarja</name>
                <direction>East wind</direction>
                <speedmin>2</speedmin>
                <speedmax>6</speedmax>
                <gust></gust>
            </wind>
            <wind>
                <name>Võrtsjärv</name>
                <direction>East wind</direction>
                <speedmin>2</speedmin>
                <speedmax>5</speedmax>
                <gust></gust>
            </wind>
            <sea>Forecast for Baltic Sea valid 24 hours from 13:00 UTC Jun 16 to 13:00 UTC Jun 17, 2024.

                No warnings

                Weather summary: eastern part of Low over Baltic Sea.


                Northern Baltic: by day mainly southerly, at night and tomorrow by day variable 2-7 m/s. Today in many places, tomorrow locally rain showers. Visibility good to moderate.

                Gulf of Finland: by day east, southeast 3-8, in gusts 11 m/s, at night and tomorrow by day easterly 2-8 m/s. At night locally, tomorrow by day in many places rain showers, locally heavy precipitation and risk of thunder. Visibility good, restricted in showers.

                Moonsund, Northern Gulf of Riga: east, southeast, tomorrow by day mainly southerly 2-7 m/s. At night locally, tomorrow by day in many places rain showers, locally heavy precipitation and risk of thunder. Visibility good, restricted in showers.
            </sea>
            <peipsi>Mainly easterly wind 2-7 m/s. Wave height 0.3-0.7 m. After midnight locally showers. Visibility good to moderate. Air temperature 15..18°C.</peipsi>
        </night>
        <day>
            <phenomenon>Thunderstorm</phenomenon>
            <tempmin>17</tempmin>
            <tempmax>26</tempmax>
            <text>Cloudy with bright spells. Showers with thunder, locally heavy precipitation and hail possible. In the evening it is clearing up on islands. Mainly easterly, on islands variable wind 2-8 m/s, during thunder strong wind gusts possible. Air temperature 20..26, on coast and under rainclouds locally 17°C. </text>
            <place>
                <name>Harku</name>
                <phenomenon>Thunderstorm</phenomenon>
                <tempmax>24</tempmax>
            </place>
            <place>
                <name>Jõhvi</name>
                <phenomenon>Moderate shower</phenomenon>
                <tempmax>25</tempmax>
            </place>
            <place>
                <name>Tartu</name>
                <phenomenon>Thunderstorm</phenomenon>
                <tempmax>25</tempmax>
            </place>
            <place>
                <name>Pärnu</name>
                <phenomenon>Thunderstorm</phenomenon>
                <tempmax>22</tempmax>
            </place>
            <place>
                <name>Kuressaare</name>
                <phenomenon>Moderate shower</phenomenon>
                <tempmax>19</tempmax>
            </place>
            <place>
                <name>Türi</name>
                <phenomenon>Thunderstorm</phenomenon>
                <tempmax>24</tempmax>
            </place>
            <wind>
                <name>Kuusiku</name>
                <direction>East wind</direction>
                <speedmin>2</speedmin>
                <speedmax>6</speedmax>
                <gust></gust>
            </wind>
            <wind>
                <name>Väike-Maarja</name>
                <direction>East wind</direction>
                <speedmin>2</speedmin>
                <speedmax>7</speedmax>
                <gust></gust>
            </wind>
            <wind>
                <name>Võrtsjärv</name>
                <direction>East wind</direction>
                <speedmin>2</speedmin>
                <speedmax>6</speedmax>
                <gust></gust>
            </wind>
            <sea></sea>
            <peipsi>Mainly easterly wind 2-7 m/s, during thunder strong wind gusts possible. Wave height 0.3-0.7 m. Showers at times, thunder. Visibility good to moderate. Air temperature 21..24°C.</peipsi>
        </day>
    </forecast>
    <forecast date="2024-06-18">
        <night>
            <phenomenon>Moderate shower</phenomenon>
            <tempmin>10</tempmin>
            <tempmax>17</tempmax>
            <text>Cloudy with clear spells. In the mainland showers in many places, risk of thunder. Locally fog. Variable wind 1-7, by morning becoming westerly 3-9 m/s. Air temperature 10..17°C.</text>
        </night>
        <day>
            <phenomenon>Light shower</phenomenon>
            <tempmin>17</tempmin>
            <tempmax>25</tempmax>
            <text>In the forenoon cloudy with clear spells, in the afternoon slightly and partly cloudy. Locally showers. Westerly wind 3-9 , in gusts up to 12 m/s. Air temperature 19..25, on coast locally up to 17°C.</text>
        </day>
    </forecast>
    <forecast date="2024-06-19">
        <night>
            <phenomenon>Variable clouds</phenomenon>
            <tempmin>9</tempmin>
            <tempmax>15</tempmax>
            <text>Slightly or partly cloudy and mostly dry. Westerly wind 2-8, on coast in gusts up to 11 m/s. Air temperature 9..15°C.</text>
        </night>
        <day>
            <phenomenon>Moderate shower</phenomenon>
            <tempmin>15</tempmin>
            <tempmax>21</tempmax>
            <text>Variable clouds. Rain in many places, locally heavy, risk of thunder. From evening it is clearing up from west. Westerly wind 3-9, in gusts up to 13 m/s. Air temperature 15..21°C.</text>
        </day>
    </forecast>
    <forecast date="2024-06-20">
        <night>
            <phenomenon>Light shower</phenomenon>
            <tempmin>9</tempmin>
            <tempmax>15</tempmax>
            <text>Slightly and partly cloudy. At first in Eastern Estonia showers in many places. Westelry wind 3-9, in gusts up to 13 m/s. Air temperature 9..15°C.</text>
        </night>
        <day>
            <phenomenon>Light shower</phenomenon>
            <tempmin>16</tempmin>
            <tempmax>21</tempmax>
            <text>Slightly and partly cloudy. Locally showers possible. West, southwest wind 5-11, in gusts 15, on coast up to 17 m/s, in the evening some decreasing. Air temperature 16..21°C.</text>
        </day>
    </forecast>
</forecasts>


File: ./weather-api/src/test/resources/db.migration/V202406160849__create_initial.sql
CREATE EXTENSION IF NOT EXISTS pg_trgm;

CREATE TABLE weather_forecast
(
    id         BIGSERIAL PRIMARY KEY,
    date       DATE         NOT NULL,
    location   VARCHAR(255) NOT NULL,
    created_at TIMESTAMPTZ  NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ  NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UNIQUE (date, location)
);

CREATE TABLE weather_forecast_details
(
    id              BIGSERIAL PRIMARY KEY,
    forecast_id     BIGINT      NOT NULL REFERENCES weather_forecast (id),
    temperature_min DECIMAL(5, 2),
    temperature_max DECIMAL(5, 2),
    phenomenon      VARCHAR(255),
    forecast_type   VARCHAR(10) NOT NULL,
    created_at      TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at      TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UNIQUE (forecast_id, forecast_type)
);

CREATE INDEX idx_weather_forecast_location_trgm ON weather_forecast USING gin (location gin_trgm_ops);


File: ./weather-api/src/test/java/ee/tenman/api/IntegrationTest.java
package ee.tenman.api;

import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.util.TestPropertyValues;
import org.springframework.context.ApplicationContextInitializer;
import org.springframework.context.ConfigurableApplicationContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.jdbc.Sql;
import org.testcontainers.containers.GenericContainer;
import org.testcontainers.containers.PostgreSQLContainer;
import org.testcontainers.utility.DockerImageName;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

@Target({ElementType.TYPE})
@Retention(RetentionPolicy.RUNTIME)
@SpringBootTest
@AutoConfigureMockMvc
@ContextConfiguration(initializers = Initializer.class)
@Sql(scripts = "/clear_database.sql", executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD)
public @interface IntegrationTest {
}

class Initializer implements ApplicationContextInitializer<ConfigurableApplicationContext> {
	
	private static final PostgreSQLContainer<?> POSTGRES_DB_CONTAINER = new PostgreSQLContainer<>("postgres:16.3-alpine");
	private static final GenericContainer<?> REDIS_CONTAINER = new GenericContainer<>(DockerImageName.parse("redis:7.2-alpine"))
			.withExposedPorts(6379);
	
	static {
		REDIS_CONTAINER.start();
		POSTGRES_DB_CONTAINER.start();
	}
	
	@Override
	public void initialize(ConfigurableApplicationContext applicationContext) {
		TestPropertyValues.of(
				"spring.data.redis.host=" + REDIS_CONTAINER.getHost(),
				"spring.data.redis.port=" + REDIS_CONTAINER.getFirstMappedPort(),
				
				"spring.datasource.url=" + POSTGRES_DB_CONTAINER.getJdbcUrl(),
				"spring.datasource.username=" + POSTGRES_DB_CONTAINER.getUsername(),
				"spring.datasource.password=" + POSTGRES_DB_CONTAINER.getPassword()
		).applyTo(applicationContext.getEnvironment());
	}
}



File: ./weather-api/src/test/java/ee/tenman/api/mapper/WeatherMapperTest.java
package ee.tenman.api.mapper;

import ee.tenman.domain.ForecastType;
import ee.tenman.domain.WeatherForecast;
import ee.tenman.domain.WeatherForecastDetails;
import ee.tenman.api.models.CombinedForecastDto;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;

import java.time.LocalDate;
import java.util.List;
import java.util.Map;
import java.util.stream.Stream;

import static org.assertj.core.api.Assertions.assertThat;

class WeatherMapperTest {
	
	@Test
	void shouldGroupForecastsByLocation_whenToCombinedForecastDtoMapWithMultipleForecasts() {
		List<WeatherForecast> weatherForecasts = List.of(
				createWeatherForecast("2023-06-16", "London", 10.0, 20.0),
				createWeatherForecast("2023-06-16", "London", 12.0, 22.0),
				createWeatherForecast("2023-06-16", "Paris", 15.0, 25.0)
		);
		
		Map<String, List<CombinedForecastDto>> result = WeatherMapper.toCombinedForecastDtoMap(weatherForecasts);
		
		assertThat(result).hasSize(2)
				.containsKeys("London", "Paris");
		assertThat(result.get("London")).hasSize(2);
		assertThat(result.get("Paris")).hasSize(1);
	}
	
	@ParameterizedTest
	@MethodSource("provideToCombinedForecastDtoArguments")
	void shouldMapWeatherForecastToCombinedForecastDto_whenToCombinedForecastDtoWithVariousInputs(
			WeatherForecast weatherForecast,
			String expectedDate,
			String expectedLocation,
			Double expectedTemperatureMin,
			Double expectedTemperatureMax
	) {
		CombinedForecastDto result = WeatherMapper.toCombinedForecastDto(weatherForecast);
		
		assertThat(result.date()).isEqualTo(expectedDate);
		assertThat(result.location()).isEqualTo(expectedLocation);
		assertThat(result.temperatureMin()).isEqualTo(expectedTemperatureMin);
		assertThat(result.temperatureMax()).isEqualTo(expectedTemperatureMax);
	}
	
	private static Stream<Arguments> provideToCombinedForecastDtoArguments() {
		return Stream.of(
				Arguments.of(
						createWeatherForecast("2023-06-16", "London", 10.0, 20.0),
						"2023-06-16", "London", 10.0, 20.0
				),
				Arguments.of(
						createWeatherForecast("2023-06-17", "Paris", null, 25.0),
						"2023-06-17", "Paris", 25.0, 25.0
				)
		);
	}
	
	private static WeatherForecast createWeatherForecast(
			String date,
			String location,
			Double temperatureMin,
			Double temperatureMax
	) {
		WeatherForecast weatherForecast = new WeatherForecast();
		weatherForecast.setDate(LocalDate.parse(date));
		weatherForecast.setLocation(location);
		
		WeatherForecastDetails details = new WeatherForecastDetails();
		details.setTemperatureMin(temperatureMin);
		details.setTemperatureMax(temperatureMax);
		details.setForecastType(ForecastType.DAY);
		
		weatherForecast.addWeatherForecastDetails(details);
		
		return weatherForecast;
	}
}


File: ./weather-api/src/test/java/ee/tenman/api/controller/WeatherControllerIT.java
package ee.tenman.api.controller;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import ee.tenman.domain.ForecastType;
import ee.tenman.domain.WeatherForecast;
import ee.tenman.domain.WeatherForecastDetails;
import ee.tenman.api.IntegrationTest;
import ee.tenman.api.models.CombinedForecastDto;
import ee.tenman.api.repository.WeatherForecastRepository;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.boot.test.system.CapturedOutput;
import org.springframework.boot.test.system.OutputCaptureExtension;
import org.springframework.test.web.servlet.MockMvc;

import java.time.Clock;
import java.time.Instant;
import java.time.LocalDate;
import java.util.List;
import java.util.Map;

import static java.time.ZoneOffset.UTC;
import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Mockito.when;
import static org.springframework.http.MediaType.APPLICATION_JSON;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

@IntegrationTest
@ExtendWith(OutputCaptureExtension.class)
class WeatherControllerIT {
	
	@Autowired
	private WeatherForecastRepository weatherForecastRepository;
	
	@Autowired
	private ObjectMapper objectMapper;
	
	@Autowired
	private MockMvc mockMvc;
	
	@MockBean
	private Clock clock;
	
	@Test
	void shouldReturnWeatherForecastForLocation_whenGetWeatherForecastWithValidLocation(CapturedOutput capturedOutput) throws Exception {
		insertWeatherForecastToDB();
		when(clock.instant()).thenReturn(Instant.parse("2024-06-16T12:15:00Z"));
		when(clock.getZone()).thenReturn(UTC);
		String location = "Tartu";
		
		String responseJson = mockMvc.perform(get("/api/weather/forecast")
						.param("location", location)
						.contentType(APPLICATION_JSON))
				.andExpect(status().isOk())
				.andReturn().getResponse().getContentAsString();
		
		Map<String, List<CombinedForecastDto>> response =  objectMapper.readValue(responseJson,
				new TypeReference<>() {});
		assertThat(response).hasSize(1).containsKey(location);
		assertThat(response.get(location)).singleElement().satisfies(
				forecast -> {
					assertThat(forecast.date()).isEqualTo("2024-06-16");
					assertThat(forecast.location()).isEqualTo(location);
					assertThat(forecast.temperatureMin()).isEqualTo(8.1);
					assertThat(forecast.temperatureMax()).isEqualTo(12.5);
				}
		);
		assertThat(capturedOutput).contains("WeatherController.getWeatherForecast(..) entered with arguments: [\"Tartu\"]")
				.contains("WeatherController.getWeatherForecast(..) exited with result: {\"Tartu\":[{\"date\":\"2024-06-16\",\"location\":\"Tartu\",\"temperatureMin\":8.1,\"temperatureMax\":12.5}]}");
	}
	
	private void insertWeatherForecastToDB() {
		WeatherForecast weatherForecast = new WeatherForecast();
		weatherForecast.setDate(LocalDate.parse("2024-06-16"));
		weatherForecast.setLocation("Tartu");
		WeatherForecastDetails details = new WeatherForecastDetails();
		details.setForecastType(ForecastType.DAY);
		details.setTemperatureMin(8.1);
		details.setTemperatureMax(12.5);
		details.setPhenomenon("Few clouds");
		weatherForecast.addWeatherForecastDetails(details);
		weatherForecastRepository.saveAndFlush(weatherForecast);
	}
}


File: ./weather-api/src/test/java/e2e/FindTartuWeatherForecastE2ETest.java
package e2e;

import com.codeborne.selenide.Selenide;
import com.codeborne.selenide.SelenideElement;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.By;

import static com.codeborne.selenide.Condition.text;
import static com.codeborne.selenide.Selenide.$;
import static com.codeborne.selenide.Selenide.open;
import static org.assertj.core.api.Assertions.assertThat;
import static org.assertj.core.api.Assertions.fail;
import static org.openqa.selenium.By.className;
import static org.openqa.selenium.By.id;

class WeatherForecastSearchE2ETest {
	
	private static final String DEFAULT_LOCATION = "Tartu";
	
	@Test
	void shouldDisplayWeatherForecastForLocation_whenSearchingForTartu() {
		open("http://localhost:61234");
		
		$(id("location")).shouldNotHave(text(DEFAULT_LOCATION))
				.setValue(DEFAULT_LOCATION)
				.pressEnter();
		
		Selenide.sleep(1000);
		
		SelenideElement location = $(className("location"));
		if (location.exists()) {
			assertThat(location.text()).isEqualTo("Tartu");
		} else {
			fail("Could not find location");
		}
		
		assertThat($(By.id("location")).val()).isEqualTo(DEFAULT_LOCATION);
	}
	
}


File: ./weather-api/src/main/resources/application.yml
spring:
  jackson:
    default-property-inclusion: non_null
  datasource:
    url: jdbc:postgresql://postgres:5432/weather
    username: weather
    password: weather
    driver-class-name: org.postgresql.Driver
    hikari:
      maximumPoolSize: 5
  jpa:
    hibernate:
      ddl-auto: none # Use 'update' for development
    show-sql: false
    database: POSTGRESQL
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        format_sql: false
        temp.use_jdbc_metadata_defaults: false
        id.new_generator_mappings: true
        cache.use_second_level_cache: false
        cache.use_query_cache: false
        generate_statistics: false

  data:
    redis:
      host: redis
      port: 6379

logging:
  level:
    root: INFO
    org.springframework: INFO
    org.hibernate: INFO
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{20} %X{transactionId}- %msg%n'
    file: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{20} %X{transactionId}- %msg%n'

server:
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  port: ${SERVER_PORT:8081}

ilmateenistus:
  url: https://www.ilmateenistus.ee


File: ./weather-api/src/main/java/ee/tenman/api/WeatherApiApplication.java
package ee.tenman.api;

import ee.tenman.domain.Constants;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.autoconfigure.domain.EntityScan;

@SpringBootApplication
@EntityScan(Constants.basePackage)
public class WeatherApiApplication {
	
	public static void main(String[] args) {
		SpringApplication.run(WeatherApiApplication.class, args);
	}
	
}


File: ./weather-api/src/main/java/ee/tenman/api/configuration/RedisConfiguration.java
package ee.tenman.api.configuration;

import org.springframework.cache.annotation.EnableCaching;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.redis.cache.RedisCacheConfiguration;
import org.springframework.data.redis.cache.RedisCacheManager;
import org.springframework.data.redis.connection.RedisConnectionFactory;

import java.time.Duration;
import java.util.HashMap;
import java.util.Map;

@Configuration
@EnableCaching
public class RedisConfiguration {
	
	public static final String ONE_DAY_CACHE = "one-day-cache";
	public static final String THIRTY_MINUTES = "thirty-minutes-cache";
	private static final Duration DEFAULT_TTL = Duration.ofMinutes(30);
	
	@Bean
	public RedisCacheManager cacheManager(RedisConnectionFactory connectionFactory) {
		Map<String, RedisCacheConfiguration> cacheConfigurations = new HashMap<>();
		cacheConfigurations.put(ONE_DAY_CACHE, RedisCacheConfiguration.defaultCacheConfig().entryTtl(Duration.ofDays(1)));
		cacheConfigurations.put(THIRTY_MINUTES,
				RedisCacheConfiguration.defaultCacheConfig().entryTtl(Duration.ofMinutes(30)));
		RedisCacheConfiguration defaultConfig = RedisCacheConfiguration.defaultCacheConfig().entryTtl(DEFAULT_TTL);
		return RedisCacheManager.builder(connectionFactory)
				.cacheDefaults(defaultConfig)
				.withInitialCacheConfigurations(cacheConfigurations)
				.build();
	}
}


File: ./weather-api/src/main/java/ee/tenman/api/configuration/ObjectMapperConfiguration.java
package ee.tenman.api.configuration;

import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class ObjectMapperConfiguration {
	private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper()
			.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
	
	@Bean
	public ObjectMapper objectMapper() {
		return OBJECT_MAPPER;
	}
}


File: ./weather-api/src/main/java/ee/tenman/api/configuration/ClockConfiguration.java
package ee.tenman.api.configuration;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.time.Clock;

@Configuration
public class ClockConfiguration {
	
	@Bean
	public Clock clock() {
		return Clock.systemUTC();
	}
	
}


File: ./weather-api/src/main/java/ee/tenman/api/configuration/TimeUtility.java
package ee.tenman.api.configuration;

import lombok.NoArgsConstructor;

@NoArgsConstructor(access = lombok.AccessLevel.PRIVATE)
public class TimeUtility {
	
	public static CustomDuration durationInSeconds(long startTime) {
		return new CustomDuration(startTime);
	}
	
	private static String formatDuration(double duration) {
		return String.format("%.3f", duration);
	}
	
	public static class CustomDuration {
		private final double durationInSeconds;
		
		public CustomDuration(long startTime) {
			this.durationInSeconds = (System.nanoTime() - startTime) / 1_000_000_000.0;
		}
		
		public String asString() {
			return TimeUtility.formatDuration(durationInSeconds);
		}
		
		@Override
		public String toString() {
			return asString();
		}
	}
}


File: ./weather-api/src/main/java/ee/tenman/api/configuration/exception/GlobalExceptionHandler.java
package ee.tenman.api.configuration.exception;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.validation.FieldError;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.support.WebExchangeBindException;

import java.util.Collections;
import java.util.Map;
import java.util.Optional;
import java.util.stream.Collectors;

@ControllerAdvice
public class GlobalExceptionHandler {
	
	@ExceptionHandler({WebExchangeBindException.class, MethodArgumentNotValidException.class})
	public ResponseEntity<ApiError> handleValidationExceptions(Exception exception) {
		return handleValidationException(exception);
	}
	
	@ExceptionHandler(Exception.class)
	public ResponseEntity<ApiError> handleAllExceptions(Exception exception) {
		ApiError apiError = ApiError.builder()
				.status(HttpStatus.INTERNAL_SERVER_ERROR)
				.message(exception.getLocalizedMessage())
				.debugMessage("An internal error occurred")
				.build();
		
		return new ResponseEntity<>(apiError, apiError.getStatus());
	}
	
	private ResponseEntity<ApiError> handleValidationException(Exception exception) {
		Map<String, String> errors = extractErrors(exception);
		
		ApiError apiError = ApiError.builder()
				.status(HttpStatus.BAD_REQUEST)
				.message("Validation error")
				.debugMessage("One or more fields have an error")
				.validationErrors(errors)
				.build();
		
		return new ResponseEntity<>(apiError, HttpStatus.BAD_REQUEST);
	}
	
	private Map<String, String> extractErrors(Exception exception) {
		BindingResult bindingResult = null;
		
		if (exception instanceof MethodArgumentNotValidException methodArgumentNotValidException) {
			bindingResult = methodArgumentNotValidException.getBindingResult();
		} else if (exception instanceof WebExchangeBindException webExchangeBindException) {
			bindingResult = webExchangeBindException.getBindingResult();
		}
		
		return Optional.ofNullable(bindingResult)
				.map(BindingResult::getFieldErrors)
				.map(fieldErrors -> fieldErrors.stream()
						.collect(Collectors.toMap(
								FieldError::getField,
								fieldError -> Optional.ofNullable(fieldError.getDefaultMessage()).orElse("Invalid value"),
								(existingValue, newValue) -> existingValue
						)))
				.orElse(Collections.emptyMap());
	}
	
	@Getter
	@Builder
	@AllArgsConstructor
	@NoArgsConstructor
	public static class ApiError {
		private HttpStatus status;
		private String message;
		private String debugMessage;
		private Map<String, String> validationErrors;
	}
	
}


File: ./weather-api/src/main/java/ee/tenman/api/configuration/logging/aspect/Loggable.java
package ee.tenman.api.configuration.logging.aspect;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.METHOD)
public @interface Loggable {
}


File: ./weather-api/src/main/java/ee/tenman/api/configuration/logging/aspect/LoggingAspect.java
package ee.tenman.api.configuration.logging.aspect;

import com.fasterxml.jackson.databind.ObjectMapper;
import ee.tenman.api.configuration.TimeUtility;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.reflect.MethodSignature;
import org.slf4j.MDC;
import org.springframework.stereotype.Component;

import java.lang.reflect.Method;
import java.util.UUID;

@Aspect
@Component
@Slf4j
@RequiredArgsConstructor
public class LoggingAspect {
	
	private static final String TRANSACTION_ID = "transactionId";
	private final ObjectMapper objectMapper;
	
	private static void setTransactionId() {
		UUID uuid = UUID.randomUUID();
		MDC.put(TRANSACTION_ID, String.format("[%s] ", uuid));
	}
	
	private static void clearTransactionId() {
		MDC.remove(TRANSACTION_ID);
	}
	
	@Around("@annotation(ee.tenman.api.configuration.logging.aspect.Loggable)")
	public Object logMethod(ProceedingJoinPoint joinPoint) throws Throwable {
		MethodSignature signature = (MethodSignature) joinPoint.getSignature();
		Method method = signature.getMethod();
		
		if (method.getReturnType().equals(Void.TYPE)) {
			log.warn("Loggable annotation should not be used on methods without return type: {}", method.getName());
			return joinPoint.proceed();
		}
		
		return logInvocation(joinPoint);
	}
	
	private Object logInvocation(ProceedingJoinPoint joinPoint) throws Throwable {
		long startTime = System.nanoTime();
		setTransactionId();
		try {
			logEntry(joinPoint);
			Object result = joinPoint.proceed();
			logExit(joinPoint, result, startTime);
			return result;
		} finally {
			clearTransactionId();
		}
	}
	
	private void logEntry(ProceedingJoinPoint joinPoint) throws Throwable {
		String argsJson = objectMapper.writeValueAsString(joinPoint.getArgs());
		log.info("{} entered with arguments: {}", joinPoint.getSignature().toShortString(), argsJson);
	}
	
	private void logExit(ProceedingJoinPoint joinPoint, Object result, long startTime) throws Throwable {
		String resultJson = objectMapper.writeValueAsString(result);
		log.info("{} exited with result: {} in {} seconds", joinPoint.getSignature().toShortString(), resultJson, TimeUtility.durationInSeconds(startTime));
	}
	
}


File: ./weather-api/src/main/java/ee/tenman/api/repository/WeatherForecastRepository.java
package ee.tenman.api.repository;

import ee.tenman.domain.WeatherForecast;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import java.time.LocalDate;
import java.util.List;
import java.util.Optional;

public interface WeatherForecastRepository extends JpaRepository<WeatherForecast, Long> {
	Optional<WeatherForecast> findByDateAndLocation(LocalDate date, String location);
	
	@Query("SELECT wf FROM WeatherForecast wf WHERE wf.location ILIKE %:location% AND wf.date >= :today")
	List<WeatherForecast> findByLocationContainingIgnoreCaseAndDateAfterOrEqual(
			@Param("location") String location, @Param("today") LocalDate today);
}


File: ./weather-api/src/main/java/ee/tenman/api/mapper/WeatherMapper.java
package ee.tenman.api.mapper;

import ee.tenman.domain.WeatherForecast;
import ee.tenman.api.models.CombinedForecastDto;
import lombok.AccessLevel;
import lombok.NoArgsConstructor;

import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.stream.Stream;

import static java.util.stream.Collectors.groupingBy;

@NoArgsConstructor(access = AccessLevel.PRIVATE)
public class WeatherMapper {
	
	public static Map<String, List<CombinedForecastDto>> toCombinedForecastDtoMap(List<WeatherForecast> weatherForecasts) {
		return weatherForecasts.stream()
				.map(WeatherMapper::toCombinedForecastDto)
				.collect(groupingBy(CombinedForecastDto::location));
	}
	
	public static CombinedForecastDto toCombinedForecastDto(WeatherForecast weatherForecast) {
		List<Double> temperatures = weatherForecast.getWeatherForecastDetails().stream()
				.flatMap(details -> Stream.of(details.getTemperatureMin(), details.getTemperatureMax()))
				.filter(Objects::nonNull)
				.toList();
		
		Double temperatureMin = temperatures.stream()
				.mapToDouble(Double::doubleValue)
				.min()
				.orElse(Double.NaN);
		Double temperatureMax = temperatures.stream()
				.mapToDouble(Double::doubleValue)
				.max()
				.orElse(Double.NaN);
		
		return new CombinedForecastDto(
				weatherForecast.getDate().toString(),
				weatherForecast.getLocation(),
				temperatureMin,
				temperatureMax
		);
	}
}


File: ./weather-api/src/main/java/ee/tenman/api/models/CombinedForecastDto.java
package ee.tenman.api.models;

public record CombinedForecastDto(
		String date,
		String location,
		Double temperatureMin,
		Double temperatureMax
) {
}


File: ./weather-api/src/main/java/ee/tenman/api/controller/WeatherController.java
package ee.tenman.api.controller;

import ee.tenman.api.service.WeatherService;
import ee.tenman.api.configuration.logging.aspect.Loggable;
import ee.tenman.domain.WeatherForecast;
import ee.tenman.api.mapper.WeatherMapper;
import ee.tenman.api.models.CombinedForecastDto;
import lombok.RequiredArgsConstructor;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;
import java.util.Map;

import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;

@RestController
@RequestMapping("/api/weather")
@RequiredArgsConstructor
public class WeatherController {
	
	private final WeatherService weatherService;
	
	@Loggable
	@GetMapping(value = "/forecast", produces = APPLICATION_JSON_VALUE)
	public Map<String, List<CombinedForecastDto>> getWeatherForecast(@RequestParam(value = "location", defaultValue = "") String location) {
		List<WeatherForecast> weatherForecasts = weatherService.getCombinedWeatherDetailsByLocationAndDateRange(location);
		return WeatherMapper.toCombinedForecastDtoMap(weatherForecasts);
	}
}


File: ./weather-api/src/main/java/ee/tenman/api/service/WeatherService.java
package ee.tenman.api.service;

import ee.tenman.domain.WeatherForecast;
import ee.tenman.api.repository.WeatherForecastRepository;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

import java.time.Clock;
import java.time.LocalDate;
import java.util.List;

@Service
@RequiredArgsConstructor
public class WeatherService {
	
	private final Clock clock;
	private final WeatherForecastRepository weatherForecastRepository;
	
	public List<WeatherForecast> getCombinedWeatherDetailsByLocationAndDateRange(String location) {
		LocalDate today = LocalDate.now(clock);
		return weatherForecastRepository.findByLocationContainingIgnoreCaseAndDateAfterOrEqual(location, today);
	}
}


File: ./gradle/wrapper/gradle-wrapper.jar
File: ./gradle/wrapper/gradle-wrapper.properties
distributionBase=GRADLE_USER_HOME
distributionPath=wrapper/dists
distributionUrl=https\://services.gradle.org/distributions/gradle-8.5-bin.zip
networkTimeout=10000
validateDistributionUrl=true
zipStoreBase=GRADLE_USER_HOME
zipStorePath=wrapper/dists


File: ./weather-domain/build.gradle.kts
plugins {
    java
    id("org.springframework.boot") version "3.3.0"
    id("io.spring.dependency-management") version "1.1.5"
    id("jacoco")
    id("org.sonarqube") version "5.0.0.4638"
}

group = "ee.tenman"
version = "0.0.1-SNAPSHOT"
val springdocOpenApiVersion = "2.5.0"
val selenideVersion = "7.3.2"

java {
    sourceCompatibility = JavaVersion.VERSION_21
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom(configurations.annotationProcessor.get())
    }
}

configurations {
    compileOnly {
        extendsFrom(configurations.annotationProcessor.get())
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    runtimeOnly("org.postgresql:postgresql")
    compileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
}

val test by tasks.getting(Test::class) {
    useJUnitPlatform()
    finalizedBy(":jacocoTestReport")
}

val skipJacoco: Boolean = false
val jacocoEnabled: Boolean = true
tasks.withType<JacocoReport> {
    isEnabled = jacocoEnabled
    if (skipJacoco) {
        enabled = false
    }
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
}


File: ./weather-domain/src/main/java/ee/tenman/domain/ForecastType.java
package ee.tenman.domain;

public enum ForecastType {
	DAY,
	NIGHT
}


File: ./weather-domain/src/main/java/ee/tenman/domain/WeatherForecast.java
package ee.tenman.domain;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.OneToMany;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.Setter;

import java.io.Serial;
import java.io.Serializable;
import java.time.LocalDate;
import java.util.HashSet;
import java.util.Set;

@Entity
@Getter
@Setter
@EqualsAndHashCode(callSuper = false, onlyExplicitlyIncluded = true)
public class WeatherForecast extends BaseEntity implements Serializable {
	@Serial
	private static final long serialVersionUID = 1L;
	@EqualsAndHashCode.Include
	private LocalDate date;
	@EqualsAndHashCode.Include
	private String location;
	
	@OneToMany(mappedBy = "weatherForecast", cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER)
	private Set<WeatherForecastDetails> weatherForecastDetails = new HashSet<>();
	
	public void addWeatherForecastDetails(WeatherForecastDetails weatherForecastDetails) {
		weatherForecastDetails.setWeatherForecast(this);
		this.weatherForecastDetails.add(weatherForecastDetails);
	}
	
}


File: ./weather-domain/src/main/java/ee/tenman/domain/BaseEntity.java
package ee.tenman.domain;

import jakarta.persistence.Column;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.MappedSuperclass;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import java.io.Serializable;
import java.time.Instant;

@MappedSuperclass
@Getter
@Setter
@NoArgsConstructor
public abstract class BaseEntity implements Serializable {
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;
	
	@Column(nullable = false, updatable = false)
	@CreationTimestamp
	private Instant createdAt;
	
	@Column(nullable = false)
	@UpdateTimestamp
	private Instant updatedAt;
}


File: ./weather-domain/src/main/java/ee/tenman/domain/WeatherForecastDetails.java
package ee.tenman.domain;

import jakarta.persistence.Entity;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.Setter;

@Entity
@Getter
@Setter
@EqualsAndHashCode(callSuper = false, onlyExplicitlyIncluded = true)
public class WeatherForecastDetails extends BaseEntity {
	@ManyToOne
	@JoinColumn(name = "forecast_id")
	@EqualsAndHashCode.Include
	private WeatherForecast weatherForecast;
	
	private Double temperatureMin;
	private Double temperatureMax;
	private String phenomenon;
	@Enumerated(EnumType.STRING)
	@EqualsAndHashCode.Include
	private ForecastType forecastType;
}


File: ./weather-domain/src/main/java/ee/tenman/domain/Constants.java
package ee.tenman.domain;

public interface Constants {
	String basePackage = "ee.tenman.domain";
}


File: ./.github/dependabot.yml
version: 2
updates:
  - package-ecosystem: "gradle"
    directory: "/"
    schedule:
      interval: daily
    open-pull-requests-limit: 10
  - package-ecosystem: "github-actions"
    directory: "/"
    schedule:
      interval: daily
    open-pull-requests-limit: 10
  - package-ecosystem: "npm"
    directory: "/"
    schedule:
      interval: weekly
    open-pull-requests-limit: 10


File: ./.github/workflows/ci.yml
name: Build & Test

on:
  push:
  pull_request:

jobs:
  test:
    name: 🧪 Test with Gradle
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-type: [ 'unit', 'e2e' ]
    steps:
      - uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Start services with Docker Compose (for E2E tests)
        if: matrix.test-type == 'e2e'
        run: docker-compose -f docker-compose.e2e.yml up -d
      - name: Set CI environment variable
        run: echo "E2E=${{ matrix.test-type == 'e2e' }}" >> $GITHUB_ENV
      - name: Run Gradle test
        uses: eskatos/gradle-command-action@v3.4.0
        with:
          arguments: test --info -Dselenide.reportsFolder=build/reports/selenide ${{ matrix.test-type == 'e2e' && '-Pheadless=true' || '' }}
      - name: Upload coverage reports to Codecov
        if: github.actor != 'dependabot[bot]'
        uses: codecov/codecov-action@v4.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ktenman/sectors
      - name: Cache SonarCloud packages
        if: matrix.test-type == 'unit' && github.actor != 'dependabot[bot]'
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        if: matrix.test-type == 'unit' && github.actor != 'dependabot[bot]'
        uses: actions/cache@v4.0.1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
        if: matrix.test-type == 'unit' && github.actor != 'dependabot[bot]'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info
      - uses: actions/upload-artifact@v4.3.3
        if: always()
        with:
          name: ${{ format('Test reports and screenshots ({0})', matrix.test-type) }}
          path: |
            build/reports/tests
            build/reports/selenide
  build-docker:
    name: 🔨 Build with Docker Compose
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0
      - name: Cache Docker layers
        uses: actions/cache@v4.0.1
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build with Docker Compose
        run: docker-compose -f docker-compose.yml build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from type=local,src=/tmp/.buildx-cache

  auto-merge-dependabot:
    name: 🤖 Auto merge dependabot PR
    needs: [ test, build-docker ]
    if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: 🤖Merge PR from dependabot
        uses: fastify/github-action-merge-dependabot@v3.10.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          target: minor
          merge-method: rebase


File: ./weather-db-migration/build.gradle.kts
plugins {
    java
    id("org.springframework.boot") version "3.3.0"
    id("io.spring.dependency-management") version "1.1.5"
    id("jacoco")
    id("org.sonarqube") version "5.0.0.4638"
}

group = "ee.tenman"
version = "0.0.1-SNAPSHOT"
val springdocOpenApiVersion = "2.5.0"
val selenideVersion = "7.3.2"

java {
    sourceCompatibility = JavaVersion.VERSION_21
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom(configurations.annotationProcessor.get())
    }
}

configurations {
    compileOnly {
        extendsFrom(configurations.annotationProcessor.get())
    }
}

repositories {
    mavenCentral()
}

extra["springCloudVersion"] = "2023.0.2"

dependencies {
    implementation(project(":weather-domain"))
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.boot:spring-boot-starter-data-redis-reactive")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.flywaydb:flyway-database-postgresql")
    implementation("org.springframework.session:spring-session-data-redis")
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:$springdocOpenApiVersion")
    implementation("org.springframework.cloud:spring-cloud-starter-openfeign")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-xml")
    compileOnly("org.projectlombok:lombok")
    developmentOnly("org.springframework.boot:spring-boot-docker-compose")
    runtimeOnly("org.postgresql:postgresql")
    annotationProcessor("org.projectlombok:lombok")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.springframework.boot:spring-boot-testcontainers")
    testImplementation("io.projectreactor:reactor-test")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:postgresql")
    testImplementation("com.codeborne:selenide:$selenideVersion")
    testImplementation("org.springframework.cloud:spring-cloud-starter-contract-stub-runner")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.cloud:spring-cloud-dependencies:${property("springCloudVersion")}")
    }
}

val isE2ETestEnvironmentEnabled = System.getenv("E2E")?.toBoolean() == true

val test by tasks.getting(Test::class) {
    useJUnitPlatform()
    if (isE2ETestEnvironmentEnabled) {
        configureE2ETestEnvironment()
    } else {
        exclude("**/e2e/**")
    }
    finalizedBy(":jacocoTestReport")
}

fun Test.configureE2ETestEnvironment() {
    include("**/e2e/**")
    val properties = mutableMapOf(
        "webdriver.chrome.logfile" to "build/reports/chromedriver.log",
        "webdriver.chrome.verboseLogging" to "true"
    )
    if (project.hasProperty("headless")) {
        properties["chromeoptions.args"] = "--headless,--no-sandbox,--disable-gpu"
    }
    systemProperties.putAll(properties)
}

val skipJacoco: Boolean = false
val jacocoEnabled: Boolean = true
tasks.withType<JacocoReport> {
    isEnabled = jacocoEnabled
    if (skipJacoco) {
        enabled = false
    }
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
}


File: ./weather-db-migration/src/main/resources/application.yml
spring:
  datasource:
    url: jdbc:postgresql://postgres:5432/weather
    username: weather
    password: weather
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none # Use 'update' for development
    show-sql: false
    database: POSTGRESQL
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  flyway:
    url: ${spring.datasource.url}
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
    enabled: true

logging:
  level:
    root: INFO
    org.springframework: INFO
    org.hibernate: INFO
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{20} %X{transactionId}- %msg%n'
    file: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{20} %X{transactionId}- %msg%n'

server:
  port: ${SERVER_PORT:8083}


File: ./weather-db-migration/src/main/resources/db/migration/V202406160849__create_initial.sql
CREATE EXTENSION IF NOT EXISTS pg_trgm;

CREATE TABLE weather_forecast
(
    id         BIGSERIAL PRIMARY KEY,
    date       DATE         NOT NULL,
    location   VARCHAR(255) NOT NULL,
    created_at TIMESTAMPTZ  NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ  NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UNIQUE (date, location)
);

CREATE TABLE weather_forecast_details
(
    id              BIGSERIAL PRIMARY KEY,
    forecast_id     BIGINT      NOT NULL REFERENCES weather_forecast (id),
    temperature_min DECIMAL(5, 2),
    temperature_max DECIMAL(5, 2),
    phenomenon      VARCHAR(255),
    forecast_type   VARCHAR(10) NOT NULL,
    created_at      TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at      TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UNIQUE (forecast_id, forecast_type)
);

CREATE INDEX idx_weather_forecast_location_trgm ON weather_forecast USING gin (location gin_trgm_ops);


File: ./weather-db-migration/src/main/java/ee/tenman/migration/WeatherDBMigrationApplication.java
package ee.tenman.migration;

import ee.tenman.domain.Constants;
import lombok.extern.slf4j.Slf4j;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.autoconfigure.domain.EntityScan;

@SpringBootApplication
@EntityScan(Constants.basePackage)
@Slf4j
public class WeatherDBMigrationApplication {
	
	public static void main(String[] args) {
		log.info("Starting WeatherDBMigrationApplication");
		SpringApplication.run(WeatherDBMigrationApplication.class, args);
		log.info("Migrated database to the latest version");
		System.exit(0);
	}
	
}


File: ./weather-sync/build.gradle.kts
plugins {
    java
    id("org.springframework.boot") version "3.3.0"
    id("io.spring.dependency-management") version "1.1.5"
    id("jacoco")
    id("org.sonarqube") version "5.0.0.4638"
}

group = "ee.tenman"
version = "0.0.1-SNAPSHOT"
val springdocOpenApiVersion = "2.5.0"
val selenideVersion = "7.3.2"

java {
    sourceCompatibility = JavaVersion.VERSION_21
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom(configurations.annotationProcessor.get())
    }
}

configurations {
    compileOnly {
        extendsFrom(configurations.annotationProcessor.get())
    }
}

repositories {
    mavenCentral()
}

extra["springCloudVersion"] = "2023.0.2"

dependencies {
    implementation(project(":weather-domain"))
    implementation(project(":weather-db-migration"))
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.boot:spring-boot-starter-data-redis-reactive")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.flywaydb:flyway-database-postgresql")
    implementation("org.springframework.session:spring-session-data-redis")
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:$springdocOpenApiVersion")
    implementation("org.springframework.cloud:spring-cloud-starter-openfeign")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-xml")
    compileOnly("org.projectlombok:lombok")
    developmentOnly("org.springframework.boot:spring-boot-docker-compose")
    runtimeOnly("org.postgresql:postgresql")
    annotationProcessor("org.projectlombok:lombok")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.springframework.boot:spring-boot-testcontainers")
    testImplementation("io.projectreactor:reactor-test")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:postgresql")
    testImplementation("com.codeborne:selenide:$selenideVersion")
    testImplementation("org.springframework.cloud:spring-cloud-starter-contract-stub-runner")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.cloud:spring-cloud-dependencies:${property("springCloudVersion")}")
    }
}

val isE2ETestEnvironmentEnabled = System.getenv("E2E")?.toBoolean() == true

val test by tasks.getting(Test::class) {
    useJUnitPlatform()
    if (isE2ETestEnvironmentEnabled) {
        configureE2ETestEnvironment()
    } else {
        exclude("**/e2e/**")
    }
    finalizedBy(":jacocoTestReport")
}

fun Test.configureE2ETestEnvironment() {
    include("**/e2e/**")
    val properties = mutableMapOf(
        "webdriver.chrome.logfile" to "build/reports/chromedriver.log",
        "webdriver.chrome.verboseLogging" to "true"
    )
    if (project.hasProperty("headless")) {
        properties["chromeoptions.args"] = "--headless,--no-sandbox,--disable-gpu"
    }
    systemProperties.putAll(properties)
}

val skipJacoco: Boolean = false
val jacocoEnabled: Boolean = true
tasks.withType<JacocoReport> {
    isEnabled = jacocoEnabled
    if (skipJacoco) {
        enabled = false
    }
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
}


File: ./weather-sync/src/test/resources/clear_database.sql
CREATE OR REPLACE FUNCTION truncate_all_except(exclusions text[])
    RETURNS VOID
AS
'
    DECLARE
        table_record RECORD;
    BEGIN
        FOR table_record IN SELECT table_name
                            FROM information_schema.tables
                            WHERE table_schema = ''public''
                              AND table_type = ''BASE TABLE''
            LOOP
                IF NOT table_record.table_name = ANY (exclusions)
                THEN
                    EXECUTE format(''TRUNCATE TABLE %I RESTART IDENTITY CASCADE'', table_record.table_name);
                END IF;
            END LOOP;
    END;
'
    LANGUAGE plpgsql;

SELECT truncate_all_except(ARRAY ['flyway_schema_history']);


File: ./weather-sync/src/test/resources/sectors.json
[
  {
    "id": 1,
    "name": "Manufacturing",
    "level": 0,
    "children": [
      {
        "id": 5,
        "name": "Printing",
        "level": 1,
        "children": [
          {
            "id": 145,
            "name": "Labelling and packaging printing",
            "level": 2,
            "children": []
          },
          {
            "id": 150,
            "name": "Book/Periodicals printing",
            "level": 2,
            "children": []
          },
          {
            "id": 148,
            "name": "Advertising",
            "level": 2,
            "children": []
          }
        ]
      },
      {
        "id": 6,
        "name": "Food and Beverage",
        "level": 1,
        "children": [
          {
            "id": 437,
            "name": "Other",
            "level": 2,
            "children": []
          },
          {
            "id": 342,
            "name": "Bakery & confectionery products",
            "level": 2,
            "children": []
          },
          {
            "id": 39,
            "name": "Milk & dairy products",
            "level": 2,
            "children": []
          },
          {
            "id": 40,
            "name": "Meat & meat products",
            "level": 2,
            "children": []
          },
          {
            "id": 378,
            "name": "Sweets & snack food",
            "level": 2,
            "children": []
          },
          {
            "id": 42,
            "name": "Fish & fish products",
            "level": 2,
            "children": []
          },
          {
            "id": 43,
            "name": "Beverages",
            "level": 2,
            "children": []
          }
        ]
      },
      {
        "id": 7,
        "name": "Textile and Clothing",
        "level": 1,
        "children": [
          {
            "id": 45,
            "name": "Textile",
            "level": 2,
            "children": []
          },
          {
            "id": 44,
            "name": "Clothing",
            "level": 2,
            "children": []
          }
        ]
      },
      {
        "id": 8,
        "name": "Wood",
        "level": 1,
        "children": [
          {
            "id": 337,
            "name": "Other (Wood)",
            "level": 2,
            "children": []
          },
          {
            "id": 47,
            "name": "Wooden houses",
            "level": 2,
            "children": []
          },
          {
            "id": 51,
            "name": "Wooden building materials",
            "level": 2,
            "children": []
          }
        ]
      },
      {
        "id": 9,
        "name": "Plastic and Rubber",
        "level": 1,
        "children": [
          {
            "id": 53,
            "name": "Plastics welding and processing",
            "level": 2,
            "children": []
          },
          {
            "id": 54,
            "name": "Packaging",
            "level": 2,
            "children": []
          },
          {
            "id": 55,
            "name": "Blowing",
            "level": 2,
            "children": []
          },
          {
            "id": 57,
            "name": "Moulding",
            "level": 2,
            "children": []
          },
          {
            "id": 556,
            "name": "Plastic goods",
            "level": 2,
            "children": []
          },
          {
            "id": 559,
            "name": "Plastic processing technology",
            "level": 2,
            "children": []
          },
          {
            "id": 560,
            "name": "Plastic profiles",
            "level": 2,
            "children": []
          }
        ]
      },
      {
        "id": 11,
        "name": "Metalworking",
        "level": 1,
        "children": [
          {
            "id": 69,
            "name": "Gas, Plasma, Laser cutting",
            "level": 2,
            "children": []
          },
          {
            "id": 263,
            "name": "Houses and buildings",
            "level": 2,
            "children": []
          },
          {
            "id": 75,
            "name": "CNC-machining",
            "level": 2,
            "children": []
          },
          {
            "id": 267,
            "name": "Metal products",
            "level": 2,
            "children": []
          },
          {
            "id": 62,
            "name": "Forgings, Fasteners",
            "level": 2,
            "children": []
          },
          {
            "id": 542,
            "name": "Metal works",
            "level": 2,
            "children": []
          },
          {
            "id": 66,
            "name": "MIG, TIG, Aluminum welding",
            "level": 2,
            "children": []
          },
          {
            "id": 67,
            "name": "Construction of metal structures",
            "level": 2,
            "children": []
          }
        ]
      },
      {
        "id": 12,
        "name": "Machinery",
        "level": 1,
        "children": [
          {
            "id": 91,
            "name": "Machinery equipment/tools",
            "level": 2,
            "children": []
          },
          {
            "id": 508,
            "name": "Other",
            "level": 2,
            "children": []
          },
          {
            "id": 93,
            "name": "Metal structures",
            "level": 2,
            "children": []
          },
          {
            "id": 94,
            "name": "Machinery components",
            "level": 2,
            "children": []
          },
          {
            "id": 224,
            "name": "Manufacture of machinery",
            "level": 2,
            "children": []
          },
          {
            "id": 97,
            "name": "Maritime",
            "level": 2,
            "children": [
              {
                "id": 269,
                "name": "Boat/Yacht building",
                "level": 3,
                "children": []
              },
              {
                "id": 230,
                "name": "Ship repair and conversion",
                "level": 3,
                "children": []
              },
              {
                "id": 271,
                "name": "Aluminium and steel workboats",
                "level": 3,
                "children": []
              }
            ]
          },
          {
            "id": 227,
            "name": "Repair and maintenance service",
            "level": 2,
            "children": []
          }
        ]
      },
      {
        "id": 13,
        "name": "Furniture",
        "level": 1,
        "children": [
          {
            "id": 101,
            "name": "Living room",
            "level": 2,
            "children": []
          },
          {
            "id": 341,
            "name": "Outdoor",
            "level": 2,
            "children": []
          },
          {
            "id": 389,
            "name": "Bathroom/sauna",
            "level": 2,
            "children": []
          },
          {
            "id": 390,
            "name": "Children’s room",
            "level": 2,
            "children": []
          },
          {
            "id": 392,
            "name": "Office",
            "level": 2,
            "children": []
          },
          {
            "id": 394,
            "name": "Other (Furniture)",
            "level": 2,
            "children": []
          },
          {
            "id": 385,
            "name": "Bedroom",
            "level": 2,
            "children": []
          },
          {
            "id": 98,
            "name": "Kitchen",
            "level": 2,
            "children": []
          },
          {
            "id": 99,
            "name": "Project furniture",
            "level": 2,
            "children": []
          }
        ]
      },
      {
        "id": 18,
        "name": "Electronics and Optics",
        "level": 1,
        "children": []
      },
      {
        "id": 19,
        "name": "Construction materials",
        "level": 1,
        "children": []
      }
    ]
  },
  {
    "id": 2,
    "name": "Service",
    "level": 0,
    "children": [
      {
        "id": 21,
        "name": "Transport and Logistics",
        "level": 1,
        "children": [
          {
            "id": 111,
            "name": "Air",
            "level": 2,
            "children": []
          },
          {
            "id": 112,
            "name": "Road",
            "level": 2,
            "children": []
          },
          {
            "id": 113,
            "name": "Water",
            "level": 2,
            "children": []
          },
          {
            "id": 114,
            "name": "Rail",
            "level": 2,
            "children": []
          }
        ]
      },
      {
        "id": 141,
        "name": "Translation services",
        "level": 1,
        "children": []
      },
      {
        "id": 22,
        "name": "Tourism",
        "level": 1,
        "children": []
      },
      {
        "id": 25,
        "name": "Business services",
        "level": 1,
        "children": []
      },
      {
        "id": 35,
        "name": "Engineering",
        "level": 1,
        "children": []
      },
      {
        "id": 28,
        "name": "Information Technology and Telecommunications",
        "level": 1,
        "children": [
          {
            "id": 581,
            "name": "Data processing, Web portals, E-marketing",
            "level": 2,
            "children": []
          },
          {
            "id": 576,
            "name": "Programming, Consultancy",
            "level": 2,
            "children": []
          },
          {
            "id": 121,
            "name": "Software, Hardware",
            "level": 2,
            "children": []
          },
          {
            "id": 122,
            "name": "Telecommunications",
            "level": 2,
            "children": []
          }
        ]
      }
    ]
  },
  {
    "id": 3,
    "name": "Other",
    "level": 0,
    "children": [
      {
        "id": 37,
        "name": "Creative industries",
        "level": 1,
        "children": []
      },
      {
        "id": 29,
        "name": "Energy technology",
        "level": 1,
        "children": []
      },
      {
        "id": 33,
        "name": "Environment",
        "level": 1,
        "children": []
      }
    ]
  }
]


File: ./weather-sync/src/test/resources/application.yml
spring:
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  profiles:
    active: test

server:
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
    session:
      timeout: 30m

ilmateenistus:
  url: http://localhost:${wiremock.server.port}


File: ./weather-sync/src/test/resources/__files/forecast.xml
<?xml version="1.0" encoding="UTF-8" ?>
<forecasts>
    <forecast date="2024-06-16">
        <night>
            <phenomenon>Variable clouds</phenomenon>
            <tempmin>7</tempmin>
            <tempmax>13</tempmax>
            <text>Slightly or partly cloudy. On islands showers locally. Fog patches possible. Southeast, east wind 1-6,
                on islands to 9, in gusts up to 12 m/s. Air temperature 7..13°C.
            </text>
            <place>
                <name>Harku</name>
                <phenomenon>Variable clouds</phenomenon>
                <tempmin>9</tempmin>
            </place>
            <place>
                <name>Jõhvi</name>
                <phenomenon>Few clouds</phenomenon>
                <tempmin>8</tempmin>
            </place>
            <place>
                <name>Tartu</name>
                <phenomenon>Few clouds</phenomenon>
                <tempmin>9</tempmin>
            </place>
            <place>
                <name>Pärnu</name>
                <phenomenon>Variable clouds</phenomenon>
                <tempmin>12</tempmin>
            </place>
            <place>
                <name>Kuressaare</name>
                <phenomenon>Light shower</phenomenon>
                <tempmin>13</tempmin>
            </place>
            <place>
                <name>Türi</name>
                <phenomenon>Few clouds</phenomenon>
                <tempmin>9</tempmin>
            </place>
            <wind>
                <name>Kuusiku</name>
                <direction>Southeast wind</direction>
                <speedmin>2</speedmin>
                <speedmax>5</speedmax>
                <gust></gust>
            </wind>
            <wind>
                <name>Väike-Maarja</name>
                <direction>East wind</direction>
                <speedmin>1</speedmin>
                <speedmax>4</speedmax>
                <gust></gust>
            </wind>
            <wind>
                <name>Võrtsjärv</name>
                <direction>Southeast wind</direction>
                <speedmin>2</speedmin>
                <speedmax>4</speedmax>
                <gust></gust>
            </wind>
            <sea>Forecast for Baltic Sea valid 24 hours from 19:00 Jun 15 to 19:00 UTC Jun 16, 2024.

                Warnings: Northern Baltic: southeast in gusts up to 15 m/s. Wave height 1-2 m.

                Weather summary: High moving slowly over the Baltic States to northeast. Weak Trough of Low moving over
                Baltic Sea northwards.


                Northern Baltic: southeast 6-11, in gusts up to 15 m/s, in morning decreasing, by day mainly southerly
                3-8 m/s. At night wave height 1-2 m. Rain showers in many places. Visibility good to moderate.

                Gulf of Finland, Moonsund, Northern Gulf of Riga: east, southeast 3-9, at night in gusts to 12 m/s. Dry.
                Visibility mostly good
            </sea>
            <peipsi>Southeast, east wind 2-7 m/s. Wave height 0.3-0.7 m. Dry. Visibility mostly good. Air temperature
                12..14°C.
            </peipsi>
        </night>
        <day>
            <phenomenon>Variable clouds</phenomenon>
            <tempmin>18</tempmin>
            <tempmax>24</tempmax>
            <text>Partly cloudy. On the islands showers possible. Southeast, east wind 2-8 m/s. Air temperature
                18..24°C.
            </text>
            <place>
                <name>Harku</name>
                <phenomenon>Variable clouds</phenomenon>
                <tempmax>23</tempmax>
            </place>
            <place>
                <name>Jõhvi</name>
                <phenomenon>Variable clouds</phenomenon>
                <tempmax>22</tempmax>
            </place>
            <place>
                <name>Tartu</name>
                <phenomenon>Variable clouds</phenomenon>
                <tempmax>23</tempmax>
            </place>
            <place>
                <name>Pärnu</name>
                <phenomenon>Variable clouds</phenomenon>
                <tempmax>23</tempmax>
            </place>
            <place>
                <name>Kuressaare</name>
                <phenomenon>Variable clouds</phenomenon>
                <tempmax>18</tempmax>
            </place>
            <place>
                <name>Türi</name>
                <phenomenon>Variable clouds</phenomenon>
                <tempmax>22</tempmax>
            </place>
            <wind>
                <name>Kuusiku</name>
                <direction>Southeast wind</direction>
                <speedmin>3</speedmin>
                <speedmax>5</speedmax>
                <gust></gust>
            </wind>
            <wind>
                <name>Väike-Maarja</name>
                <direction>East wind</direction>
                <speedmin>2</speedmin>
                <speedmax>5</speedmax>
                <gust></gust>
            </wind>
            <wind>
                <name>Võrtsjärv</name>
                <direction>Southeast wind</direction>
                <speedmin>3</speedmin>
                <speedmax>6</speedmax>
                <gust></gust>
            </wind>
            <sea></sea>
            <peipsi>Southeast, east wind 2-8 m/s. Wave height 0.3-0.7 m. Dry. Visibility mostly good. Air temperature
                19..21°C.
            </peipsi>
        </day>
    </forecast>
    <forecast date="2024-06-17">
        <night>
            <phenomenon>Moderate shower</phenomenon>
            <tempmin>12</tempmin>
            <tempmax>17</tempmax>
            <text>Few and variable clouds. Rain showers locally, by morning more widely, risk of thunder. Easterly wind
                2-8 m/s. Air temperature 12..17°C.
            </text>
        </night>
        <day>
            <phenomenon>Thunderstorm</phenomenon>
            <tempmin>17</tempmin>
            <tempmax>26</tempmax>
            <text>Cloudy with bright spells. Showers with thunder, locally heavy precipitation and hail possible. By
                evening it is clearing up and rain reducing. Wind becoming from islands westerly 2-8 m/s, gusty during
                thunder. Air temperature 20..26, on coast and under rainclouds locally 17°C.
            </text>
        </day>
    </forecast>
    <forecast date="2024-06-18">
        <night>
            <phenomenon>Moderate shower</phenomenon>
            <tempmin>9</tempmin>
            <tempmax>15</tempmax>
            <text>Slightly or partly cloudy. In eastern part showers in many places, risk of thunder. Locally fog.
                Westerly wind 2-8 m/s. Air temperature 9..15°C.
            </text>
        </night>
        <day>
            <phenomenon>Light shower</phenomenon>
            <tempmin>17</tempmin>
            <tempmax>25</tempmax>
            <text>Slightly or partly cloudy and locally showers. Westerly wind 2-8 m/s. Air temperature 19..25, on coast
                locally to 17°C.
            </text>
        </day>
    </forecast>
    <forecast date="2024-06-19">
        <night>
            <phenomenon>Moderate shower</phenomenon>
            <tempmin>10</tempmin>
            <tempmax>15</tempmax>
            <text>Slightly or partly cloudy. Locally showers. Westerly wind 2-8 m/s. Air temperature 10..15°C.</text>
        </night>
        <day>
            <phenomenon>Moderate shower</phenomenon>
            <tempmin>16</tempmin>
            <tempmax>21</tempmax>
            <text>Variable clouds. Showers in many places, risk of thunder. In the evening it is clearing up from west.
                Westerly wind 3-9, on coast in gusts 12 m/s, during thunder stronger gusts possible. Air temperature
                16..21°C.
            </text>
        </day>
    </forecast>
</forecasts>


File: ./weather-sync/src/test/resources/__files/forecast2.xml
<?xml version="1.0" encoding="UTF-8" ?>
<forecasts>
    <forecast date="2024-06-17">
        <night>
            <phenomenon>Moderate shower</phenomenon>
            <tempmin>10</tempmin>
            <tempmax>18</tempmax>
            <text>Few and variable clouds. Rain showers locally, risk of thunder. Mainly easterly wind 2-7 m/s. Air temperature 12..18, in northeastern part locally to 10°C.  </text>
            <place>
                <name>Harku</name>
                <phenomenon>Variable clouds</phenomenon>
                <tempmin>14</tempmin>
            </place>
            <place>
                <name>Jõhvi</name>
                <phenomenon>Variable clouds</phenomenon>
                <tempmin>14</tempmin>
            </place>
            <place>
                <name>Tartu</name>
                <phenomenon>Moderate shower</phenomenon>
                <tempmin>17</tempmin>
            </place>
            <place>
                <name>Pärnu</name>
                <phenomenon>Moderate shower</phenomenon>
                <tempmin>17</tempmin>
            </place>
            <place>
                <name>Kuressaare</name>
                <phenomenon>Variable clouds</phenomenon>
                <tempmin>14</tempmin>
            </place>
            <place>
                <name>Türi</name>
                <phenomenon>Light shower</phenomenon>
                <tempmin>14</tempmin>
            </place>
            <wind>
                <name>Kuusiku</name>
                <direction>East wind</direction>
                <speedmin>2</speedmin>
                <speedmax>5</speedmax>
                <gust></gust>
            </wind>
            <wind>
                <name>Väike-Maarja</name>
                <direction>East wind</direction>
                <speedmin>2</speedmin>
                <speedmax>6</speedmax>
                <gust></gust>
            </wind>
            <wind>
                <name>Võrtsjärv</name>
                <direction>East wind</direction>
                <speedmin>2</speedmin>
                <speedmax>5</speedmax>
                <gust></gust>
            </wind>
            <sea>Forecast for Baltic Sea valid 24 hours from 13:00 UTC Jun 16 to 13:00 UTC Jun 17, 2024.

                No warnings

                Weather summary: eastern part of Low over Baltic Sea.


                Northern Baltic: by day mainly southerly, at night and tomorrow by day variable 2-7 m/s. Today in many places, tomorrow locally rain showers. Visibility good to moderate.

                Gulf of Finland: by day east, southeast 3-8, in gusts 11 m/s, at night and tomorrow by day easterly 2-8 m/s. At night locally, tomorrow by day in many places rain showers, locally heavy precipitation and risk of thunder. Visibility good, restricted in showers.

                Moonsund, Northern Gulf of Riga: east, southeast, tomorrow by day mainly southerly 2-7 m/s. At night locally, tomorrow by day in many places rain showers, locally heavy precipitation and risk of thunder. Visibility good, restricted in showers.
            </sea>
            <peipsi>Mainly easterly wind 2-7 m/s. Wave height 0.3-0.7 m. After midnight locally showers. Visibility good to moderate. Air temperature 15..18°C.</peipsi>
        </night>
        <day>
            <phenomenon>Thunderstorm</phenomenon>
            <tempmin>17</tempmin>
            <tempmax>26</tempmax>
            <text>Cloudy with bright spells. Showers with thunder, locally heavy precipitation and hail possible. In the evening it is clearing up on islands. Mainly easterly, on islands variable wind 2-8 m/s, during thunder strong wind gusts possible. Air temperature 20..26, on coast and under rainclouds locally 17°C. </text>
            <place>
                <name>Harku</name>
                <phenomenon>Thunderstorm</phenomenon>
                <tempmax>24</tempmax>
            </place>
            <place>
                <name>Jõhvi</name>
                <phenomenon>Moderate shower</phenomenon>
                <tempmax>25</tempmax>
            </place>
            <place>
                <name>Tartu</name>
                <phenomenon>Thunderstorm</phenomenon>
                <tempmax>25</tempmax>
            </place>
            <place>
                <name>Pärnu</name>
                <phenomenon>Thunderstorm</phenomenon>
                <tempmax>22</tempmax>
            </place>
            <place>
                <name>Kuressaare</name>
                <phenomenon>Moderate shower</phenomenon>
                <tempmax>19</tempmax>
            </place>
            <place>
                <name>Türi</name>
                <phenomenon>Thunderstorm</phenomenon>
                <tempmax>24</tempmax>
            </place>
            <wind>
                <name>Kuusiku</name>
                <direction>East wind</direction>
                <speedmin>2</speedmin>
                <speedmax>6</speedmax>
                <gust></gust>
            </wind>
            <wind>
                <name>Väike-Maarja</name>
                <direction>East wind</direction>
                <speedmin>2</speedmin>
                <speedmax>7</speedmax>
                <gust></gust>
            </wind>
            <wind>
                <name>Võrtsjärv</name>
                <direction>East wind</direction>
                <speedmin>2</speedmin>
                <speedmax>6</speedmax>
                <gust></gust>
            </wind>
            <sea></sea>
            <peipsi>Mainly easterly wind 2-7 m/s, during thunder strong wind gusts possible. Wave height 0.3-0.7 m. Showers at times, thunder. Visibility good to moderate. Air temperature 21..24°C.</peipsi>
        </day>
    </forecast>
    <forecast date="2024-06-18">
        <night>
            <phenomenon>Moderate shower</phenomenon>
            <tempmin>10</tempmin>
            <tempmax>17</tempmax>
            <text>Cloudy with clear spells. In the mainland showers in many places, risk of thunder. Locally fog. Variable wind 1-7, by morning becoming westerly 3-9 m/s. Air temperature 10..17°C.</text>
        </night>
        <day>
            <phenomenon>Light shower</phenomenon>
            <tempmin>17</tempmin>
            <tempmax>25</tempmax>
            <text>In the forenoon cloudy with clear spells, in the afternoon slightly and partly cloudy. Locally showers. Westerly wind 3-9 , in gusts up to 12 m/s. Air temperature 19..25, on coast locally up to 17°C.</text>
        </day>
    </forecast>
    <forecast date="2024-06-19">
        <night>
            <phenomenon>Variable clouds</phenomenon>
            <tempmin>9</tempmin>
            <tempmax>15</tempmax>
            <text>Slightly or partly cloudy and mostly dry. Westerly wind 2-8, on coast in gusts up to 11 m/s. Air temperature 9..15°C.</text>
        </night>
        <day>
            <phenomenon>Moderate shower</phenomenon>
            <tempmin>15</tempmin>
            <tempmax>21</tempmax>
            <text>Variable clouds. Rain in many places, locally heavy, risk of thunder. From evening it is clearing up from west. Westerly wind 3-9, in gusts up to 13 m/s. Air temperature 15..21°C.</text>
        </day>
    </forecast>
    <forecast date="2024-06-20">
        <night>
            <phenomenon>Light shower</phenomenon>
            <tempmin>9</tempmin>
            <tempmax>15</tempmax>
            <text>Slightly and partly cloudy. At first in Eastern Estonia showers in many places. Westelry wind 3-9, in gusts up to 13 m/s. Air temperature 9..15°C.</text>
        </night>
        <day>
            <phenomenon>Light shower</phenomenon>
            <tempmin>16</tempmin>
            <tempmax>21</tempmax>
            <text>Slightly and partly cloudy. Locally showers possible. West, southwest wind 5-11, in gusts 15, on coast up to 17 m/s, in the evening some decreasing. Air temperature 16..21°C.</text>
        </day>
    </forecast>
</forecasts>


File: ./weather-sync/src/test/java/ee/tenman/sync/IntegrationTest.java
package ee.tenman.sync;

import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.util.TestPropertyValues;
import org.springframework.context.ApplicationContextInitializer;
import org.springframework.context.ConfigurableApplicationContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.jdbc.Sql;
import org.testcontainers.containers.GenericContainer;
import org.testcontainers.containers.PostgreSQLContainer;
import org.testcontainers.utility.DockerImageName;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

@Target({ElementType.TYPE})
@Retention(RetentionPolicy.RUNTIME)
@SpringBootTest
@AutoConfigureMockMvc
@ContextConfiguration(initializers = Initializer.class)
@Sql(scripts = "/clear_database.sql", executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD)
public @interface IntegrationTest {
}

class Initializer implements ApplicationContextInitializer<ConfigurableApplicationContext> {
	
	private static final PostgreSQLContainer<?> POSTGRES_DB_CONTAINER = new PostgreSQLContainer<>("postgres:16.3-alpine");
	private static final GenericContainer<?> REDIS_CONTAINER = new GenericContainer<>(DockerImageName.parse("redis:7.2-alpine"))
			.withExposedPorts(6379);
	
	static {
		REDIS_CONTAINER.start();
		POSTGRES_DB_CONTAINER.start();
	}
	
	@Override
	public void initialize(ConfigurableApplicationContext applicationContext) {
		TestPropertyValues.of(
				"spring.data.redis.host=" + REDIS_CONTAINER.getHost(),
				"spring.data.redis.port=" + REDIS_CONTAINER.getFirstMappedPort(),
				
				"spring.datasource.url=" + POSTGRES_DB_CONTAINER.getJdbcUrl(),
				"spring.datasource.username=" + POSTGRES_DB_CONTAINER.getUsername(),
				"spring.datasource.password=" + POSTGRES_DB_CONTAINER.getPassword()
		).applyTo(applicationContext.getEnvironment());
	}
}



File: ./weather-sync/src/test/java/ee/tenman/sync/job/WeatherForecastRetrievalJobIT.java
package ee.tenman.sync.job;

import ee.tenman.domain.ForecastType;
import ee.tenman.domain.WeatherForecast;
import ee.tenman.sync.IntegrationTest;
import ee.tenman.sync.repository.WeatherForecastRepository;
import jakarta.annotation.Resource;
import org.assertj.core.groups.Tuple;
import org.junit.jupiter.api.Test;
import org.springframework.cloud.contract.wiremock.AutoConfigureWireMock;

import java.util.List;

import static com.github.tomakehurst.wiremock.client.WireMock.aResponse;
import static com.github.tomakehurst.wiremock.client.WireMock.get;
import static com.github.tomakehurst.wiremock.client.WireMock.stubFor;
import static com.github.tomakehurst.wiremock.client.WireMock.urlPathMatching;
import static org.assertj.core.api.Assertions.assertThat;
import static org.springframework.http.HttpHeaders.CONTENT_TYPE;
import static org.springframework.http.MediaType.APPLICATION_XML_VALUE;

@IntegrationTest
@AutoConfigureWireMock(port = 0)
class WeatherForecastRetrievalJobIT {
	private static final String FORECAST_URL = ".*/ilma_andmed/xml/forecast.php.*";
	
	@Resource
	private WeatherForecastRetrievalJob weatherForecastRetrievalJob;
	
	@Resource
	private WeatherForecastRepository weatherForecastRepository;
	
	@Test
	void shouldNotCreateDuplicatedRows_whenTriggeredMultipleTimesWithSameData() {
		stubForForecastXml("forecast.xml");
		
		weatherForecastRetrievalJob.runJob();
		weatherForecastRetrievalJob.runJob();
		
		List<WeatherForecast> allForecasts = weatherForecastRepository.findAll();
		assertThat(allForecasts).isNotEmpty().hasSize(6).first().satisfies(weatherForecast -> {
			assertThat(weatherForecast.getLocation()).isEqualTo("Jõhvi");
			assertThat(weatherForecast.getDate()).isEqualTo("2024-06-16");
			assertThat(weatherForecast.getWeatherForecastDetails()).hasSize(2)
					.anySatisfy(details -> {
						assertThat(details.getForecastType()).isEqualTo(ForecastType.NIGHT);
						assertThat(details.getTemperatureMin()).isEqualTo(8);
						assertThat(details.getTemperatureMax()).isNull();
						assertThat(details.getPhenomenon()).isEqualTo("Few clouds");
					}).anySatisfy(details -> {
						assertThat(details.getForecastType()).isEqualTo(ForecastType.DAY);
						assertThat(details.getTemperatureMin()).isNull();
						assertThat(details.getTemperatureMax()).isEqualTo(22);
						assertThat(details.getPhenomenon()).isEqualTo("Variable clouds");
					});
		});
		assertThat(allForecasts).extracting(WeatherForecast::getLocation)
				.containsOnly("Jõhvi", "Kuressaare", "Pärnu", "Türi", "Harku", "Tartu");
	}
	
	@Test
	void shouldSaveNewData_whenTriggeredWithNewDataAfterInitialRun() {
		stubForForecastXml("forecast.xml");
		weatherForecastRetrievalJob.runJob();
		
		stubForForecastXml("forecast2.xml");
		weatherForecastRetrievalJob.runJob();
		
		List<WeatherForecast> allForecasts = weatherForecastRepository.findAll();
		assertThat(allForecasts).hasSize(12)
				.extracting(WeatherForecast::getLocation, f -> f.getDate().toString())
				.contains(
						Tuple.tuple("Jõhvi", "2024-06-16"),
						Tuple.tuple("Kuressaare", "2024-06-16"),
						Tuple.tuple("Pärnu", "2024-06-16"),
						Tuple.tuple("Türi", "2024-06-16"),
						Tuple.tuple("Harku", "2024-06-16"),
						Tuple.tuple("Tartu", "2024-06-16"),
						Tuple.tuple("Jõhvi", "2024-06-17"),
						Tuple.tuple("Kuressaare", "2024-06-17"),
						Tuple.tuple("Pärnu", "2024-06-17"),
						Tuple.tuple("Türi", "2024-06-17"),
						Tuple.tuple("Harku", "2024-06-17"),
						Tuple.tuple("Tartu", "2024-06-17")
				);
	}
	
	private void stubForForecastXml(String filename) {
		stubFor(get(urlPathMatching(FORECAST_URL))
				.willReturn(aResponse()
						.withHeader(CONTENT_TYPE, APPLICATION_XML_VALUE)
						.withBodyFile(filename)));
	}
	
}


File: ./weather-sync/src/main/resources/application.yml
spring:
  jackson:
    default-property-inclusion: non_null
  datasource:
    url: jdbc:postgresql://postgres:5432/weather
    username: weather
    password: weather
    driver-class-name: org.postgresql.Driver
    hikari:
      maximumPoolSize: 5
  jpa:
    hibernate:
      ddl-auto: none # Use 'update' for development
    show-sql: false
    database: POSTGRESQL
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        format_sql: false
        temp.use_jdbc_metadata_defaults: false
        id.new_generator_mappings: true
        cache.use_second_level_cache: false
        cache.use_query_cache: false
        generate_statistics: false

  data:
    redis:
      host: redis
      port: 6379

logging:
  level:
    root: INFO
    org.springframework: INFO
    org.hibernate: INFO
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{20} %X{transactionId}- %msg%n'
    file: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{20} %X{transactionId}- %msg%n'

server:
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
    session:
      timeout: 30m
  port: ${SERVER_PORT:8082}

ilmateenistus:
  url: https://www.ilmateenistus.ee


File: ./weather-sync/src/main/java/ee/tenman/sync/WeatherSyncApplication.java
package ee.tenman.sync;

import ee.tenman.domain.Constants;
import ee.tenman.migration.WeatherDBMigrationApplication;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.autoconfigure.domain.EntityScan;
import org.springframework.cloud.openfeign.EnableFeignClients;
import org.springframework.scheduling.annotation.EnableScheduling;

@SpringBootApplication
@EnableFeignClients
@EnableScheduling
@EntityScan(Constants.basePackage)
public class WeatherSyncApplication {
	
	public static void main(String[] args) {
		SpringApplication.run(WeatherSyncApplication.class, args);
	}
	
}


File: ./weather-sync/src/main/java/ee/tenman/sync/OnceForecastRetrievalService.java
package ee.tenman.sync;

import ee.tenman.sync.job.WeatherForecastRetrievalJob;
import jakarta.annotation.PostConstruct;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.context.annotation.Profile;
import org.springframework.stereotype.Service;

@Service
@RequiredArgsConstructor
@Slf4j
@Profile("!test")
public class OnceForecastRetrievalService {
	
	private final WeatherForecastRetrievalJob weatherForecastRetrievalJob;
	
	@PostConstruct
	public void init() {
		log.info("Starting once forecast retrieval");
		weatherForecastRetrievalJob.runJob();
	}
}


File: ./weather-sync/src/main/java/ee/tenman/sync/repository/WeatherForecastRepository.java
package ee.tenman.sync.repository;

import ee.tenman.domain.WeatherForecast;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import java.time.LocalDate;
import java.util.List;
import java.util.Optional;

public interface WeatherForecastRepository extends JpaRepository<WeatherForecast, Long> {
	Optional<WeatherForecast> findByDateAndLocation(LocalDate date, String location);
	
	@Query("SELECT wf FROM WeatherForecast wf WHERE wf.location ILIKE %:location% AND wf.date >= :today")
	List<WeatherForecast> findByLocationContainingIgnoreCaseAndDateAfterOrEqual(
			@Param("location") String location, @Param("today") LocalDate today);
}


File: ./weather-sync/src/main/java/ee/tenman/sync/job/WeatherForecastRetrievalJob.java
package ee.tenman.sync.job;

import ee.tenman.domain.ForecastType;
import ee.tenman.domain.WeatherForecast;
import ee.tenman.domain.WeatherForecastDetails;
import ee.tenman.sync.external.WeatherForecastDto;
import ee.tenman.sync.external.WeatherServiceClient;
import ee.tenman.sync.repository.WeatherForecastRepository;
import jakarta.annotation.PostConstruct;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Service;

import java.time.LocalDate;
import java.util.List;
import java.util.Map;
import java.util.stream.Stream;

import static ee.tenman.domain.ForecastType.DAY;
import static ee.tenman.domain.ForecastType.NIGHT;
import static java.util.stream.Collectors.groupingBy;
import static java.util.stream.Collectors.toList;

@Component
@RequiredArgsConstructor
@Slf4j
public class WeatherForecastRetrievalJob {
	
	private final WeatherServiceClient weatherServiceClient;
	private final WeatherForecastRepository weatherForecastRepository;
	
	@Scheduled(cron = "0 0/30 * * * *")
	public void runJob() {
		log.info("Retrieving weather forecasts");
		WeatherForecastDto weatherForecastDto = weatherServiceClient.getWeatherForecast();
		List<WeatherForecast> weatherForecasts = weatherForecastDto.getForecasts().stream()
				.flatMap(this::processForecast)
				.toList();
		weatherForecastRepository.saveAll(weatherForecasts);
		log.info("Retrieved {} weather forecasts", weatherForecasts.size());
	}
	
	private Stream<WeatherForecast> processForecast(WeatherForecastDto.ForecastDto forecastDto) {
		LocalDate date = forecastDto.getDate();
		
		Map<String, List<LocationWithForecast>> placesByLocation = Stream.concat(
				forecastDto.getDay().getPlaces().stream().map(place -> new LocationWithForecast(place, DAY)),
				forecastDto.getNight().getPlaces().stream().map(place -> new LocationWithForecast(place, NIGHT))
		).collect(groupingBy(LocationWithForecast::location, toList()));
		
		return placesByLocation.entrySet().stream()
				.map(entry -> getOrCreateWeatherForecast(entry, date));
	}
	
	private WeatherForecast getOrCreateWeatherForecast(
			Map.Entry<String, List<LocationWithForecast>> entry,
			LocalDate date
	) {
		String location = entry.getKey();
		WeatherForecast forecast = weatherForecastRepository
				.findByDateAndLocation(date, location)
				.orElseGet(() -> {
					WeatherForecast newForecast = new WeatherForecast();
					newForecast.setDate(date);
					newForecast.setLocation(location);
					return newForecast;
				});
		
		forecast.setDate(date);
		forecast.setLocation(location);
		
		entry.getValue().forEach(place -> {
			WeatherForecastDetails detail = new WeatherForecastDetails();
			detail.setPhenomenon(place.place().getPhenomenon());
			detail.setTemperatureMin(place.place().getTemperatureMin());
			detail.setTemperatureMax(place.place().getTemperatureMax());
			detail.setForecastType(place.forecastType());
			forecast.addWeatherForecastDetails(detail);
		});
		
		return forecast;
	}
	
	private record LocationWithForecast(WeatherForecastDto.PlaceDto place, ForecastType forecastType) {
		String location() {
			return place.getLocation();
		}
	}
}


File: ./weather-sync/src/main/java/ee/tenman/sync/external/WeatherForecastDto.java
package ee.tenman.sync.external;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

@JacksonXmlRootElement(localName = "forecasts")
@Data
@NoArgsConstructor
@AllArgsConstructor
public class WeatherForecastDto {
	
	@JacksonXmlElementWrapper(useWrapping = false)
	@JacksonXmlProperty(localName = "forecast")
	private List<ForecastDto> forecasts;
	
	@Data
	@NoArgsConstructor
	@AllArgsConstructor
	public static class ForecastDto {
		@JsonProperty("date")
		private LocalDate date;
		
		@JacksonXmlProperty(localName = "night")
		private NightDayDto night;
		
		@JacksonXmlProperty(localName = "day")
		private NightDayDto day;
	}
	
	@Data
	@NoArgsConstructor
	@AllArgsConstructor
	public static class NightDayDto {
		@JacksonXmlElementWrapper(useWrapping = false)
		@JacksonXmlProperty(localName = "place")
		private List<PlaceDto> places = new ArrayList<>();
	}
	
	@Data
	@NoArgsConstructor
	@AllArgsConstructor
	public static class PlaceDto {
		@JacksonXmlProperty(localName = "name")
		private String location;
		
		@JacksonXmlProperty(localName = "phenomenon")
		private String phenomenon;
		
		@JacksonXmlProperty(localName = "tempmin")
		private Double temperatureMin;
		
		@JacksonXmlProperty(localName = "tempmax")
		private Double temperatureMax;
	}
}


File: ./weather-sync/src/main/java/ee/tenman/sync/external/WeatherServiceClient.java
package ee.tenman.sync.external;

import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.GetMapping;

import static org.springframework.http.MediaType.APPLICATION_XML_VALUE;

@FeignClient(name = "weather-service", url = "${ilmateenistus.url}")
public interface WeatherServiceClient {
	@GetMapping(value = "/ilma_andmed/xml/forecast.php?lang=eng", consumes = APPLICATION_XML_VALUE)
	WeatherForecastDto getWeatherForecast();
}


