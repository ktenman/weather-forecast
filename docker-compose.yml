services:
  postgres:
    image: postgres:16.3-alpine
    environment:
      POSTGRES_DB: weather
      POSTGRES_PASSWORD: weather
      POSTGRES_USER: weather
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U weather']
      interval: 3s
      timeout: 1s
      retries: 5

  redis:
    image: redis:7.2-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 3s
      timeout: 1s
      retries: 5

  db-migration:
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/weather
      SPRING_DATASOURCE_USERNAME: weather
      SPRING_DATASOURCE_PASSWORD: weather
    build:
      context: .
      dockerfile: Dockerfile.migration
    depends_on:
      - postgres

  sync:
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/weather
      SPRING_DATASOURCE_USERNAME: weather
      SPRING_DATASOURCE_PASSWORD: weather
    build:
      context: .
      dockerfile: Dockerfile.sync
    depends_on:
      - db-migration
      - redis

  backend:
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/weather
      SPRING_DATASOURCE_USERNAME: weather
      SPRING_DATASOURCE_PASSWORD: weather
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - '8080:8080'
    depends_on:
      - sync

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    depends_on:
      - backend

  app:
    image: nginx:alpine
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend

volumes:
  postgres_data:
  redis_data:
